[
  {
    "kind": "interface",
    "name": "DiscordUser",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 47,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "https://discord.com/developers/docs/resources/user#user-object"
    },
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "username",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 49,
            "col": 4
          },
          "jsDoc": {
            "doc": "The user's username, not unique across the platform"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "locale",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 51,
            "col": 4
          },
          "jsDoc": {
            "doc": "The user's chosen language option"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "flags",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 53,
            "col": 4
          },
          "jsDoc": {
            "doc": "The flags on a user's account"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "UserFlags",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "UserFlags"
            }
          },
          "typeParams": []
        },
        {
          "name": "premium_type",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 55,
            "col": 4
          },
          "jsDoc": {
            "doc": "The type of Nitro subscription on a user's account"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "PremiumTypes",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "PremiumTypes"
            }
          },
          "typeParams": []
        },
        {
          "name": "public_flags",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 57,
            "col": 4
          },
          "jsDoc": {
            "doc": "The public flags on a user's account"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "UserFlags",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "UserFlags"
            }
          },
          "typeParams": []
        },
        {
          "name": "accent_color",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 59,
            "col": 4
          },
          "jsDoc": {
            "doc": "the user's banner color encoded as an integer representation of hexadecimal color code"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 62,
            "col": 4
          },
          "jsDoc": {
            "doc": "The user's id"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "discriminator",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 64,
            "col": 4
          },
          "jsDoc": {
            "doc": "The user's 4-digit discord-tag"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "avatar",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 66,
            "col": 4
          },
          "jsDoc": {
            "doc": "The user's avatar hash"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              },
              {
                "repr": "null",
                "kind": "keyword",
                "keyword": "null"
              }
            ]
          },
          "typeParams": []
        },
        {
          "name": "bot",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 68,
            "col": 4
          },
          "jsDoc": {
            "doc": "Whether the user belongs to an OAuth2 application"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        },
        {
          "name": "system",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 70,
            "col": 4
          },
          "jsDoc": {
            "doc": "Whether the user is an Official Discord System user (part of the urgent message system)"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        },
        {
          "name": "mfa_enabled",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 72,
            "col": 4
          },
          "jsDoc": {
            "doc": "Whether the user has two factor enabled on their account"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        },
        {
          "name": "verified",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 74,
            "col": 4
          },
          "jsDoc": {
            "doc": "Whether the email on this account has been verified"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        },
        {
          "name": "email",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 76,
            "col": 4
          },
          "jsDoc": {
            "doc": "The user's email"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              },
              {
                "repr": "null",
                "kind": "keyword",
                "keyword": "null"
              }
            ]
          },
          "typeParams": []
        },
        {
          "name": "banner",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 78,
            "col": 4
          },
          "jsDoc": {
            "doc": "the user's banner, or null if unset"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "DiscordConnection",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 82,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "https://discord.com/developers/docs/resources/user#connection-object"
    },
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 84,
            "col": 4
          },
          "jsDoc": {
            "doc": "id of the connection account"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "name",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 86,
            "col": 4
          },
          "jsDoc": {
            "doc": "The username of the connection account"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "type",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 88,
            "col": 4
          },
          "jsDoc": {
            "doc": "The service of the connection (twitch, youtube)"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "revoked",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 90,
            "col": 4
          },
          "jsDoc": {
            "doc": "Whether the connection is revoked"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        },
        {
          "name": "verified",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 92,
            "col": 4
          },
          "jsDoc": {
            "doc": "Whether the connection is verified"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        },
        {
          "name": "friendSync",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 94,
            "col": 4
          },
          "jsDoc": {
            "doc": "Whether friend sync is enabled for this connection"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        },
        {
          "name": "showActivity",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 96,
            "col": 4
          },
          "jsDoc": {
            "doc": "Whether activities related to this connection will be shown in presence updates"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        },
        {
          "name": "visibility",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 98,
            "col": 4
          },
          "jsDoc": {
            "doc": "Visibility of this connection"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "VisibilityTypes",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "VisibilityTypes"
            }
          },
          "typeParams": []
        },
        {
          "name": "integrations",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 101,
            "col": 4
          },
          "jsDoc": {
            "doc": "An array of partial server integrations"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "DiscordIntegration",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "DiscordIntegration"
              }
            }
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "DiscordIntegration",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 105,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "https://discord.com/developers/docs/resources/guild#integration-object-integration-structure"
    },
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 107,
            "col": 4
          },
          "jsDoc": {
            "doc": "Integration Id"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "name",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 109,
            "col": 4
          },
          "jsDoc": {
            "doc": "Integration name"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "type",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 111,
            "col": 4
          },
          "jsDoc": {
            "doc": "Integration type (twitch, youtube or discord)"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "twitch",
                "kind": "literal",
                "literal": {
                  "kind": "string",
                  "string": "twitch"
                }
              },
              {
                "repr": "youtube",
                "kind": "literal",
                "literal": {
                  "kind": "string",
                  "string": "youtube"
                }
              },
              {
                "repr": "discord",
                "kind": "literal",
                "literal": {
                  "kind": "string",
                  "string": "discord"
                }
              }
            ]
          },
          "typeParams": []
        },
        {
          "name": "enabled",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 113,
            "col": 4
          },
          "jsDoc": {
            "doc": "Is this integration enabled"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        },
        {
          "name": "syncing",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 115,
            "col": 4
          },
          "jsDoc": {
            "doc": "Is this integration syncing"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        },
        {
          "name": "role_id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 117,
            "col": 4
          },
          "jsDoc": {
            "doc": "Role Id that this integration uses for \"subscribers\""
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "enable_emoticons",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 119,
            "col": 4
          },
          "jsDoc": {
            "doc": "Whether emoticons should be synced for this integration (twitch only currently)"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        },
        {
          "name": "expire_behavior",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 121,
            "col": 4
          },
          "jsDoc": {
            "doc": "The behavior of expiring subscribers"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "IntegrationExpireBehaviors",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "IntegrationExpireBehaviors"
            }
          },
          "typeParams": []
        },
        {
          "name": "expire_grace_period",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 123,
            "col": 4
          },
          "jsDoc": {
            "doc": "The grace period (in days) before expiring subscribers"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "synced_at",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 125,
            "col": 4
          },
          "jsDoc": {
            "doc": "When this integration was last synced"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "subscriber_count",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 127,
            "col": 4
          },
          "jsDoc": {
            "doc": "How many subscribers this integration has"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "revoked",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 129,
            "col": 4
          },
          "jsDoc": {
            "doc": "Has this integration been revoked"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        },
        {
          "name": "user",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 132,
            "col": 4
          },
          "jsDoc": {
            "doc": "User for this integration"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "DiscordUser",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "DiscordUser"
            }
          },
          "typeParams": []
        },
        {
          "name": "account",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 134,
            "col": 4
          },
          "jsDoc": {
            "doc": "Integration account information"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "DiscordIntegrationAccount",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "DiscordIntegrationAccount"
            }
          },
          "typeParams": []
        },
        {
          "name": "application",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 136,
            "col": 4
          },
          "jsDoc": {
            "doc": "The bot/OAuth2 application for discord integrations"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "DiscordIntegrationApplication",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "DiscordIntegrationApplication"
            }
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "DiscordIntegrationAccount",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 140,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "https://discord.com/developers/docs/resources/guild#integration-account-object-integration-account-structure"
    },
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 142,
            "col": 4
          },
          "jsDoc": {
            "doc": "Id of the account"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "name",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 144,
            "col": 4
          },
          "jsDoc": {
            "doc": "Name of the account"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "DiscordIntegrationApplication",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 148,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "https://discord.com/developers/docs/resources/guild#integration-application-object-integration-application-structure"
    },
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 150,
            "col": 4
          },
          "jsDoc": {
            "doc": "The id of the app"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "name",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 152,
            "col": 4
          },
          "jsDoc": {
            "doc": "The name of the app"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "icon",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 154,
            "col": 4
          },
          "jsDoc": {
            "doc": "the icon hash of the app"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              },
              {
                "repr": "null",
                "kind": "keyword",
                "keyword": "null"
              }
            ]
          },
          "typeParams": []
        },
        {
          "name": "description",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 156,
            "col": 4
          },
          "jsDoc": {
            "doc": "The description of the app"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "bot",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 159,
            "col": 4
          },
          "jsDoc": {
            "doc": "The bot associated with this application"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "DiscordUser",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "DiscordUser"
            }
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "DiscordIntegrationCreateUpdate",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 163,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "https://github.com/discord/discord-api-docs/blob/master/docs/topics/Gateway.md#integration-create-event-additional-fields"
    },
    "interfaceDef": {
      "extends": [
        {
          "repr": "DiscordIntegration",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "DiscordIntegration"
          }
        }
      ],
      "methods": [],
      "properties": [
        {
          "name": "guild_id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 165,
            "col": 4
          },
          "jsDoc": {
            "doc": "Id of the guild"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "DiscordIntegrationDelete",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 169,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "https://github.com/discord/discord-api-docs/blob/master/docs/topics/Gateway.md#integration-delete-event-fields"
    },
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 171,
            "col": 4
          },
          "jsDoc": {
            "doc": "Integration id"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "guild_id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 173,
            "col": 4
          },
          "jsDoc": {
            "doc": "Id of the guild"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "application_id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 175,
            "col": 4
          },
          "jsDoc": {
            "doc": "Id of the bot/OAuth2 application for this discord integration"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "DiscordGuildIntegrationsUpdate",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 179,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "https://discord.com/developers/docs/topics/gateway#guild-integrations-update"
    },
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "guild_id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 181,
            "col": 4
          },
          "jsDoc": {
            "doc": "id of the guild whose integrations were updated"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "DiscordTypingStart",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 185,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "https://discord.com/developers/docs/topics/gateway#typing-start"
    },
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "timestamp",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 187,
            "col": 4
          },
          "jsDoc": {
            "doc": "Unix time (in seconds) of when the user started typing"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "channel_id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 190,
            "col": 4
          },
          "jsDoc": {
            "doc": "id of the channel"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "guild_id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 192,
            "col": 4
          },
          "jsDoc": {
            "doc": "id of the guild"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "user_id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 194,
            "col": 4
          },
          "jsDoc": {
            "doc": "id of the user"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "member",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 196,
            "col": 4
          },
          "jsDoc": {
            "doc": "The member who started typing if this happened in a guild"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "DiscordMember",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "DiscordMember"
            }
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "DiscordMember",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 200,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "https://discord.com/developers/docs/resources/guild#guild-member-object"
    },
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "deaf",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 202,
            "col": 4
          },
          "jsDoc": {
            "doc": "Whether the user is deafened in voice channels"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        },
        {
          "name": "mute",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 204,
            "col": 4
          },
          "jsDoc": {
            "doc": "Whether the user is muted in voice channels"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        },
        {
          "name": "pending",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 206,
            "col": 4
          },
          "jsDoc": {
            "doc": "Whether the user has not yet passed the guild's Membership Screening requirements"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        },
        {
          "name": "user",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 209,
            "col": 4
          },
          "jsDoc": {
            "doc": "The user this guild member represents"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "DiscordUser",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "DiscordUser"
            }
          },
          "typeParams": []
        },
        {
          "name": "nick",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 211,
            "col": 4
          },
          "jsDoc": {
            "doc": "This users guild nickname"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              },
              {
                "repr": "null",
                "kind": "keyword",
                "keyword": "null"
              }
            ]
          },
          "typeParams": []
        },
        {
          "name": "avatar",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 213,
            "col": 4
          },
          "jsDoc": {
            "doc": "The members custom avatar for this server."
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "roles",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 215,
            "col": 4
          },
          "jsDoc": {
            "doc": "Array of role object ids"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            }
          },
          "typeParams": []
        },
        {
          "name": "joined_at",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 217,
            "col": 4
          },
          "jsDoc": {
            "doc": "When the user joined the guild"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "premium_since",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 219,
            "col": 4
          },
          "jsDoc": {
            "doc": "When the user started boosting the guild"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              },
              {
                "repr": "null",
                "kind": "keyword",
                "keyword": "null"
              }
            ]
          },
          "typeParams": []
        },
        {
          "name": "permissions",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 221,
            "col": 4
          },
          "jsDoc": {
            "doc": "The permissions this member has in the guild. Only present on interaction events."
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "communication_disabled_until",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 223,
            "col": 4
          },
          "jsDoc": {
            "doc": "when the user's timeout will expire and the user will be able to communicate in the guild again, null or a time in the past if the user is not timed out"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              },
              {
                "repr": "null",
                "kind": "keyword",
                "keyword": "null"
              }
            ]
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "DiscordApplication",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 227,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "https://discord.com/developers/docs/topics/oauth2#application-object"
    },
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "name",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 229,
            "col": 4
          },
          "jsDoc": {
            "doc": "The name of the app"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "description",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 231,
            "col": 4
          },
          "jsDoc": {
            "doc": "The description of the app"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "rpc_origins",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 233,
            "col": 4
          },
          "jsDoc": {
            "doc": "An array of rpc origin urls, if rpc is enabled"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            }
          },
          "typeParams": []
        },
        {
          "name": "terms_of_service_url",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 235,
            "col": 4
          },
          "jsDoc": {
            "doc": "The url of the app's terms of service"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "privacy_policy_url",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 237,
            "col": 4
          },
          "jsDoc": {
            "doc": "The url of the app's privacy policy"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "verify_key",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 239,
            "col": 4
          },
          "jsDoc": {
            "doc": "The hex encoded key for verification in interactions and the GameSDK's GetTicket"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "primary_sku_id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 241,
            "col": 4
          },
          "jsDoc": {
            "doc": "If this application is a game sold on Discord, this field will be the id of the \"Game SKU\" that is created, if exists"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "slug",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 243,
            "col": 4
          },
          "jsDoc": {
            "doc": "If this application is a game sold on Discord, this field will be the URL slug that links to the store page"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "flags",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 245,
            "col": 4
          },
          "jsDoc": {
            "doc": "The application's public flags"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "ApplicationFlags",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "ApplicationFlags"
            }
          },
          "typeParams": []
        },
        {
          "name": "id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 248,
            "col": 4
          },
          "jsDoc": {
            "doc": "The id of the app"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "icon",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 250,
            "col": 4
          },
          "jsDoc": {
            "doc": "The icon hash of the app"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              },
              {
                "repr": "null",
                "kind": "keyword",
                "keyword": "null"
              }
            ]
          },
          "typeParams": []
        },
        {
          "name": "bot_public",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 252,
            "col": 4
          },
          "jsDoc": {
            "doc": "When false only app owner can join the app's bot to guilds"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        },
        {
          "name": "bot_require_code_grant",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 254,
            "col": 4
          },
          "jsDoc": {
            "doc": "When true the app's bot will only join upon completion of the full oauth2 code grant flow"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        },
        {
          "name": "owner",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 256,
            "col": 4
          },
          "jsDoc": {
            "doc": "Partial user object containing info on the owner of the application"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "Partial",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": [
                {
                  "repr": "DiscordUser",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "DiscordUser"
                  }
                }
              ],
              "typeName": "Partial"
            }
          },
          "typeParams": []
        },
        {
          "name": "team",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 258,
            "col": 4
          },
          "jsDoc": {
            "doc": "If the application belongs to a team, this will be a list of the members of that team"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "DiscordTeam",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "DiscordTeam"
                }
              },
              {
                "repr": "null",
                "kind": "keyword",
                "keyword": "null"
              }
            ]
          },
          "typeParams": []
        },
        {
          "name": "guild_id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 260,
            "col": 4
          },
          "jsDoc": {
            "doc": "If this application is a game sold on Discord, this field will be the guild to which it has been linked"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "cover_image",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 262,
            "col": 4
          },
          "jsDoc": {
            "doc": "If this application is a game sold on Discord, this field will be the hash of the image on store embeds"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "tags",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 264,
            "col": 4
          },
          "jsDoc": {
            "doc": "up to 5 tags describing the content and functionality of the application"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            }
          },
          "typeParams": []
        },
        {
          "name": "install_params",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 266,
            "col": 4
          },
          "jsDoc": {
            "doc": "settings for the application's default in-app authorization link, if enabled"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "DiscordInstallParams",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "DiscordInstallParams"
            }
          },
          "typeParams": []
        },
        {
          "name": "custom_install_url",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 268,
            "col": 4
          },
          "jsDoc": {
            "doc": "the application's default custom authorization link, if enabled"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "DiscordTeam",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 272,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "https://discord.com/developers/docs/topics/teams#data-models-team-object"
    },
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "icon",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 274,
            "col": 4
          },
          "jsDoc": {
            "doc": "A hash of the image of the team's icon"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              },
              {
                "repr": "null",
                "kind": "keyword",
                "keyword": "null"
              }
            ]
          },
          "typeParams": []
        },
        {
          "name": "id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 276,
            "col": 4
          },
          "jsDoc": {
            "doc": "The unique id of the team"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "members",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 278,
            "col": 4
          },
          "jsDoc": {
            "doc": "The members of the team"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "DiscordTeamMember",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "DiscordTeamMember"
              }
            }
          },
          "typeParams": []
        },
        {
          "name": "owner_user_id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 280,
            "col": 4
          },
          "jsDoc": {
            "doc": "The user id of the current team owner"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "name",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 282,
            "col": 4
          },
          "jsDoc": {
            "doc": "The name of the team"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "DiscordTeamMember",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 286,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "https://discord.com/developers/docs/topics/teams#data-models-team-members-object"
    },
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "membership_state",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 288,
            "col": 4
          },
          "jsDoc": {
            "doc": "The user's membership state on the team"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "TeamMembershipStates",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "TeamMembershipStates"
            }
          },
          "typeParams": []
        },
        {
          "name": "permissions",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 290,
            "col": 4
          },
          "jsDoc": {
            "doc": "Will always be `[\"*\"]`"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "*",
              "kind": "literal",
              "literal": {
                "kind": "string",
                "string": "*"
              }
            }
          },
          "typeParams": []
        },
        {
          "name": "team_id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 293,
            "col": 4
          },
          "jsDoc": {
            "doc": "The id of the parent team of which they are a member"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "user",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 295,
            "col": 4
          },
          "jsDoc": {
            "doc": "The avatar, discriminator, id, and username of the user"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "",
            "kind": "intersection",
            "intersection": [
              {
                "repr": "Partial",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": [
                    {
                      "repr": "DiscordUser",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "DiscordUser"
                      }
                    }
                  ],
                  "typeName": "Partial"
                }
              },
              {
                "repr": "Pick",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": [
                    {
                      "repr": "DiscordUser",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "DiscordUser"
                      }
                    },
                    {
                      "repr": "",
                      "kind": "union",
                      "union": [
                        {
                          "repr": "avatar",
                          "kind": "literal",
                          "literal": {
                            "kind": "string",
                            "string": "avatar"
                          }
                        },
                        {
                          "repr": "discriminator",
                          "kind": "literal",
                          "literal": {
                            "kind": "string",
                            "string": "discriminator"
                          }
                        },
                        {
                          "repr": "id",
                          "kind": "literal",
                          "literal": {
                            "kind": "string",
                            "string": "id"
                          }
                        },
                        {
                          "repr": "username",
                          "kind": "literal",
                          "literal": {
                            "kind": "string",
                            "string": "username"
                          }
                        }
                      ]
                    }
                  ],
                  "typeName": "Pick"
                }
              }
            ]
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "DiscordWebhookUpdate",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 299,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "https://discord.com/developers/docs/topics/gateway#webhooks-update-webhook-update-event-fields"
    },
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "guild_id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 301,
            "col": 4
          },
          "jsDoc": {
            "doc": "id of the guild"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "channel_id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 303,
            "col": 4
          },
          "jsDoc": {
            "doc": "id of the channel"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "DiscordAllowedMentions",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 307,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "https://discord.com/developers/docs/resources/channel#allowed-mentions-object"
    },
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "parse",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 309,
            "col": 4
          },
          "jsDoc": {
            "doc": "An array of allowed mention types to parse from the content."
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "AllowedMentionsTypes",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "AllowedMentionsTypes"
              }
            }
          },
          "typeParams": []
        },
        {
          "name": "replied_user",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 311,
            "col": 4
          },
          "jsDoc": {
            "doc": "For replies, whether to mention the author of the message being replied to (default false)"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        },
        {
          "name": "roles",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 314,
            "col": 4
          },
          "jsDoc": {
            "doc": "Array of role_ids to mention (Max size of 100)"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            }
          },
          "typeParams": []
        },
        {
          "name": "users",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 316,
            "col": 4
          },
          "jsDoc": {
            "doc": "Array of user_ids to mention (Max size of 100)"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            }
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "DiscordEmbed",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 320,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "https://discord.com/developers/docs/resources/channel#embed-object"
    },
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "title",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 322,
            "col": 4
          },
          "jsDoc": {
            "doc": "Title of embed"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "type",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 324,
            "col": 4
          },
          "jsDoc": {
            "doc": "Type of embed (always \"rich\" for webhook embeds)"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "EmbedTypes",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "EmbedTypes"
            }
          },
          "typeParams": []
        },
        {
          "name": "description",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 326,
            "col": 4
          },
          "jsDoc": {
            "doc": "Description of embed"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "url",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 328,
            "col": 4
          },
          "jsDoc": {
            "doc": "Url of embed"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "color",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 330,
            "col": 4
          },
          "jsDoc": {
            "doc": "Color code of the embed"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "timestamp",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 333,
            "col": 4
          },
          "jsDoc": {
            "doc": "Timestamp of embed content"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "footer",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 335,
            "col": 4
          },
          "jsDoc": {
            "doc": "Footer information"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "DiscordEmbedFooter",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "DiscordEmbedFooter"
            }
          },
          "typeParams": []
        },
        {
          "name": "image",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 337,
            "col": 4
          },
          "jsDoc": {
            "doc": "Image information"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "DiscordEmbedImage",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "DiscordEmbedImage"
            }
          },
          "typeParams": []
        },
        {
          "name": "thumbnail",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 339,
            "col": 4
          },
          "jsDoc": {
            "doc": "Thumbnail information"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "DiscordEmbedThumbnail",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "DiscordEmbedThumbnail"
            }
          },
          "typeParams": []
        },
        {
          "name": "video",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 341,
            "col": 4
          },
          "jsDoc": {
            "doc": "Video information"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "DiscordEmbedVideo",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "DiscordEmbedVideo"
            }
          },
          "typeParams": []
        },
        {
          "name": "provider",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 343,
            "col": 4
          },
          "jsDoc": {
            "doc": "Provider information"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "DiscordEmbedProvider",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "DiscordEmbedProvider"
            }
          },
          "typeParams": []
        },
        {
          "name": "author",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 345,
            "col": 4
          },
          "jsDoc": {
            "doc": "Author information"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "DiscordEmbedAuthor",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "DiscordEmbedAuthor"
            }
          },
          "typeParams": []
        },
        {
          "name": "fields",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 347,
            "col": 4
          },
          "jsDoc": {
            "doc": "Fields information"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "DiscordEmbedField",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "DiscordEmbedField"
              }
            }
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "DiscordEmbedAuthor",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 351,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "https://discord.com/developers/docs/resources/channel#embed-object-embed-author-structure"
    },
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "name",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 353,
            "col": 4
          },
          "jsDoc": {
            "doc": "Name of author"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "url",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 355,
            "col": 4
          },
          "jsDoc": {
            "doc": "Url of author"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "icon_url",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 357,
            "col": 4
          },
          "jsDoc": {
            "doc": "Url of author icon (only supports http(s) and attachments)"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "proxy_icon_url",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 359,
            "col": 4
          },
          "jsDoc": {
            "doc": "A proxied url of author icon"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "DiscordEmbedField",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 363,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "https://discord.com/developers/docs/resources/channel#embed-object-embed-field-structure"
    },
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "name",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 365,
            "col": 4
          },
          "jsDoc": {
            "doc": "Name of the field"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "value",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 367,
            "col": 4
          },
          "jsDoc": {
            "doc": "Value of the field"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "inline",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 369,
            "col": 4
          },
          "jsDoc": {
            "doc": "Whether or not this field should display inline"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "DiscordEmbedFooter",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 373,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "https://discord.com/developers/docs/resources/channel#embed-object-embed-footer-structure"
    },
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "text",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 375,
            "col": 4
          },
          "jsDoc": {
            "doc": "Footer text"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "icon_url",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 377,
            "col": 4
          },
          "jsDoc": {
            "doc": "Url of footer icon (only supports http(s) and attachments)"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "proxy_icon_url",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 379,
            "col": 4
          },
          "jsDoc": {
            "doc": "A proxied url of footer icon"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "DiscordEmbedImage",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 383,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "https://discord.com/developers/docs/resources/channel#embed-object-embed-image-structure"
    },
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "url",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 385,
            "col": 4
          },
          "jsDoc": {
            "doc": "Source url of image (only supports http(s) and attachments)"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "proxy_url",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 387,
            "col": 4
          },
          "jsDoc": {
            "doc": "A proxied url of the image"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "height",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 389,
            "col": 4
          },
          "jsDoc": {
            "doc": "Height of image"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "width",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 391,
            "col": 4
          },
          "jsDoc": {
            "doc": "Width of image"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "DiscordEmbedProvider",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 394,
      "col": 0
    },
    "declarationKind": "export",
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "name",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 396,
            "col": 4
          },
          "jsDoc": {
            "doc": "Name of provider"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "url",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 398,
            "col": 4
          },
          "jsDoc": {
            "doc": "Url of provider"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "DiscordEmbedThumbnail",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 402,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "https://discord.com/developers/docs/resources/channel#embed-object-embed-thumbnail-structure"
    },
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "url",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 404,
            "col": 4
          },
          "jsDoc": {
            "doc": "Source url of thumbnail (only supports http(s) and attachments)"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "proxy_url",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 406,
            "col": 4
          },
          "jsDoc": {
            "doc": "A proxied url of the thumbnail"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "height",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 408,
            "col": 4
          },
          "jsDoc": {
            "doc": "Height of thumbnail"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "width",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 410,
            "col": 4
          },
          "jsDoc": {
            "doc": "Width of thumbnail"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "DiscordEmbedVideo",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 414,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "https://discord.com/developers/docs/resources/channel#embed-object-embed-video-structure"
    },
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "url",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 416,
            "col": 4
          },
          "jsDoc": {
            "doc": "Source url of video"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "proxy_url",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 418,
            "col": 4
          },
          "jsDoc": {
            "doc": "A proxied url of the video"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "height",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 420,
            "col": 4
          },
          "jsDoc": {
            "doc": "Height of video"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "width",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 422,
            "col": 4
          },
          "jsDoc": {
            "doc": "Width of video"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "DiscordAttachment",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 426,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "https://discord.com/developers/docs/resources/channel#attachment-object"
    },
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "filename",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 428,
            "col": 4
          },
          "jsDoc": {
            "doc": "Name of file attached"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "content_type",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 430,
            "col": 4
          },
          "jsDoc": {
            "doc": "The attachment's [media type](https://en.wikipedia.org/wiki/Media_type)"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "size",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 432,
            "col": 4
          },
          "jsDoc": {
            "doc": "Size of file in bytes"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "url",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 434,
            "col": 4
          },
          "jsDoc": {
            "doc": "Source url of file"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "proxy_url",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 436,
            "col": 4
          },
          "jsDoc": {
            "doc": "A proxied url of file"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 439,
            "col": 4
          },
          "jsDoc": {
            "doc": "Attachment id"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "height",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 441,
            "col": 4
          },
          "jsDoc": {
            "doc": "Height of file (if image)"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "number",
                "kind": "keyword",
                "keyword": "number"
              },
              {
                "repr": "null",
                "kind": "keyword",
                "keyword": "null"
              }
            ]
          },
          "typeParams": []
        },
        {
          "name": "width",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 443,
            "col": 4
          },
          "jsDoc": {
            "doc": "Width of file (if image)"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "number",
                "kind": "keyword",
                "keyword": "number"
              },
              {
                "repr": "null",
                "kind": "keyword",
                "keyword": "null"
              }
            ]
          },
          "typeParams": []
        },
        {
          "name": "ephemeral",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 445,
            "col": 4
          },
          "jsDoc": {
            "doc": "whether this attachment is ephemeral. Ephemeral attachments will automatically be removed after a set period of time. Ephemeral attachments on messages are guaranteed to be available as long as the message itself exists."
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "typeAlias",
    "name": "DiscordWebhook",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 449,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "https://discord.com/developers/docs/resources/webhook#webhook-object-webhook-structure"
    },
    "typeAliasDef": {
      "tsType": {
        "repr": "",
        "kind": "union",
        "union": [
          {
            "repr": "DiscordIncomingWebhook",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "DiscordIncomingWebhook"
            }
          },
          {
            "repr": "DiscordApplicationWebhook",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "DiscordApplicationWebhook"
            }
          }
        ]
      },
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "DiscordIncomingWebhook",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 451,
      "col": 0
    },
    "declarationKind": "export",
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "type",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 453,
            "col": 4
          },
          "jsDoc": {
            "doc": "The type of the webhook"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "WebhookTypes",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "WebhookTypes"
            }
          },
          "typeParams": []
        },
        {
          "name": "token",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 455,
            "col": 4
          },
          "jsDoc": {
            "doc": "The secure token of the webhook (returned for Incoming Webhooks)"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "url",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 457,
            "col": 4
          },
          "jsDoc": {
            "doc": "The url used for executing the webhook (returned by the webhooks OAuth2 flow)"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 460,
            "col": 4
          },
          "jsDoc": {
            "doc": "The id of the webhook"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "guild_id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 462,
            "col": 4
          },
          "jsDoc": {
            "doc": "The guild id this webhook is for"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "channel_id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 464,
            "col": 4
          },
          "jsDoc": {
            "doc": "The channel id this webhook is for"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "user",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 466,
            "col": 4
          },
          "jsDoc": {
            "doc": "The user this webhook was created by (not returned when getting a webhook with its token)"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "DiscordUser",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "DiscordUser"
            }
          },
          "typeParams": []
        },
        {
          "name": "name",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 468,
            "col": 4
          },
          "jsDoc": {
            "doc": "The default name of the webhook"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              },
              {
                "repr": "null",
                "kind": "keyword",
                "keyword": "null"
              }
            ]
          },
          "typeParams": []
        },
        {
          "name": "avatar",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 470,
            "col": 4
          },
          "jsDoc": {
            "doc": "The default user avatar hash of the webhook"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              },
              {
                "repr": "null",
                "kind": "keyword",
                "keyword": "null"
              }
            ]
          },
          "typeParams": []
        },
        {
          "name": "application_id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 472,
            "col": 4
          },
          "jsDoc": {
            "doc": "The bot/OAuth2 application that created this webhook"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              },
              {
                "repr": "null",
                "kind": "keyword",
                "keyword": "null"
              }
            ]
          },
          "typeParams": []
        },
        {
          "name": "source_guild",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 474,
            "col": 4
          },
          "jsDoc": {
            "doc": "The guild of the channel that this webhook is following (returned for Channel Follower Webhooks)"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "Partial",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": [
                {
                  "repr": "DiscordGuild",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "DiscordGuild"
                  }
                }
              ],
              "typeName": "Partial"
            }
          },
          "typeParams": []
        },
        {
          "name": "source_channel",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 476,
            "col": 4
          },
          "jsDoc": {
            "doc": "The channel that this webhook is following (returned for Channel Follower Webhooks)"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "Partial",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": [
                {
                  "repr": "DiscordChannel",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "DiscordChannel"
                  }
                }
              ],
              "typeName": "Partial"
            }
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "DiscordApplicationWebhook",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 479,
      "col": 0
    },
    "declarationKind": "export",
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "type",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 481,
            "col": 4
          },
          "jsDoc": {
            "doc": "The type of the webhook"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "WebhookTypes.Application",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "WebhookTypes.Application"
            }
          },
          "typeParams": []
        },
        {
          "name": "token",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 483,
            "col": 4
          },
          "jsDoc": {
            "doc": "The secure token of the webhook (returned for Incoming Webhooks)"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "url",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 485,
            "col": 4
          },
          "jsDoc": {
            "doc": "The url used for executing the webhook (returned by the webhooks OAuth2 flow)"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 488,
            "col": 4
          },
          "jsDoc": {
            "doc": "The id of the webhook"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "guild_id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 490,
            "col": 4
          },
          "jsDoc": {
            "doc": "The guild id this webhook is for"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              },
              {
                "repr": "null",
                "kind": "keyword",
                "keyword": "null"
              }
            ]
          },
          "typeParams": []
        },
        {
          "name": "channel_id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 492,
            "col": 4
          },
          "jsDoc": {
            "doc": "The channel id this webhook is for"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              },
              {
                "repr": "null",
                "kind": "keyword",
                "keyword": "null"
              }
            ]
          },
          "typeParams": []
        },
        {
          "name": "user",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 494,
            "col": 4
          },
          "jsDoc": {
            "doc": "The user this webhook was created by (not returned when getting a webhook with its token)"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "DiscordUser",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "DiscordUser"
            }
          },
          "typeParams": []
        },
        {
          "name": "name",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 496,
            "col": 4
          },
          "jsDoc": {
            "doc": "The default name of the webhook"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              },
              {
                "repr": "null",
                "kind": "keyword",
                "keyword": "null"
              }
            ]
          },
          "typeParams": []
        },
        {
          "name": "avatar",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 498,
            "col": 4
          },
          "jsDoc": {
            "doc": "The default user avatar hash of the webhook"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              },
              {
                "repr": "null",
                "kind": "keyword",
                "keyword": "null"
              }
            ]
          },
          "typeParams": []
        },
        {
          "name": "application_id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 500,
            "col": 4
          },
          "jsDoc": {
            "doc": "The bot/OAuth2 application that created this webhook"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              },
              {
                "repr": "null",
                "kind": "keyword",
                "keyword": "null"
              }
            ]
          },
          "typeParams": []
        },
        {
          "name": "source_guild",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 502,
            "col": 4
          },
          "jsDoc": {
            "doc": "The guild of the channel that this webhook is following (returned for Channel Follower Webhooks)"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "Partial",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": [
                {
                  "repr": "DiscordGuild",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "DiscordGuild"
                  }
                }
              ],
              "typeName": "Partial"
            }
          },
          "typeParams": []
        },
        {
          "name": "source_channel",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 504,
            "col": 4
          },
          "jsDoc": {
            "doc": "The channel that this webhook is following (returned for Channel Follower Webhooks)"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "Partial",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": [
                {
                  "repr": "DiscordChannel",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "DiscordChannel"
                  }
                }
              ],
              "typeName": "Partial"
            }
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "DiscordGuild",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 508,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "https://discord.com/developers/docs/resources/guild#guild-object"
    },
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "name",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 510,
            "col": 4
          },
          "jsDoc": {
            "doc": "Guild name (2-100 characters, excluding trailing and leading whitespace)"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "owner",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 512,
            "col": 4
          },
          "jsDoc": {
            "doc": "True if the user is the owner of the guild"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        },
        {
          "name": "afk_timeout",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 514,
            "col": 4
          },
          "jsDoc": {
            "doc": "Afk timeout in seconds"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "widget_enabled",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 516,
            "col": 4
          },
          "jsDoc": {
            "doc": "True if the server widget is enabled"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        },
        {
          "name": "verification_level",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 518,
            "col": 4
          },
          "jsDoc": {
            "doc": "Verification level required for the guild"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "VerificationLevels",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "VerificationLevels"
            }
          },
          "typeParams": []
        },
        {
          "name": "default_message_notifications",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 520,
            "col": 4
          },
          "jsDoc": {
            "doc": "Default message notifications level"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "DefaultMessageNotificationLevels",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "DefaultMessageNotificationLevels"
            }
          },
          "typeParams": []
        },
        {
          "name": "explicit_content_filter",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 522,
            "col": 4
          },
          "jsDoc": {
            "doc": "Explicit content filter level"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "ExplicitContentFilterLevels",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "ExplicitContentFilterLevels"
            }
          },
          "typeParams": []
        },
        {
          "name": "features",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 524,
            "col": 4
          },
          "jsDoc": {
            "doc": "Enabled guild features"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "GuildFeatures",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "GuildFeatures"
              }
            }
          },
          "typeParams": []
        },
        {
          "name": "mfa_level",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 526,
            "col": 4
          },
          "jsDoc": {
            "doc": "Required MFA level for the guild"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "MfaLevels",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "MfaLevels"
            }
          },
          "typeParams": []
        },
        {
          "name": "system_channel_flags",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 528,
            "col": 4
          },
          "jsDoc": {
            "doc": "System channel flags"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "SystemChannelFlags",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "SystemChannelFlags"
            }
          },
          "typeParams": []
        },
        {
          "name": "large",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 530,
            "col": 4
          },
          "jsDoc": {
            "doc": "True if this is considered a large guild"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        },
        {
          "name": "unavailable",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 532,
            "col": 4
          },
          "jsDoc": {
            "doc": "True if this guild is unavailable due to an outage"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        },
        {
          "name": "member_count",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 534,
            "col": 4
          },
          "jsDoc": {
            "doc": "Total number of members in this guild"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "max_presences",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 536,
            "col": 4
          },
          "jsDoc": {
            "doc": "The maximum number of presences for the guild (the default value, currently 25000, is in effect when null is returned)"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "number",
                "kind": "keyword",
                "keyword": "number"
              },
              {
                "repr": "null",
                "kind": "keyword",
                "keyword": "null"
              }
            ]
          },
          "typeParams": []
        },
        {
          "name": "max_members",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 538,
            "col": 4
          },
          "jsDoc": {
            "doc": "The maximum number of members for the guild"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "vanity_url_code",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 540,
            "col": 4
          },
          "jsDoc": {
            "doc": "The vanity url code for the guild"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              },
              {
                "repr": "null",
                "kind": "keyword",
                "keyword": "null"
              }
            ]
          },
          "typeParams": []
        },
        {
          "name": "description",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 542,
            "col": 4
          },
          "jsDoc": {
            "doc": "The description of a guild"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              },
              {
                "repr": "null",
                "kind": "keyword",
                "keyword": "null"
              }
            ]
          },
          "typeParams": []
        },
        {
          "name": "premium_tier",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 544,
            "col": 4
          },
          "jsDoc": {
            "doc": "Premium tier (Server Boost level)"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "PremiumTiers",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "PremiumTiers"
            }
          },
          "typeParams": []
        },
        {
          "name": "premium_subscription_count",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 546,
            "col": 4
          },
          "jsDoc": {
            "doc": "The number of boosts this guild currently has"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "max_video_channel_users",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 548,
            "col": 4
          },
          "jsDoc": {
            "doc": "The maximum amount of users in a video channel"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "approximate_member_count",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 550,
            "col": 4
          },
          "jsDoc": {
            "doc": "Approximate number of members in this guild, returned from the GET /guilds/<id> endpoint when with_counts is true"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "approximate_presence_count",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 552,
            "col": 4
          },
          "jsDoc": {
            "doc": "Approximate number of non-offline members in this guild, returned from the GET /guilds/<id> endpoint when with_counts is true"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "nsfw_level",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 554,
            "col": 4
          },
          "jsDoc": {
            "doc": "Guild NSFW level"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "GuildNsfwLevel",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "GuildNsfwLevel"
            }
          },
          "typeParams": []
        },
        {
          "name": "premium_progress_bar_enabled",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 556,
            "col": 4
          },
          "jsDoc": {
            "doc": "Whether the guild has the boost progress bar enabled"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        },
        {
          "name": "id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 559,
            "col": 4
          },
          "jsDoc": {
            "doc": "Guild id"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "icon",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 561,
            "col": 4
          },
          "jsDoc": {
            "doc": "Icon hash"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              },
              {
                "repr": "null",
                "kind": "keyword",
                "keyword": "null"
              }
            ]
          },
          "typeParams": []
        },
        {
          "name": "icon_hash",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 563,
            "col": 4
          },
          "jsDoc": {
            "doc": "Icon hash, returned when in the template object"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              },
              {
                "repr": "null",
                "kind": "keyword",
                "keyword": "null"
              }
            ]
          },
          "typeParams": []
        },
        {
          "name": "splash",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 565,
            "col": 4
          },
          "jsDoc": {
            "doc": "Splash hash"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              },
              {
                "repr": "null",
                "kind": "keyword",
                "keyword": "null"
              }
            ]
          },
          "typeParams": []
        },
        {
          "name": "discovery_splash",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 567,
            "col": 4
          },
          "jsDoc": {
            "doc": "Discovery splash hash; only present for guilds with the \"DISCOVERABLE\" feature"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              },
              {
                "repr": "null",
                "kind": "keyword",
                "keyword": "null"
              }
            ]
          },
          "typeParams": []
        },
        {
          "name": "owner_id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 569,
            "col": 4
          },
          "jsDoc": {
            "doc": "Id of the owner"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "permissions",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 571,
            "col": 4
          },
          "jsDoc": {
            "doc": "Total permissions for the user in the guild (excludes overwrites)"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "afk_channel_id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 573,
            "col": 4
          },
          "jsDoc": {
            "doc": "Id of afk channel"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              },
              {
                "repr": "null",
                "kind": "keyword",
                "keyword": "null"
              }
            ]
          },
          "typeParams": []
        },
        {
          "name": "widget_channel_id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 575,
            "col": 4
          },
          "jsDoc": {
            "doc": "The channel id that the widget will generate an invite to, or null if set to no invite"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              },
              {
                "repr": "null",
                "kind": "keyword",
                "keyword": "null"
              }
            ]
          },
          "typeParams": []
        },
        {
          "name": "roles",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 577,
            "col": 4
          },
          "jsDoc": {
            "doc": "Roles in the guild"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "DiscordRole",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "DiscordRole"
              }
            }
          },
          "typeParams": []
        },
        {
          "name": "emojis",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 579,
            "col": 4
          },
          "jsDoc": {
            "doc": "Custom guild emojis"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "DiscordEmoji",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "DiscordEmoji"
              }
            }
          },
          "typeParams": []
        },
        {
          "name": "application_id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 581,
            "col": 4
          },
          "jsDoc": {
            "doc": "Application id of the guild creator if it is bot-created"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              },
              {
                "repr": "null",
                "kind": "keyword",
                "keyword": "null"
              }
            ]
          },
          "typeParams": []
        },
        {
          "name": "system_channel_id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 583,
            "col": 4
          },
          "jsDoc": {
            "doc": "The id of the channel where guild notices such as welcome messages and boost events are posted"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              },
              {
                "repr": "null",
                "kind": "keyword",
                "keyword": "null"
              }
            ]
          },
          "typeParams": []
        },
        {
          "name": "rules_channel_id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 585,
            "col": 4
          },
          "jsDoc": {
            "doc": "The id of the channel where community guilds can display rules and/or guidelines"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              },
              {
                "repr": "null",
                "kind": "keyword",
                "keyword": "null"
              }
            ]
          },
          "typeParams": []
        },
        {
          "name": "joined_at",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 587,
            "col": 4
          },
          "jsDoc": {
            "doc": "When this guild was joined at"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "voice_states",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 589,
            "col": 4
          },
          "jsDoc": {
            "doc": "States of members currently in voice channels; lacks the guild_id key"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "Omit",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "DiscordVoiceState",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "DiscordVoiceState"
                    }
                  },
                  {
                    "repr": "guildId",
                    "kind": "literal",
                    "literal": {
                      "kind": "string",
                      "string": "guildId"
                    }
                  }
                ],
                "typeName": "Omit"
              }
            }
          },
          "typeParams": []
        },
        {
          "name": "members",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 591,
            "col": 4
          },
          "jsDoc": {
            "doc": "Users in the guild"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "DiscordMember",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "DiscordMember"
              }
            }
          },
          "typeParams": []
        },
        {
          "name": "channels",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 593,
            "col": 4
          },
          "jsDoc": {
            "doc": "Channels in the guild"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "DiscordChannel",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "DiscordChannel"
              }
            }
          },
          "typeParams": []
        },
        {
          "name": "threads",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 596,
            "col": 4
          },
          "jsDoc": {
            "doc": "All active threads in the guild that the current user has permission to view"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "DiscordChannel",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "DiscordChannel"
              }
            }
          },
          "typeParams": []
        },
        {
          "name": "presences",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 598,
            "col": 4
          },
          "jsDoc": {
            "doc": "Presences of the members in the guild, will only include non-offline members if the size is greater than large threshold"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "Partial",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "DiscordPresenceUpdate",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "DiscordPresenceUpdate"
                    }
                  }
                ],
                "typeName": "Partial"
              }
            }
          },
          "typeParams": []
        },
        {
          "name": "banner",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 600,
            "col": 4
          },
          "jsDoc": {
            "doc": "Banner hash"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              },
              {
                "repr": "null",
                "kind": "keyword",
                "keyword": "null"
              }
            ]
          },
          "typeParams": []
        },
        {
          "name": "preferred_locale",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 603,
            "col": 4
          },
          "jsDoc": {
            "doc": "The preferred locale of a Community guild; used in server discovery and notices from Discord; defaults to \"en-US\""
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "public_updates_channel_id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 605,
            "col": 4
          },
          "jsDoc": {
            "doc": "The id of the channel where admins and moderators of Community guilds receive notices from Discord"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              },
              {
                "repr": "null",
                "kind": "keyword",
                "keyword": "null"
              }
            ]
          },
          "typeParams": []
        },
        {
          "name": "welcome_screen",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 607,
            "col": 4
          },
          "jsDoc": {
            "doc": "The welcome screen of a Community guild, shown to new members, returned in an Invite's guild object"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "DiscordWelcomeScreen",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "DiscordWelcomeScreen"
            }
          },
          "typeParams": []
        },
        {
          "name": "stage_instances",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 609,
            "col": 4
          },
          "jsDoc": {
            "doc": "Stage instances in the guild"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "DiscordStageInstance",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "DiscordStageInstance"
              }
            }
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "DiscordRole",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 613,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "https://discord.com/developers/docs/topics/permissions#role-object-role-structure"
    },
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 615,
            "col": 4
          },
          "jsDoc": {
            "doc": "Role id"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "hoist",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 617,
            "col": 4
          },
          "jsDoc": {
            "doc": "If this role is showed separately in the user listing"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        },
        {
          "name": "permissions",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 619,
            "col": 4
          },
          "jsDoc": {
            "doc": "Permission bit set"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "managed",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 621,
            "col": 4
          },
          "jsDoc": {
            "doc": "Whether this role is managed by an integration"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        },
        {
          "name": "mentionable",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 623,
            "col": 4
          },
          "jsDoc": {
            "doc": "Whether this role is mentionable"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        },
        {
          "name": "tags",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 625,
            "col": 4
          },
          "jsDoc": {
            "doc": "The tags this role has"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "DiscordRoleTags",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "DiscordRoleTags"
            }
          },
          "typeParams": []
        },
        {
          "name": "icon",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 627,
            "col": 4
          },
          "jsDoc": {
            "doc": "the role emoji hash"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "name",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 629,
            "col": 4
          },
          "jsDoc": {
            "doc": "Role name"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "color",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 631,
            "col": 4
          },
          "jsDoc": {
            "doc": "Integer representation of hexadecimal color code"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "position",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 633,
            "col": 4
          },
          "jsDoc": {
            "doc": "Position of this role"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "unicode_emoji",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 635,
            "col": 4
          },
          "jsDoc": {
            "doc": "role unicode emoji"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "DiscordRoleTags",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 639,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "https://discord.com/developers/docs/topics/permissions#role-object-role-tags-structure"
    },
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "bot_id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 641,
            "col": 4
          },
          "jsDoc": {
            "doc": "The id of the bot this role belongs to"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "integration_id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 643,
            "col": 4
          },
          "jsDoc": {
            "doc": "The id of the integration this role belongs to"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "premium_subscriber",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 645,
            "col": 4
          },
          "jsDoc": {
            "doc": "Whether this is the guild's premium subscriber role"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "null",
            "kind": "keyword",
            "keyword": "null"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "DiscordEmoji",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 649,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "https://discord.com/developers/docs/resources/emoji#emoji-object-emoji-structure"
    },
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "name",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 651,
            "col": 4
          },
          "jsDoc": {
            "doc": "Emoji name (can only be null in reaction emoji objects)"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 654,
            "col": 4
          },
          "jsDoc": {
            "doc": "Emoji id"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "roles",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 656,
            "col": 4
          },
          "jsDoc": {
            "doc": "Roles allowed to use this emoji"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            }
          },
          "typeParams": []
        },
        {
          "name": "user",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 658,
            "col": 4
          },
          "jsDoc": {
            "doc": "User that created this emoji"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "DiscordUser",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "DiscordUser"
            }
          },
          "typeParams": []
        },
        {
          "name": "require_colons",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 660,
            "col": 4
          },
          "jsDoc": {
            "doc": "Whether this emoji must be wrapped in colons"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        },
        {
          "name": "managed",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 662,
            "col": 4
          },
          "jsDoc": {
            "doc": "Whether this emoji is managed"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        },
        {
          "name": "animated",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 664,
            "col": 4
          },
          "jsDoc": {
            "doc": "Whether this emoji is animated"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        },
        {
          "name": "available",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 666,
            "col": 4
          },
          "jsDoc": {
            "doc": "Whether this emoji can be used, may be false due to loss of Server Boosts"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "DiscordVoiceState",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 670,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "https://discord.com/developers/docs/resources/voice#voice-state-object-voice-state-structure"
    },
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "session_id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 672,
            "col": 4
          },
          "jsDoc": {
            "doc": "The session id for this voice state"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "guild_id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 675,
            "col": 4
          },
          "jsDoc": {
            "doc": "The guild id this voice state is for"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "channel_id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 677,
            "col": 4
          },
          "jsDoc": {
            "doc": "The channel id this user is connected to"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              },
              {
                "repr": "null",
                "kind": "keyword",
                "keyword": "null"
              }
            ]
          },
          "typeParams": []
        },
        {
          "name": "user_id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 679,
            "col": 4
          },
          "jsDoc": {
            "doc": "The user id this voice state is for"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "member",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 681,
            "col": 4
          },
          "jsDoc": {
            "doc": "The guild member this voice state is for"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "DiscordMemberWithUser",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "DiscordMemberWithUser"
            }
          },
          "typeParams": []
        },
        {
          "name": "deaf",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 683,
            "col": 4
          },
          "jsDoc": {
            "doc": "Whether this user is deafened by the server"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        },
        {
          "name": "mute",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 685,
            "col": 4
          },
          "jsDoc": {
            "doc": "Whether this user is muted by the server"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        },
        {
          "name": "self_deaf",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 687,
            "col": 4
          },
          "jsDoc": {
            "doc": "Whether this user is locally deafened"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        },
        {
          "name": "self_mute",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 689,
            "col": 4
          },
          "jsDoc": {
            "doc": "Whether this user is locally muted"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        },
        {
          "name": "self_stream",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 691,
            "col": 4
          },
          "jsDoc": {
            "doc": "Whether this user is streaming using \"Go Live\""
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        },
        {
          "name": "self_video",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 693,
            "col": 4
          },
          "jsDoc": {
            "doc": "Whether this user's camera is enabled"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        },
        {
          "name": "suppress",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 695,
            "col": 4
          },
          "jsDoc": {
            "doc": "Whether this user is muted by the current user"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        },
        {
          "name": "request_to_speak_timestamp",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 697,
            "col": 4
          },
          "jsDoc": {
            "doc": "The time at which the user requested to speak"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              },
              {
                "repr": "null",
                "kind": "keyword",
                "keyword": "null"
              }
            ]
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "DiscordChannel",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 701,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "https://discord.com/developers/docs/resources/channel#channel-object"
    },
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "type",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 703,
            "col": 4
          },
          "jsDoc": {
            "doc": "The type of channel"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "ChannelTypes",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "ChannelTypes"
            }
          },
          "typeParams": []
        },
        {
          "name": "flags",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 705,
            "col": 4
          },
          "jsDoc": {
            "doc": "The flags of the channel"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "ChannelFlags",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "ChannelFlags"
            }
          },
          "typeParams": []
        },
        {
          "name": "position",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 707,
            "col": 4
          },
          "jsDoc": {
            "doc": "Sorting position of the channel"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "name",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 709,
            "col": 4
          },
          "jsDoc": {
            "doc": "The name of the channel (1-100 characters)"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "topic",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 711,
            "col": 4
          },
          "jsDoc": {
            "doc": "The channel topic (0-1024 characters)"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              },
              {
                "repr": "null",
                "kind": "keyword",
                "keyword": "null"
              }
            ]
          },
          "typeParams": []
        },
        {
          "name": "bitrate",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 713,
            "col": 4
          },
          "jsDoc": {
            "doc": "The bitrate (in bits) of the voice channel"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "user_limit",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 715,
            "col": 4
          },
          "jsDoc": {
            "doc": "The user limit of the voice channel"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "rate_limit_per_user",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 717,
            "col": 4
          },
          "jsDoc": {
            "doc": "Amount of seconds a user has to wait before sending another message (0-21600); bots, as well as users with the permission `manage_messages` or `manage_channel`, are unaffected"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "rtc_region",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 719,
            "col": 4
          },
          "jsDoc": {
            "doc": "Voice region id for the voice channel, automatic when set to null"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              },
              {
                "repr": "null",
                "kind": "keyword",
                "keyword": "null"
              }
            ]
          },
          "typeParams": []
        },
        {
          "name": "video_quality_mode",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 721,
            "col": 4
          },
          "jsDoc": {
            "doc": "The camera video quality mode of the voice channel, 1 when not present"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "VideoQualityModes",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "VideoQualityModes"
            }
          },
          "typeParams": []
        },
        {
          "name": "message_count",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 723,
            "col": 4
          },
          "jsDoc": {
            "doc": "An approximate count of messages in a thread, stops counting at 50"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "member_count",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 725,
            "col": 4
          },
          "jsDoc": {
            "doc": "An approximate count of users in a thread, stops counting at 50"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "default_auto_archive_duration",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 727,
            "col": 4
          },
          "jsDoc": {
            "doc": "Default duration for newly created threads, in minutes, to automatically archive the thread after recent activity, can be set to: 60, 1440, 4320, 10080"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 730,
            "col": 4
          },
          "jsDoc": {
            "doc": "The id of the channel"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "guild_id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 732,
            "col": 4
          },
          "jsDoc": {
            "doc": "The id of the guild"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "permission_overwrites",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 734,
            "col": 4
          },
          "jsDoc": {
            "doc": "Explicit permission overwrites for members and roles"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "DiscordOverwrite",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "DiscordOverwrite"
              }
            }
          },
          "typeParams": []
        },
        {
          "name": "nsfw",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 736,
            "col": 4
          },
          "jsDoc": {
            "doc": "Whether the channel is nsfw"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        },
        {
          "name": "last_message_id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 738,
            "col": 4
          },
          "jsDoc": {
            "doc": "The id of the last message sent in this channel (may not point to an existing or valid message)"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              },
              {
                "repr": "null",
                "kind": "keyword",
                "keyword": "null"
              }
            ]
          },
          "typeParams": []
        },
        {
          "name": "owner_id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 740,
            "col": 4
          },
          "jsDoc": {
            "doc": "Id of the creator of the thread"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "application_id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 742,
            "col": 4
          },
          "jsDoc": {
            "doc": "Application id of the group DM creator if it is bot-created"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "parent_id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 744,
            "col": 4
          },
          "jsDoc": {
            "doc": "For guild channels: Id of the parent category for a channel (each parent category can contain up to 50 channels), for threads: id of the text channel this thread was created"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              },
              {
                "repr": "null",
                "kind": "keyword",
                "keyword": "null"
              }
            ]
          },
          "typeParams": []
        },
        {
          "name": "last_pin_timestamp",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 746,
            "col": 4
          },
          "jsDoc": {
            "doc": "When the last pinned message was pinned. This may be null in events such as GUILD_CREATE when a message is not pinned."
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              },
              {
                "repr": "null",
                "kind": "keyword",
                "keyword": "null"
              }
            ]
          },
          "typeParams": []
        },
        {
          "name": "thread_metadata",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 748,
            "col": 4
          },
          "jsDoc": {
            "doc": "Thread-specific fields not needed by other channels"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "DiscordThreadMetadata",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "DiscordThreadMetadata"
            }
          },
          "typeParams": []
        },
        {
          "name": "member",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 750,
            "col": 4
          },
          "jsDoc": {
            "doc": "Thread member object for the current user, if they have joined the thread, only included on certain API endpoints"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "DiscordThreadMember",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "DiscordThreadMember"
            }
          },
          "typeParams": []
        },
        {
          "name": "permissions",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 752,
            "col": 4
          },
          "jsDoc": {
            "doc": "computed permissions for the invoking user in the channel, including overwrites, only included when part of the resolved data received on a application command interaction"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "newly_created",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 754,
            "col": 4
          },
          "jsDoc": {
            "doc": "When a thread is created this will be true on that channel payload for the thread."
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        },
        {
          "name": "recipents",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 756,
            "col": 4
          },
          "jsDoc": {
            "doc": "The recipients of the DM"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "DiscordUser",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "DiscordUser"
              }
            }
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "DiscordPresenceUpdate",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 760,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "https://discord.com/developers/docs/topics/gateway#presence-update"
    },
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "status",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 762,
            "col": 4
          },
          "jsDoc": {
            "doc": "Either \"idle\", \"dnd\", \"online\", or \"offline\""
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "idle",
                "kind": "literal",
                "literal": {
                  "kind": "string",
                  "string": "idle"
                }
              },
              {
                "repr": "dnd",
                "kind": "literal",
                "literal": {
                  "kind": "string",
                  "string": "dnd"
                }
              },
              {
                "repr": "online",
                "kind": "literal",
                "literal": {
                  "kind": "string",
                  "string": "online"
                }
              },
              {
                "repr": "offline",
                "kind": "literal",
                "literal": {
                  "kind": "string",
                  "string": "offline"
                }
              }
            ]
          },
          "typeParams": []
        },
        {
          "name": "user",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 764,
            "col": 4
          },
          "jsDoc": {
            "doc": "The user presence is being updated for"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "DiscordUser",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "DiscordUser"
            }
          },
          "typeParams": []
        },
        {
          "name": "guild_id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 766,
            "col": 4
          },
          "jsDoc": {
            "doc": "id of the guild"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "activities",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 768,
            "col": 4
          },
          "jsDoc": {
            "doc": "User's current activities"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "DiscordActivity",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "DiscordActivity"
              }
            }
          },
          "typeParams": []
        },
        {
          "name": "client_status",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 770,
            "col": 4
          },
          "jsDoc": {
            "doc": "User's platform-dependent status"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "DiscordClientStatus",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "DiscordClientStatus"
            }
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "DiscordStatusUpdate",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 773,
      "col": 0
    },
    "declarationKind": "export",
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "activities",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 775,
            "col": 4
          },
          "jsDoc": {
            "doc": "User's current activities"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "DiscordActivity",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "DiscordActivity"
              }
            }
          },
          "typeParams": []
        },
        {
          "name": "status",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 777,
            "col": 4
          },
          "jsDoc": {
            "doc": "Either \"idle\", \"dnd\", \"online\", or \"offline\""
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "idle",
                "kind": "literal",
                "literal": {
                  "kind": "string",
                  "string": "idle"
                }
              },
              {
                "repr": "dnd",
                "kind": "literal",
                "literal": {
                  "kind": "string",
                  "string": "dnd"
                }
              },
              {
                "repr": "online",
                "kind": "literal",
                "literal": {
                  "kind": "string",
                  "string": "online"
                }
              },
              {
                "repr": "offline",
                "kind": "literal",
                "literal": {
                  "kind": "string",
                  "string": "offline"
                }
              }
            ]
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "DiscordWelcomeScreen",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 781,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "https://discord.com/developers/docs/resources/guild#welcome-screen-object-welcome-screen-structure"
    },
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "description",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 783,
            "col": 4
          },
          "jsDoc": {
            "doc": "The server description shown in the welcome screen"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              },
              {
                "repr": "null",
                "kind": "keyword",
                "keyword": "null"
              }
            ]
          },
          "typeParams": []
        },
        {
          "name": "welcome_channels",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 785,
            "col": 4
          },
          "jsDoc": {
            "doc": "The channels shown in the welcome screen, up to 5"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "DiscordWelcomeScreenChannel",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "DiscordWelcomeScreenChannel"
              }
            }
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "DiscordWelcomeScreenChannel",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 789,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "https://discord.com/developers/docs/resources/guild#welcome-screen-object-welcome-screen-channel-structure"
    },
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "description",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 791,
            "col": 4
          },
          "jsDoc": {
            "doc": "The description shown for the channel"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "channel_id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 794,
            "col": 4
          },
          "jsDoc": {
            "doc": "The channel's id"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "emoji_id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 796,
            "col": 4
          },
          "jsDoc": {
            "doc": "The emoji id, if the emoji is custom"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              },
              {
                "repr": "null",
                "kind": "keyword",
                "keyword": "null"
              }
            ]
          },
          "typeParams": []
        },
        {
          "name": "emoji_name",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 798,
            "col": 4
          },
          "jsDoc": {
            "doc": "The emoji name if custom, the unicode character if standard, or `null` if no emoji is set"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              },
              {
                "repr": "null",
                "kind": "keyword",
                "keyword": "null"
              }
            ]
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "DiscordStageInstance",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 802,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "https://discord.com/developers/docs/resources/stage-instance#auto-closing-stage-instance-structure"
    },
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "topic",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 804,
            "col": 4
          },
          "jsDoc": {
            "doc": "The topic of the Stage instance (1-120 characters)"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 806,
            "col": 4
          },
          "jsDoc": {
            "doc": "The id of this Stage instance"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "guild_id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 808,
            "col": 4
          },
          "jsDoc": {
            "doc": "The guild id of the associated Stage channel"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "channel_id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 810,
            "col": 4
          },
          "jsDoc": {
            "doc": "The id of the associated Stage channel"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "guild_scheduled_event_id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 812,
            "col": 4
          },
          "jsDoc": {
            "doc": "The id of the scheduled event for this Stage instance"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "DiscordThreadMetadata",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 815,
      "col": 0
    },
    "declarationKind": "export",
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "archived",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 817,
            "col": 4
          },
          "jsDoc": {
            "doc": "Whether the thread is archived"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        },
        {
          "name": "auto_archive_duration",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 819,
            "col": 4
          },
          "jsDoc": {
            "doc": "Duration in minutes to automatically archive the thread after recent activity"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "60",
                "kind": "literal",
                "literal": {
                  "kind": "number",
                  "number": 60.0
                }
              },
              {
                "repr": "1440",
                "kind": "literal",
                "literal": {
                  "kind": "number",
                  "number": 1440.0
                }
              },
              {
                "repr": "4320",
                "kind": "literal",
                "literal": {
                  "kind": "number",
                  "number": 4320.0
                }
              },
              {
                "repr": "10080",
                "kind": "literal",
                "literal": {
                  "kind": "number",
                  "number": 10080.0
                }
              }
            ]
          },
          "typeParams": []
        },
        {
          "name": "locked",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 821,
            "col": 4
          },
          "jsDoc": {
            "doc": "When a thread is locked, only users with `MANAGE_THREADS` can unarchive it"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        },
        {
          "name": "invitable",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 823,
            "col": 4
          },
          "jsDoc": {
            "doc": "whether non-moderators can add other non-moderators to a thread; only available on private threads"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        },
        {
          "name": "archive_timestamp",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 825,
            "col": 4
          },
          "jsDoc": {
            "doc": "Timestamp when the thread's archive status was last changed, used for calculating recent activity"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "create_timestamp",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 827,
            "col": 4
          },
          "jsDoc": {
            "doc": "Timestamp when the thread was created; only populated for threads created after 2022-01-09"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              },
              {
                "repr": "null",
                "kind": "keyword",
                "keyword": "null"
              }
            ]
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "DiscordThreadMemberBase",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 830,
      "col": 0
    },
    "declarationKind": "export",
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "flags",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 832,
            "col": 4
          },
          "jsDoc": {
            "doc": "Any user-thread settings, currently only used for notifications"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "DiscordThreadMember",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 835,
      "col": 0
    },
    "declarationKind": "export",
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "flags",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 837,
            "col": 4
          },
          "jsDoc": {
            "doc": "Any user-thread settings, currently only used for notifications"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 839,
            "col": 4
          },
          "jsDoc": {
            "doc": "The id of the thread"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "user_id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 841,
            "col": 4
          },
          "jsDoc": {
            "doc": "The id of the user"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "join_timestamp",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 843,
            "col": 4
          },
          "jsDoc": {
            "doc": "The time the current user last joined the thread"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "DiscordThreadMemberGuildCreate",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 846,
      "col": 0
    },
    "declarationKind": "export",
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "flags",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 848,
            "col": 4
          },
          "jsDoc": {
            "doc": "Any user-thread settings, currently only used for notifications"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "join_timestamp",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 850,
            "col": 4
          },
          "jsDoc": {
            "doc": "The time the current user last joined the thread"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "DiscordActivity",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 854,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "https://discord.com/developers/docs/topics/gateway#activity-object"
    },
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "name",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 856,
            "col": 4
          },
          "jsDoc": {
            "doc": "The activity's name"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "type",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 858,
            "col": 4
          },
          "jsDoc": {
            "doc": "Activity type"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "ActivityTypes",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "ActivityTypes"
            }
          },
          "typeParams": []
        },
        {
          "name": "url",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 860,
            "col": 4
          },
          "jsDoc": {
            "doc": "Stream url, is validated when type is 1"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              },
              {
                "repr": "null",
                "kind": "keyword",
                "keyword": "null"
              }
            ]
          },
          "typeParams": []
        },
        {
          "name": "created_at",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 862,
            "col": 4
          },
          "jsDoc": {
            "doc": "Unix timestamp of when the activity was added to the user's session"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "details",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 864,
            "col": 4
          },
          "jsDoc": {
            "doc": "What the player is currently doing"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              },
              {
                "repr": "null",
                "kind": "keyword",
                "keyword": "null"
              }
            ]
          },
          "typeParams": []
        },
        {
          "name": "state",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 866,
            "col": 4
          },
          "jsDoc": {
            "doc": "The user's current party status"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              },
              {
                "repr": "null",
                "kind": "keyword",
                "keyword": "null"
              }
            ]
          },
          "typeParams": []
        },
        {
          "name": "instance",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 868,
            "col": 4
          },
          "jsDoc": {
            "doc": "Whether or not the activity is an instanced game session"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        },
        {
          "name": "flags",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 870,
            "col": 4
          },
          "jsDoc": {
            "doc": "Activity flags `OR`d together, describes what the payload includes"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "timestamps",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 872,
            "col": 4
          },
          "jsDoc": {
            "doc": "Unix timestamps for start and/or end of the game"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "DiscordActivityTimestamps",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "DiscordActivityTimestamps"
            }
          },
          "typeParams": []
        },
        {
          "name": "application_id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 874,
            "col": 4
          },
          "jsDoc": {
            "doc": "Application id for the game"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "emoji",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 876,
            "col": 4
          },
          "jsDoc": {
            "doc": "The emoji used for a custom status"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "DiscordActivityEmoji",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "DiscordActivityEmoji"
                }
              },
              {
                "repr": "null",
                "kind": "keyword",
                "keyword": "null"
              }
            ]
          },
          "typeParams": []
        },
        {
          "name": "party",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 878,
            "col": 4
          },
          "jsDoc": {
            "doc": "Information for the current party of the player"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "DiscordActivityParty",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "DiscordActivityParty"
            }
          },
          "typeParams": []
        },
        {
          "name": "assets",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 880,
            "col": 4
          },
          "jsDoc": {
            "doc": "Images for the presence and their hover texts"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "DiscordActivityAssets",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "DiscordActivityAssets"
            }
          },
          "typeParams": []
        },
        {
          "name": "secrets",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 882,
            "col": 4
          },
          "jsDoc": {
            "doc": "Secrets for Rich Presence joining and spectating"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "DiscordActivitySecrets",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "DiscordActivitySecrets"
            }
          },
          "typeParams": []
        },
        {
          "name": "buttons",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 884,
            "col": 4
          },
          "jsDoc": {
            "doc": "The custom buttons shown in the Rich Presence (max 2)"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "DiscordActivityButton",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "DiscordActivityButton"
              }
            }
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "DiscordClientStatus",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 888,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "https://discord.com/developers/docs/topics/gateway#client-status-object"
    },
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "desktop",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 890,
            "col": 4
          },
          "jsDoc": {
            "doc": "The user's status set for an active desktop (Windows, Linux, Mac) application session"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "mobile",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 892,
            "col": 4
          },
          "jsDoc": {
            "doc": "The user's status set for an active mobile (iOS, Android) application session"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "web",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 894,
            "col": 4
          },
          "jsDoc": {
            "doc": "The user's status set for an active web (browser, bot account) application session"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "DiscordActivityTimestamps",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 898,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "https://discord.com/developers/docs/topics/gateway#activity-object-activity-timestamps"
    },
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "start",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 900,
            "col": 4
          },
          "jsDoc": {
            "doc": "Unix time (in milliseconds) of when the activity started"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "end",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 902,
            "col": 4
          },
          "jsDoc": {
            "doc": "Unix time (in milliseconds) of when the activity ends"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "DiscordActivityEmoji",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 906,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "https://discord.com/developers/docs/topics/gateway#activity-object-activity-emoji"
    },
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "name",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 908,
            "col": 4
          },
          "jsDoc": {
            "doc": "The name of the emoji"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "animated",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 910,
            "col": 4
          },
          "jsDoc": {
            "doc": "Whether this emoji is animated"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        },
        {
          "name": "id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 912,
            "col": 4
          },
          "jsDoc": {
            "doc": "The id of the emoji"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "DiscordActivityParty",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 916,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "https://discord.com/developers/docs/topics/gateway#activity-object-activity-party"
    },
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "size",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 918,
            "col": 4
          },
          "jsDoc": {
            "doc": "Used to show the party's current and maximum size"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "tuple",
            "tuple": [
              {
                "repr": "number",
                "kind": "keyword",
                "keyword": "number"
              },
              {
                "repr": "number",
                "kind": "keyword",
                "keyword": "number"
              }
            ]
          },
          "typeParams": []
        },
        {
          "name": "id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 920,
            "col": 4
          },
          "jsDoc": {
            "doc": "The id of the party"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "DiscordActivityAssets",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 924,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "https://discord.com/developers/docs/topics/gateway#activity-object-activity-assets"
    },
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "large_text",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 926,
            "col": 4
          },
          "jsDoc": {
            "doc": "Text displayed when hovering over the large image of the activity"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "small_text",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 928,
            "col": 4
          },
          "jsDoc": {
            "doc": "Text displayed when hovering over the small image of the activity"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "large_image",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 930,
            "col": 4
          },
          "jsDoc": {
            "doc": "The id for a large asset of the activity, usually a snowflake"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "small_image",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 932,
            "col": 4
          },
          "jsDoc": {
            "doc": "The id for a small asset of the activity, usually a snowflake"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "DiscordActivitySecrets",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 936,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "https://discord.com/developers/docs/topics/gateway#activity-object-activity-secrets"
    },
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "join",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 938,
            "col": 4
          },
          "jsDoc": {
            "doc": "The secret for joining a party"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "spectate",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 940,
            "col": 4
          },
          "jsDoc": {
            "doc": "The secret for spectating a game"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "match",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 942,
            "col": 4
          },
          "jsDoc": {
            "doc": "The secret for a specific instanced match"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "DiscordActivityButton",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 946,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "https://discord.com/developers/docs/topics/gateway#activity-object-activity-buttons"
    },
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "label",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 948,
            "col": 4
          },
          "jsDoc": {
            "doc": "The text shown on the button (1-32 characters)"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "url",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 950,
            "col": 4
          },
          "jsDoc": {
            "doc": "The url opened when clicking the button (1-512 characters)"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "DiscordOverwrite",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 953,
      "col": 0
    },
    "declarationKind": "export",
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "type",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 955,
            "col": 4
          },
          "jsDoc": {
            "doc": "Either 0 (role) or 1 (member)"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "OverwriteTypes",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "OverwriteTypes"
            }
          },
          "typeParams": []
        },
        {
          "name": "id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 957,
            "col": 4
          },
          "jsDoc": {
            "doc": "Role or user id"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "allow",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 959,
            "col": 4
          },
          "jsDoc": {
            "doc": "Permission bit set"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "deny",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 961,
            "col": 4
          },
          "jsDoc": {
            "doc": "Permission bit set"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "DiscordMemberWithUser",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 964,
      "col": 0
    },
    "declarationKind": "export",
    "interfaceDef": {
      "extends": [
        {
          "repr": "DiscordMember",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "DiscordMember"
          }
        }
      ],
      "methods": [],
      "properties": [
        {
          "name": "user",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 966,
            "col": 4
          },
          "jsDoc": {
            "doc": "The user object for this member"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "DiscordUser",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "DiscordUser"
            }
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "DiscordMessage",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 970,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "https://discord.com/developers/docs/resources/channel#message-object"
    },
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 972,
            "col": 4
          },
          "jsDoc": {
            "doc": "id of the message"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "channel_id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 974,
            "col": 4
          },
          "jsDoc": {
            "doc": "id of the channel the message was sent in"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "guild_id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 979,
            "col": 4
          },
          "jsDoc": {
            "doc": "id of the guild the message was sent in\nNote: For MESSAGE_CREATE and MESSAGE_UPDATE events, the message object may not contain a guild_id or member field since the events are sent directly to the receiving user and the bot who sent the message, rather than being sent through the guild like non-ephemeral messages."
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "author",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 984,
            "col": 4
          },
          "jsDoc": {
            "doc": "The author of this message (not guaranteed to be a valid user)\nNote: The author object follows the structure of the user object, but is only a valid user in the case where the message is generated by a user or bot user. If the message is generated by a webhook, the author object corresponds to the webhook's id, username, and avatar. You can tell if a message is generated by a webhook by checking for the webhook_id on the message object."
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "DiscordUser",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "DiscordUser"
            }
          },
          "typeParams": []
        },
        {
          "name": "member",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 989,
            "col": 4
          },
          "jsDoc": {
            "doc": "Member properties for this message's author\nNote: The member object exists in `MESSAGE_CREATE` and `MESSAGE_UPDATE` events from text-based guild channels. This allows bots to obtain real-time member data without requiring bots to store member state in memory."
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "DiscordMember",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "DiscordMember"
            }
          },
          "typeParams": []
        },
        {
          "name": "content",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 991,
            "col": 4
          },
          "jsDoc": {
            "doc": "Contents of the message"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "timestamp",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 993,
            "col": 4
          },
          "jsDoc": {
            "doc": "When this message was sent"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "edited_timestamp",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 995,
            "col": 4
          },
          "jsDoc": {
            "doc": "When this message was edited (or null if never)"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              },
              {
                "repr": "null",
                "kind": "keyword",
                "keyword": "null"
              }
            ]
          },
          "typeParams": []
        },
        {
          "name": "tts",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 997,
            "col": 4
          },
          "jsDoc": {
            "doc": "Whether this was a TTS message"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        },
        {
          "name": "mention_everyone",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 999,
            "col": 4
          },
          "jsDoc": {
            "doc": "Whether this message mentions everyone"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        },
        {
          "name": "mentions",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1004,
            "col": 4
          },
          "jsDoc": {
            "doc": "Users specifically mentioned in the message\nNote: The user objects in the mentions array will only have the partial member field present in `MESSAGE_CREATE` and `MESSAGE_UPDATE` events from text-based guild channels."
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "",
              "kind": "parenthesized",
              "parenthesized": {
                "repr": "",
                "kind": "intersection",
                "intersection": [
                  {
                    "repr": "DiscordUser",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "DiscordUser"
                    }
                  },
                  {
                    "repr": "",
                    "kind": "typeLiteral",
                    "typeLiteral": {
                      "methods": [],
                      "properties": [
                        {
                          "name": "member",
                          "params": [],
                          "computed": false,
                          "optional": true,
                          "tsType": {
                            "repr": "Partial",
                            "kind": "typeRef",
                            "typeRef": {
                              "typeParams": [
                                {
                                  "repr": "DiscordMember",
                                  "kind": "typeRef",
                                  "typeRef": {
                                    "typeParams": null,
                                    "typeName": "DiscordMember"
                                  }
                                }
                              ],
                              "typeName": "Partial"
                            }
                          },
                          "typeParams": []
                        }
                      ],
                      "callSignatures": [],
                      "indexSignatures": []
                    }
                  }
                ]
              }
            }
          },
          "typeParams": []
        },
        {
          "name": "mention_roles",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1006,
            "col": 4
          },
          "jsDoc": {
            "doc": "Roles specifically mentioned in this message"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            }
          },
          "typeParams": []
        },
        {
          "name": "mention_channels",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1011,
            "col": 4
          },
          "jsDoc": {
            "doc": "Channels specifically mentioned in this message\nNote: Not all channel mentions in a message will appear in `mention_channels`. Only textual channels that are visible to everyone in a lurkable guild will ever be included. Only crossposted messages (via Channel Following) currently include `mention_channels` at all. If no mentions in the message meet these requirements, this field will not be sent."
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "DiscordChannelMention",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "DiscordChannelMention"
              }
            }
          },
          "typeParams": []
        },
        {
          "name": "attachments",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1013,
            "col": 4
          },
          "jsDoc": {
            "doc": "Any attached files"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "DiscordAttachment",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "DiscordAttachment"
              }
            }
          },
          "typeParams": []
        },
        {
          "name": "embeds",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1015,
            "col": 4
          },
          "jsDoc": {
            "doc": "Any embedded content"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "DiscordEmbed",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "DiscordEmbed"
              }
            }
          },
          "typeParams": []
        },
        {
          "name": "reactions",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1017,
            "col": 4
          },
          "jsDoc": {
            "doc": "Reactions to the message"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "DiscordReaction",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "DiscordReaction"
              }
            }
          },
          "typeParams": []
        },
        {
          "name": "nonce",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1019,
            "col": 4
          },
          "jsDoc": {
            "doc": "Used for validating a message was sent"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "number",
                "kind": "keyword",
                "keyword": "number"
              },
              {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              }
            ]
          },
          "typeParams": []
        },
        {
          "name": "pinned",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1021,
            "col": 4
          },
          "jsDoc": {
            "doc": "Whether this message is pinned"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        },
        {
          "name": "webhook_id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1023,
            "col": 4
          },
          "jsDoc": {
            "doc": "If the message is generated by a webhook, this is the webhook's id"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "type",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1025,
            "col": 4
          },
          "jsDoc": {
            "doc": "Type of message"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "MessageTypes",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "MessageTypes"
            }
          },
          "typeParams": []
        },
        {
          "name": "activity",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1027,
            "col": 4
          },
          "jsDoc": {
            "doc": "Sent with Rich Presence-related chat embeds"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "DiscordMessageActivity",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "DiscordMessageActivity"
            }
          },
          "typeParams": []
        },
        {
          "name": "application",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1029,
            "col": 4
          },
          "jsDoc": {
            "doc": "Sent with Rich Presence-related chat embeds"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "Partial",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": [
                {
                  "repr": "DiscordApplication",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "DiscordApplication"
                  }
                }
              ],
              "typeName": "Partial"
            }
          },
          "typeParams": []
        },
        {
          "name": "application_id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1031,
            "col": 4
          },
          "jsDoc": {
            "doc": "if the message is an Interaction or application-owned webhook, this is the id of the application"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "message_reference",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1033,
            "col": 4
          },
          "jsDoc": {
            "doc": "Data showing the source of a crossposted channel follow add, pin or reply message"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "Omit",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": [
                {
                  "repr": "DiscordMessageReference",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "DiscordMessageReference"
                  }
                },
                {
                  "repr": "failIfNotExists",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "failIfNotExists"
                  }
                }
              ],
              "typeName": "Omit"
            }
          },
          "typeParams": []
        },
        {
          "name": "flags",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1035,
            "col": 4
          },
          "jsDoc": {
            "doc": "Message flags combined as a bitfield"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "stickers",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1040,
            "col": 4
          },
          "jsDoc": {
            "doc": "The stickers sent with the message (bots currently can only receive messages with stickers, not send)",
            "tags": [
              {
                "kind": "deprecated"
              }
            ]
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "DiscordSticker",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "DiscordSticker"
              }
            }
          },
          "typeParams": []
        },
        {
          "name": "referenced_message",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1045,
            "col": 4
          },
          "jsDoc": {
            "doc": "The message associated with the `message_reference`\nNote: This field is only returned for messages with a `type` of `19` (REPLY). If the message is a reply but the `referenced_message` field is not present, the backend did not attempt to fetch the message that was being replied to, so its state is unknown. If the field exists but is null, the referenced message was deleted."
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "DiscordMessage",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "DiscordMessage"
            }
          },
          "typeParams": []
        },
        {
          "name": "interaction",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1047,
            "col": 4
          },
          "jsDoc": {
            "doc": "Sent if the message is a response to an Interaction"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "DiscordMessageInteraction",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "DiscordMessageInteraction"
            }
          },
          "typeParams": []
        },
        {
          "name": "thread",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1049,
            "col": 4
          },
          "jsDoc": {
            "doc": "The thread that was started from this message, includes thread member object"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "intersection",
            "intersection": [
              {
                "repr": "Omit",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": [
                    {
                      "repr": "DiscordChannel",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "DiscordChannel"
                      }
                    },
                    {
                      "repr": "member",
                      "kind": "literal",
                      "literal": {
                        "kind": "string",
                        "string": "member"
                      }
                    }
                  ],
                  "typeName": "Omit"
                }
              },
              {
                "repr": "",
                "kind": "typeLiteral",
                "typeLiteral": {
                  "methods": [],
                  "properties": [
                    {
                      "name": "member",
                      "params": [],
                      "computed": false,
                      "optional": false,
                      "tsType": {
                        "repr": "DiscordThreadMember",
                        "kind": "typeRef",
                        "typeRef": {
                          "typeParams": null,
                          "typeName": "DiscordThreadMember"
                        }
                      },
                      "typeParams": []
                    }
                  ],
                  "callSignatures": [],
                  "indexSignatures": []
                }
              }
            ]
          },
          "typeParams": []
        },
        {
          "name": "components",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1051,
            "col": 4
          },
          "jsDoc": {
            "doc": "The components related to this message"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "DiscordMessageComponents",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "DiscordMessageComponents"
            }
          },
          "typeParams": []
        },
        {
          "name": "sticker_items",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1053,
            "col": 4
          },
          "jsDoc": {
            "doc": "Sent if the message contains stickers"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "DiscordStickerItem",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "DiscordStickerItem"
              }
            }
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "DiscordChannelMention",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 1057,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "https://discord.com/developers/docs/resources/channel#channel-mention-object"
    },
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1059,
            "col": 4
          },
          "jsDoc": {
            "doc": "id of the channel"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "guild_id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1061,
            "col": 4
          },
          "jsDoc": {
            "doc": "id of the guild containing the channel"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "type",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1063,
            "col": 4
          },
          "jsDoc": {
            "doc": "The type of channel"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "name",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1065,
            "col": 4
          },
          "jsDoc": {
            "doc": "The name of the channel"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "DiscordReaction",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 1069,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "https://discord.com/developers/docs/resources/channel#reaction-object"
    },
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "count",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1071,
            "col": 4
          },
          "jsDoc": {
            "doc": "Times this emoji has been used to react"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "me",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1073,
            "col": 4
          },
          "jsDoc": {
            "doc": "Whether the current user reacted using this emoji"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        },
        {
          "name": "emoji",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1075,
            "col": 4
          },
          "jsDoc": {
            "doc": "Emoji information"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "Partial",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": [
                {
                  "repr": "DiscordEmoji",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "DiscordEmoji"
                  }
                }
              ],
              "typeName": "Partial"
            }
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "DiscordMessageActivity",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 1079,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "https://discord.com/developers/docs/resources/channel#message-object-message-activity-structure"
    },
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "type",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1081,
            "col": 4
          },
          "jsDoc": {
            "doc": "Type of message activity"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "MessageActivityTypes",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "MessageActivityTypes"
            }
          },
          "typeParams": []
        },
        {
          "name": "party_id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1083,
            "col": 4
          },
          "jsDoc": {
            "doc": "`party_id` from a Rich Presence event"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "DiscordMessageReference",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 1087,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "https://discord.com/developers/docs/resources/channel#message-object-message-reference-structure"
    },
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "message_id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1089,
            "col": 4
          },
          "jsDoc": {
            "doc": "id of the originating message"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "channel_id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1094,
            "col": 4
          },
          "jsDoc": {
            "doc": "id of the originating message's channel\nNote: `channel_id` is optional when creating a reply, but will always be present when receiving an event/response that includes this data model."
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "guild_id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1096,
            "col": 4
          },
          "jsDoc": {
            "doc": "id of the originating message's guild"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "fail_if_not_exists",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1098,
            "col": 4
          },
          "jsDoc": {
            "doc": "When sending, whether to error if the referenced message doesn't exist instead of sending as a normal (non-reply) message, default true"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "DiscordSticker",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 1102,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "https://discord.com/developers/docs/resources/sticker#sticker-object-sticker-structure"
    },
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1104,
            "col": 4
          },
          "jsDoc": {
            "doc": "[Id of the sticker](https://discord.com/developers/docs/reference#image-formatting)"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "pack_id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1106,
            "col": 4
          },
          "jsDoc": {
            "doc": "Id of the pack the sticker is from"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "name",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1108,
            "col": 4
          },
          "jsDoc": {
            "doc": "Name of the sticker"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "description",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1110,
            "col": 4
          },
          "jsDoc": {
            "doc": "Description of the sticker"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "tags",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1112,
            "col": 4
          },
          "jsDoc": {
            "doc": "a unicode emoji representing the sticker's expression"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "type",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1114,
            "col": 4
          },
          "jsDoc": {
            "doc": "[type of sticker](https://discord.com/developers/docs/resources/sticker#sticker-object-sticker-types)"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "StickerTypes",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "StickerTypes"
            }
          },
          "typeParams": []
        },
        {
          "name": "format_type",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1116,
            "col": 4
          },
          "jsDoc": {
            "doc": "[Type of sticker format](https://discord.com/developers/docs/resources/sticker#sticker-object-sticker-format-types)"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "StickerFormatTypes",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "StickerFormatTypes"
            }
          },
          "typeParams": []
        },
        {
          "name": "available",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1118,
            "col": 4
          },
          "jsDoc": {
            "doc": "Whether or not the sticker is available"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        },
        {
          "name": "guild_id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1120,
            "col": 4
          },
          "jsDoc": {
            "doc": "Id of the guild that owns this sticker"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "user",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1122,
            "col": 4
          },
          "jsDoc": {
            "doc": "The user that uploaded the sticker"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "DiscordUser",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "DiscordUser"
            }
          },
          "typeParams": []
        },
        {
          "name": "sort_value",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1124,
            "col": 4
          },
          "jsDoc": {
            "doc": "A sticker's sort order within a pack"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "DiscordMessageInteraction",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 1128,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "https://discord.com/developers/docs/interactions/receiving-and-responding#message-interaction-object-message-interaction-structure"
    },
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1130,
            "col": 4
          },
          "jsDoc": {
            "doc": "Id of the interaction"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "type",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1132,
            "col": 4
          },
          "jsDoc": {
            "doc": "The type of interaction"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "InteractionTypes",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "InteractionTypes"
            }
          },
          "typeParams": []
        },
        {
          "name": "name",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1134,
            "col": 4
          },
          "jsDoc": {
            "doc": "The name of the ApplicationCommand"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "user",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1136,
            "col": 4
          },
          "jsDoc": {
            "doc": "The user who invoked the interaction"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "DiscordUser",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "DiscordUser"
            }
          },
          "typeParams": []
        },
        {
          "name": "member",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1138,
            "col": 4
          },
          "jsDoc": {
            "doc": "The member who invoked the interaction in the guild"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "Partial",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": [
                {
                  "repr": "DiscordMember",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "DiscordMember"
                  }
                }
              ],
              "typeName": "Partial"
            }
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "typeAlias",
    "name": "DiscordMessageComponents",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 1141,
      "col": 0
    },
    "declarationKind": "export",
    "typeAliasDef": {
      "tsType": {
        "repr": "",
        "kind": "array",
        "array": {
          "repr": "DiscordActionRow",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "DiscordActionRow"
          }
        }
      },
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "DiscordActionRow",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 1144,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "https://discord.com/developers/docs/interactions/message-components#actionrow"
    },
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "type",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1146,
            "col": 4
          },
          "jsDoc": {
            "doc": "Action rows are a group of buttons."
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "1",
            "kind": "literal",
            "literal": {
              "kind": "number",
              "number": 1.0
            }
          },
          "typeParams": []
        },
        {
          "name": "components",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1148,
            "col": 4
          },
          "jsDoc": {
            "doc": "The components in this row"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "",
                "kind": "tuple",
                "tuple": [
                  {
                    "repr": "",
                    "kind": "union",
                    "union": [
                      {
                        "repr": "DiscordSelectMenuComponent",
                        "kind": "typeRef",
                        "typeRef": {
                          "typeParams": null,
                          "typeName": "DiscordSelectMenuComponent"
                        }
                      },
                      {
                        "repr": "DiscordButtonComponent",
                        "kind": "typeRef",
                        "typeRef": {
                          "typeParams": null,
                          "typeName": "DiscordButtonComponent"
                        }
                      },
                      {
                        "repr": "DiscordInputTextComponent",
                        "kind": "typeRef",
                        "typeRef": {
                          "typeParams": null,
                          "typeName": "DiscordInputTextComponent"
                        }
                      }
                    ]
                  }
                ]
              },
              {
                "repr": "",
                "kind": "tuple",
                "tuple": [
                  {
                    "repr": "DiscordButtonComponent",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "DiscordButtonComponent"
                    }
                  },
                  {
                    "repr": "DiscordButtonComponent",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "DiscordButtonComponent"
                    }
                  }
                ]
              },
              {
                "repr": "",
                "kind": "tuple",
                "tuple": [
                  {
                    "repr": "DiscordButtonComponent",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "DiscordButtonComponent"
                    }
                  },
                  {
                    "repr": "DiscordButtonComponent",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "DiscordButtonComponent"
                    }
                  },
                  {
                    "repr": "DiscordButtonComponent",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "DiscordButtonComponent"
                    }
                  }
                ]
              },
              {
                "repr": "",
                "kind": "tuple",
                "tuple": [
                  {
                    "repr": "DiscordButtonComponent",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "DiscordButtonComponent"
                    }
                  },
                  {
                    "repr": "DiscordButtonComponent",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "DiscordButtonComponent"
                    }
                  },
                  {
                    "repr": "DiscordButtonComponent",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "DiscordButtonComponent"
                    }
                  },
                  {
                    "repr": "DiscordButtonComponent",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "DiscordButtonComponent"
                    }
                  }
                ]
              },
              {
                "repr": "",
                "kind": "tuple",
                "tuple": [
                  {
                    "repr": "DiscordButtonComponent",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "DiscordButtonComponent"
                    }
                  },
                  {
                    "repr": "DiscordButtonComponent",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "DiscordButtonComponent"
                    }
                  },
                  {
                    "repr": "DiscordButtonComponent",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "DiscordButtonComponent"
                    }
                  },
                  {
                    "repr": "DiscordButtonComponent",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "DiscordButtonComponent"
                    }
                  },
                  {
                    "repr": "DiscordButtonComponent",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "DiscordButtonComponent"
                    }
                  }
                ]
              }
            ]
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "DiscordSelectMenuComponent",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 1162,
      "col": 0
    },
    "declarationKind": "export",
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "type",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1163,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "MessageComponentTypes.SelectMenu",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "MessageComponentTypes.SelectMenu"
            }
          },
          "typeParams": []
        },
        {
          "name": "custom_id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1165,
            "col": 4
          },
          "jsDoc": {
            "doc": "A custom identifier for this component. Maximum 100 characters."
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "placeholder",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1167,
            "col": 4
          },
          "jsDoc": {
            "doc": "A custom placeholder text if nothing is selected. Maximum 150 characters."
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "min_values",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1169,
            "col": 4
          },
          "jsDoc": {
            "doc": "The minimum number of items that must be selected. Default 1. Between 1-25."
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "max_values",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1171,
            "col": 4
          },
          "jsDoc": {
            "doc": "The maximum number of items that can be selected. Default 1. Between 1-25."
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "options",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1173,
            "col": 4
          },
          "jsDoc": {
            "doc": "The choices! Maximum of 25 items."
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "DiscordSelectOption",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "DiscordSelectOption"
              }
            }
          },
          "typeParams": []
        },
        {
          "name": "disabled",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1175,
            "col": 4
          },
          "jsDoc": {
            "doc": "Whether or not this select menu is disabled"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "DiscordSelectOption",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 1178,
      "col": 0
    },
    "declarationKind": "export",
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "label",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1180,
            "col": 4
          },
          "jsDoc": {
            "doc": "The user-facing name of the option. Maximum 25 characters."
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "value",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1182,
            "col": 4
          },
          "jsDoc": {
            "doc": "The dev-defined value of the option. Maximum 100 characters."
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "description",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1184,
            "col": 4
          },
          "jsDoc": {
            "doc": "An additional description of the option. Maximum 50 characters."
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "emoji",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1186,
            "col": 4
          },
          "jsDoc": {
            "doc": "The id, name, and animated properties of an emoji."
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "typeLiteral",
            "typeLiteral": {
              "methods": [],
              "properties": [
                {
                  "name": "id",
                  "params": [],
                  "computed": false,
                  "optional": true,
                  "tsType": {
                    "repr": "string",
                    "kind": "keyword",
                    "keyword": "string"
                  },
                  "typeParams": []
                },
                {
                  "name": "name",
                  "params": [],
                  "computed": false,
                  "optional": true,
                  "tsType": {
                    "repr": "string",
                    "kind": "keyword",
                    "keyword": "string"
                  },
                  "typeParams": []
                },
                {
                  "name": "animated",
                  "params": [],
                  "computed": false,
                  "optional": true,
                  "tsType": {
                    "repr": "boolean",
                    "kind": "keyword",
                    "keyword": "boolean"
                  },
                  "typeParams": []
                }
              ],
              "callSignatures": [],
              "indexSignatures": []
            }
          },
          "typeParams": []
        },
        {
          "name": "default",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1195,
            "col": 4
          },
          "jsDoc": {
            "doc": "Will render this option as already-selected by default."
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "DiscordButtonComponent",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 1199,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "https://discord.com/developers/docs/interactions/message-components#buttons-button-object"
    },
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "type",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1201,
            "col": 4
          },
          "jsDoc": {
            "doc": "All button components have type 2"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "MessageComponentTypes.Button",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "MessageComponentTypes.Button"
            }
          },
          "typeParams": []
        },
        {
          "name": "label",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1203,
            "col": 4
          },
          "jsDoc": {
            "doc": "for what the button says (max 80 characters)"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "custom_id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1205,
            "col": 4
          },
          "jsDoc": {
            "doc": "a dev-defined unique string sent on click (max 100 characters). type 5 Link buttons can not have a custom_id"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "style",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1207,
            "col": 4
          },
          "jsDoc": {
            "doc": "For different styles/colors of the buttons"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "ButtonStyles",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "ButtonStyles"
            }
          },
          "typeParams": []
        },
        {
          "name": "emoji",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1209,
            "col": 4
          },
          "jsDoc": {
            "doc": "Emoji object that includes fields of name, id, and animated supporting unicode and custom emojis."
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "typeLiteral",
            "typeLiteral": {
              "methods": [],
              "properties": [
                {
                  "name": "id",
                  "params": [],
                  "computed": false,
                  "optional": true,
                  "tsType": {
                    "repr": "string",
                    "kind": "keyword",
                    "keyword": "string"
                  },
                  "typeParams": []
                },
                {
                  "name": "name",
                  "params": [],
                  "computed": false,
                  "optional": true,
                  "tsType": {
                    "repr": "string",
                    "kind": "keyword",
                    "keyword": "string"
                  },
                  "typeParams": []
                },
                {
                  "name": "animated",
                  "params": [],
                  "computed": false,
                  "optional": true,
                  "tsType": {
                    "repr": "boolean",
                    "kind": "keyword",
                    "keyword": "boolean"
                  },
                  "typeParams": []
                }
              ],
              "callSignatures": [],
              "indexSignatures": []
            }
          },
          "typeParams": []
        },
        {
          "name": "url",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1218,
            "col": 4
          },
          "jsDoc": {
            "doc": "optional url for link-style buttons that can navigate a user to the web. Only type 5 Link buttons can have a url"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "disabled",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1220,
            "col": 4
          },
          "jsDoc": {
            "doc": "Whether or not this button is disabled"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "DiscordInputTextComponent",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 1224,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "https://discord.com/developers/docs/interactions/message-components#text-inputs-text-input-structure"
    },
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "type",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1226,
            "col": 4
          },
          "jsDoc": {
            "doc": "InputText Component is of type 3"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "MessageComponentTypes.InputText",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "MessageComponentTypes.InputText"
            }
          },
          "typeParams": []
        },
        {
          "name": "style",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1228,
            "col": 4
          },
          "jsDoc": {
            "doc": "The style of the InputText"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "TextStyles",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "TextStyles"
            }
          },
          "typeParams": []
        },
        {
          "name": "custom_id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1230,
            "col": 4
          },
          "jsDoc": {
            "doc": "The customId of the InputText"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "label",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1232,
            "col": 4
          },
          "jsDoc": {
            "doc": "The label of the InputText"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "placeholder",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1234,
            "col": 4
          },
          "jsDoc": {
            "doc": "The placeholder of the InputText"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "min_length",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1236,
            "col": 4
          },
          "jsDoc": {
            "doc": "The minimum length of the text the user has to provide"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "max_length",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1238,
            "col": 4
          },
          "jsDoc": {
            "doc": "The maximum length of the text the user has to provide"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "required",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1240,
            "col": 4
          },
          "jsDoc": {
            "doc": "Whether or not this input is required."
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        },
        {
          "name": "value",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1242,
            "col": 4
          },
          "jsDoc": {
            "doc": "Pre-filled value for input text."
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "DiscordStickerItem",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 1246,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "https://discord.com/developers/docs/resources/sticker#sticker-item-object-sticker-item-structure"
    },
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1248,
            "col": 4
          },
          "jsDoc": {
            "doc": "Id of the sticker"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "name",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1250,
            "col": 4
          },
          "jsDoc": {
            "doc": "Name of the sticker"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "format_type",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1252,
            "col": 4
          },
          "jsDoc": {
            "doc": "[Type of sticker format](https://discord.com/developers/docs/resources/sticker#sticker-object-sticker-format-types)"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "StickerFormatTypes",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "StickerFormatTypes"
            }
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "DiscordStickerPack",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 1256,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "https://discord.com/developers/docs/resources/sticker#sticker-pack-object-sticker-pack-structure"
    },
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1258,
            "col": 4
          },
          "jsDoc": {
            "doc": "id of the sticker pack"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "stickers",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1260,
            "col": 4
          },
          "jsDoc": {
            "doc": "the stickers in the pack"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "DiscordSticker",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "DiscordSticker"
              }
            }
          },
          "typeParams": []
        },
        {
          "name": "name",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1262,
            "col": 4
          },
          "jsDoc": {
            "doc": "name of the sticker pack"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "sku_id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1264,
            "col": 4
          },
          "jsDoc": {
            "doc": "id of the pack's SKU"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "cover_sticker_id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1266,
            "col": 4
          },
          "jsDoc": {
            "doc": "id of a sticker in the pack which is shown as the pack's icon"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "description",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1268,
            "col": 4
          },
          "jsDoc": {
            "doc": "description of the sticker pack"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "banner_asset_id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1270,
            "col": 4
          },
          "jsDoc": {
            "doc": "id of the sticker pack's [banner image](https://discord.com/developers/docs/reference#image-formatting)"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "DiscordInteraction",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 1273,
      "col": 0
    },
    "declarationKind": "export",
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1275,
            "col": 4
          },
          "jsDoc": {
            "doc": "Id of the interaction"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "application_id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1277,
            "col": 4
          },
          "jsDoc": {
            "doc": "Id of the application this interaction is for"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "type",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1279,
            "col": 4
          },
          "jsDoc": {
            "doc": "The type of interaction"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "InteractionTypes",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "InteractionTypes"
            }
          },
          "typeParams": []
        },
        {
          "name": "guild_id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1281,
            "col": 4
          },
          "jsDoc": {
            "doc": "The guild it was sent from"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "channel_id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1283,
            "col": 4
          },
          "jsDoc": {
            "doc": "The channel it was sent from"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "member",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1285,
            "col": 4
          },
          "jsDoc": {
            "doc": "Guild member data for the invoking user, including permissions"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "DiscordInteractionMember",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "DiscordInteractionMember"
            }
          },
          "typeParams": []
        },
        {
          "name": "user",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1287,
            "col": 4
          },
          "jsDoc": {
            "doc": "User object for the invoking user, if invoked in a DM"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "DiscordUser",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "DiscordUser"
            }
          },
          "typeParams": []
        },
        {
          "name": "token",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1289,
            "col": 4
          },
          "jsDoc": {
            "doc": "A continuation token for responding to the interaction"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "version",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1291,
            "col": 4
          },
          "jsDoc": {
            "doc": "Read-only property, always `1`"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "1",
            "kind": "literal",
            "literal": {
              "kind": "number",
              "number": 1.0
            }
          },
          "typeParams": []
        },
        {
          "name": "message",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1293,
            "col": 4
          },
          "jsDoc": {
            "doc": "For the message the button was attached to"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "DiscordMessage",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "DiscordMessage"
            }
          },
          "typeParams": []
        },
        {
          "name": "data",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1295,
            "col": 4
          },
          "jsDoc": {
            "doc": "the command data payload"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "DiscordInteractionData",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "DiscordInteractionData"
            }
          },
          "typeParams": []
        },
        {
          "name": "locale",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1297,
            "col": 4
          },
          "jsDoc": {
            "doc": "The selected language of the invoking user"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "guild_locale",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1299,
            "col": 4
          },
          "jsDoc": {
            "doc": "The guild's preferred locale, if invoked in a guild"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "DiscordInteractionMember",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 1303,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "https://discord.com/developers/docs/resources/guild#guild-member-object"
    },
    "interfaceDef": {
      "extends": [
        {
          "repr": "DiscordMemberWithUser",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "DiscordMemberWithUser"
          }
        }
      ],
      "methods": [],
      "properties": [
        {
          "name": "permissions",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1305,
            "col": 4
          },
          "jsDoc": {
            "doc": "Total permissions of the member in the channel, including overwrites, returned when in the interaction object"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "DiscordInteractionData",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 1308,
      "col": 0
    },
    "declarationKind": "export",
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "component_type",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1310,
            "col": 4
          },
          "jsDoc": {
            "doc": "The type of component"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "MessageComponentTypes",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "MessageComponentTypes"
            }
          },
          "typeParams": []
        },
        {
          "name": "custom_id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1312,
            "col": 4
          },
          "jsDoc": {
            "doc": "The custom id provided for this component."
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "components",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1314,
            "col": 4
          },
          "jsDoc": {
            "doc": "The components if its a Modal Submit interaction."
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "DiscordMessageComponents",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "DiscordMessageComponents"
            }
          },
          "typeParams": []
        },
        {
          "name": "values",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1316,
            "col": 4
          },
          "jsDoc": {
            "doc": "The values chosen by the user."
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            }
          },
          "typeParams": []
        },
        {
          "name": "id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1318,
            "col": 4
          },
          "jsDoc": {
            "doc": "The Id of the invoked command"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "name",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1320,
            "col": 4
          },
          "jsDoc": {
            "doc": "The name of the invoked command"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "type",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1322,
            "col": 4
          },
          "jsDoc": {
            "doc": "the type of the invoked command"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "ApplicationCommandTypes",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "ApplicationCommandTypes"
            }
          },
          "typeParams": []
        },
        {
          "name": "resolved",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1324,
            "col": 4
          },
          "jsDoc": {
            "doc": "Converted users + roles + channels + attachments"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "typeLiteral",
            "typeLiteral": {
              "methods": [],
              "properties": [
                {
                  "name": "messages",
                  "params": [],
                  "computed": false,
                  "optional": true,
                  "tsType": {
                    "repr": "Record",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": [
                        {
                          "repr": "string",
                          "kind": "keyword",
                          "keyword": "string"
                        },
                        {
                          "repr": "DiscordMessage",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "DiscordMessage"
                          }
                        }
                      ],
                      "typeName": "Record"
                    }
                  },
                  "typeParams": []
                },
                {
                  "name": "users",
                  "params": [],
                  "computed": false,
                  "optional": true,
                  "tsType": {
                    "repr": "Record",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": [
                        {
                          "repr": "string",
                          "kind": "keyword",
                          "keyword": "string"
                        },
                        {
                          "repr": "DiscordUser",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "DiscordUser"
                          }
                        }
                      ],
                      "typeName": "Record"
                    }
                  },
                  "typeParams": []
                },
                {
                  "name": "members",
                  "params": [],
                  "computed": false,
                  "optional": true,
                  "tsType": {
                    "repr": "Record",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": [
                        {
                          "repr": "string",
                          "kind": "keyword",
                          "keyword": "string"
                        },
                        {
                          "repr": "Omit",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": [
                              {
                                "repr": "DiscordInteractionMember",
                                "kind": "typeRef",
                                "typeRef": {
                                  "typeParams": null,
                                  "typeName": "DiscordInteractionMember"
                                }
                              },
                              {
                                "repr": "",
                                "kind": "union",
                                "union": [
                                  {
                                    "repr": "user",
                                    "kind": "literal",
                                    "literal": {
                                      "kind": "string",
                                      "string": "user"
                                    }
                                  },
                                  {
                                    "repr": "deaf",
                                    "kind": "literal",
                                    "literal": {
                                      "kind": "string",
                                      "string": "deaf"
                                    }
                                  },
                                  {
                                    "repr": "mute",
                                    "kind": "literal",
                                    "literal": {
                                      "kind": "string",
                                      "string": "mute"
                                    }
                                  }
                                ]
                              }
                            ],
                            "typeName": "Omit"
                          }
                        }
                      ],
                      "typeName": "Record"
                    }
                  },
                  "typeParams": []
                },
                {
                  "name": "roles",
                  "params": [],
                  "computed": false,
                  "optional": true,
                  "tsType": {
                    "repr": "Record",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": [
                        {
                          "repr": "string",
                          "kind": "keyword",
                          "keyword": "string"
                        },
                        {
                          "repr": "DiscordRole",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "DiscordRole"
                          }
                        }
                      ],
                      "typeName": "Record"
                    }
                  },
                  "typeParams": []
                },
                {
                  "name": "channels",
                  "params": [],
                  "computed": false,
                  "optional": true,
                  "tsType": {
                    "repr": "Record",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": [
                        {
                          "repr": "string",
                          "kind": "keyword",
                          "keyword": "string"
                        },
                        {
                          "repr": "Pick",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": [
                              {
                                "repr": "DiscordChannel",
                                "kind": "typeRef",
                                "typeRef": {
                                  "typeParams": null,
                                  "typeName": "DiscordChannel"
                                }
                              },
                              {
                                "repr": "",
                                "kind": "union",
                                "union": [
                                  {
                                    "repr": "id",
                                    "kind": "literal",
                                    "literal": {
                                      "kind": "string",
                                      "string": "id"
                                    }
                                  },
                                  {
                                    "repr": "name",
                                    "kind": "literal",
                                    "literal": {
                                      "kind": "string",
                                      "string": "name"
                                    }
                                  },
                                  {
                                    "repr": "type",
                                    "kind": "literal",
                                    "literal": {
                                      "kind": "string",
                                      "string": "type"
                                    }
                                  },
                                  {
                                    "repr": "permissions",
                                    "kind": "literal",
                                    "literal": {
                                      "kind": "string",
                                      "string": "permissions"
                                    }
                                  }
                                ]
                              }
                            ],
                            "typeName": "Pick"
                          }
                        }
                      ],
                      "typeName": "Record"
                    }
                  },
                  "typeParams": []
                },
                {
                  "name": "attachments",
                  "params": [],
                  "computed": false,
                  "optional": false,
                  "tsType": {
                    "repr": "Record",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": [
                        {
                          "repr": "string",
                          "kind": "keyword",
                          "keyword": "string"
                        },
                        {
                          "repr": "DiscordAttachment",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "DiscordAttachment"
                          }
                        }
                      ],
                      "typeName": "Record"
                    }
                  },
                  "typeParams": []
                }
              ],
              "callSignatures": [],
              "indexSignatures": []
            }
          },
          "typeParams": []
        },
        {
          "name": "options",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1339,
            "col": 4
          },
          "jsDoc": {
            "doc": "The params + values from the user"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "DiscordInteractionDataOption",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "DiscordInteractionDataOption"
              }
            }
          },
          "typeParams": []
        },
        {
          "name": "target_id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1341,
            "col": 4
          },
          "jsDoc": {
            "doc": "The target id if this is a context menu command."
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "guild_id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1343,
            "col": 4
          },
          "jsDoc": {
            "doc": "the id of the guild the command is registered to"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "typeAlias",
    "name": "DiscordInteractionDataOption",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 1346,
      "col": 0
    },
    "declarationKind": "export",
    "typeAliasDef": {
      "tsType": {
        "repr": "",
        "kind": "typeLiteral",
        "typeLiteral": {
          "methods": [],
          "properties": [
            {
              "name": "name",
              "params": [],
              "computed": false,
              "optional": false,
              "tsType": {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              },
              "typeParams": []
            },
            {
              "name": "type",
              "params": [],
              "computed": false,
              "optional": false,
              "tsType": {
                "repr": "ApplicationCommandOptionTypes",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "ApplicationCommandOptionTypes"
                }
              },
              "typeParams": []
            },
            {
              "name": "value",
              "params": [],
              "computed": false,
              "optional": true,
              "tsType": {
                "repr": "",
                "kind": "union",
                "union": [
                  {
                    "repr": "string",
                    "kind": "keyword",
                    "keyword": "string"
                  },
                  {
                    "repr": "boolean",
                    "kind": "keyword",
                    "keyword": "boolean"
                  },
                  {
                    "repr": "number",
                    "kind": "keyword",
                    "keyword": "number"
                  },
                  {
                    "repr": "DiscordMember",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "DiscordMember"
                    }
                  },
                  {
                    "repr": "DiscordChannel",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "DiscordChannel"
                    }
                  },
                  {
                    "repr": "DiscordRole",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "DiscordRole"
                    }
                  }
                ]
              },
              "typeParams": []
            },
            {
              "name": "options",
              "params": [],
              "computed": false,
              "optional": true,
              "tsType": {
                "repr": "",
                "kind": "array",
                "array": {
                  "repr": "DiscordInteractionDataOption",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "DiscordInteractionDataOption"
                  }
                }
              },
              "typeParams": []
            },
            {
              "name": "focused",
              "params": [],
              "computed": false,
              "optional": true,
              "tsType": {
                "repr": "boolean",
                "kind": "keyword",
                "keyword": "boolean"
              },
              "typeParams": []
            }
          ],
          "callSignatures": [],
          "indexSignatures": []
        }
      },
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "DiscordInteractionDataResolved",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 1359,
      "col": 0
    },
    "declarationKind": "export",
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "messages",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1361,
            "col": 4
          },
          "jsDoc": {
            "doc": "The Ids and Message objects"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "Record",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": [
                {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                {
                  "repr": "DiscordMessage",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "DiscordMessage"
                  }
                }
              ],
              "typeName": "Record"
            }
          },
          "typeParams": []
        },
        {
          "name": "users",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1363,
            "col": 4
          },
          "jsDoc": {
            "doc": "The Ids and User objects"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "Record",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": [
                {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                {
                  "repr": "DiscordUser",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "DiscordUser"
                  }
                }
              ],
              "typeName": "Record"
            }
          },
          "typeParams": []
        },
        {
          "name": "members",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1365,
            "col": 4
          },
          "jsDoc": {
            "doc": "The Ids and partial Member objects"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "Record",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": [
                {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                {
                  "repr": "Omit",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": [
                      {
                        "repr": "DiscordInteractionMember",
                        "kind": "typeRef",
                        "typeRef": {
                          "typeParams": null,
                          "typeName": "DiscordInteractionMember"
                        }
                      },
                      {
                        "repr": "",
                        "kind": "union",
                        "union": [
                          {
                            "repr": "user",
                            "kind": "literal",
                            "literal": {
                              "kind": "string",
                              "string": "user"
                            }
                          },
                          {
                            "repr": "deaf",
                            "kind": "literal",
                            "literal": {
                              "kind": "string",
                              "string": "deaf"
                            }
                          },
                          {
                            "repr": "mute",
                            "kind": "literal",
                            "literal": {
                              "kind": "string",
                              "string": "mute"
                            }
                          }
                        ]
                      }
                    ],
                    "typeName": "Omit"
                  }
                }
              ],
              "typeName": "Record"
            }
          },
          "typeParams": []
        },
        {
          "name": "roles",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1367,
            "col": 4
          },
          "jsDoc": {
            "doc": "The Ids and Role objects"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "Record",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": [
                {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                {
                  "repr": "DiscordRole",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "DiscordRole"
                  }
                }
              ],
              "typeName": "Record"
            }
          },
          "typeParams": []
        },
        {
          "name": "channels",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1369,
            "col": 4
          },
          "jsDoc": {
            "doc": "The Ids and partial Channel objects"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "Record",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": [
                {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                {
                  "repr": "Pick",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": [
                      {
                        "repr": "DiscordChannel",
                        "kind": "typeRef",
                        "typeRef": {
                          "typeParams": null,
                          "typeName": "DiscordChannel"
                        }
                      },
                      {
                        "repr": "",
                        "kind": "union",
                        "union": [
                          {
                            "repr": "id",
                            "kind": "literal",
                            "literal": {
                              "kind": "string",
                              "string": "id"
                            }
                          },
                          {
                            "repr": "name",
                            "kind": "literal",
                            "literal": {
                              "kind": "string",
                              "string": "name"
                            }
                          },
                          {
                            "repr": "type",
                            "kind": "literal",
                            "literal": {
                              "kind": "string",
                              "string": "type"
                            }
                          },
                          {
                            "repr": "permissions",
                            "kind": "literal",
                            "literal": {
                              "kind": "string",
                              "string": "permissions"
                            }
                          }
                        ]
                      }
                    ],
                    "typeName": "Pick"
                  }
                }
              ],
              "typeName": "Record"
            }
          },
          "typeParams": []
        },
        {
          "name": "attachments",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1371,
            "col": 4
          },
          "jsDoc": {
            "doc": "The Ids and attachments objects"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "Record",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": [
                {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                {
                  "repr": "DiscordAttachment",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "DiscordAttachment"
                  }
                }
              ],
              "typeName": "Record"
            }
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "DiscordListActiveThreads",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 1374,
      "col": 0
    },
    "declarationKind": "export",
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "threads",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1376,
            "col": 4
          },
          "jsDoc": {
            "doc": "The active threads"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "DiscordChannel",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "DiscordChannel"
              }
            }
          },
          "typeParams": []
        },
        {
          "name": "members",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1378,
            "col": 4
          },
          "jsDoc": {
            "doc": "A thread member object for each returned thread the current user has joined"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "DiscordThreadMember",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "DiscordThreadMember"
              }
            }
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "DiscordListArchivedThreads",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 1381,
      "col": 0
    },
    "declarationKind": "export",
    "interfaceDef": {
      "extends": [
        {
          "repr": "DiscordListActiveThreads",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "DiscordListActiveThreads"
          }
        }
      ],
      "methods": [],
      "properties": [
        {
          "name": "has_more",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1383,
            "col": 4
          },
          "jsDoc": {
            "doc": "Whether there are potentially additional threads that could be returned on a subsequent call"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "DiscordThreadListSync",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 1386,
      "col": 0
    },
    "declarationKind": "export",
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "guild_id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1388,
            "col": 4
          },
          "jsDoc": {
            "doc": "The id of the guild"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "channel_ids",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1390,
            "col": 4
          },
          "jsDoc": {
            "doc": "The parent channel ids whose threads are being synced. If omitted, then threads were synced for the entire guild. This array may contain channelIds that have no active threads as well, so you know to clear that data"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            }
          },
          "typeParams": []
        },
        {
          "name": "threads",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1392,
            "col": 4
          },
          "jsDoc": {
            "doc": "All active threads in the given channels that the current user can access"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "DiscordChannel",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "DiscordChannel"
              }
            }
          },
          "typeParams": []
        },
        {
          "name": "members",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1394,
            "col": 4
          },
          "jsDoc": {
            "doc": "All thread member objects from the synced threads for the current user, indicating which threads the current user has been added to"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "DiscordThreadMember",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "DiscordThreadMember"
              }
            }
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "DiscordAuditLog",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 1398,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "https://discord.com/developers/docs/resources/audit-log#audit-log-object"
    },
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "webhooks",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1400,
            "col": 4
          },
          "jsDoc": {
            "doc": "List of webhooks found in the audit log"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "DiscordWebhook",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "DiscordWebhook"
              }
            }
          },
          "typeParams": []
        },
        {
          "name": "users",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1402,
            "col": 4
          },
          "jsDoc": {
            "doc": "List of users found in the audit log"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "DiscordUser",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "DiscordUser"
              }
            }
          },
          "typeParams": []
        },
        {
          "name": "audit_log_entries",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1404,
            "col": 4
          },
          "jsDoc": {
            "doc": "List of audit log entries, sorted from most to least recent"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "DiscordAuditLogEntry",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "DiscordAuditLogEntry"
              }
            }
          },
          "typeParams": []
        },
        {
          "name": "integrations",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1406,
            "col": 4
          },
          "jsDoc": {
            "doc": "List of partial integration objects"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "Partial",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "DiscordIntegration",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "DiscordIntegration"
                    }
                  }
                ],
                "typeName": "Partial"
              }
            }
          },
          "typeParams": []
        },
        {
          "name": "threads",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1411,
            "col": 4
          },
          "jsDoc": {
            "doc": "List of threads found in the audit log.\nThreads referenced in `THREAD_CREATE` and `THREAD_UPDATE` events are included in the threads map since archived threads might not be kept in memory by clients."
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "DiscordChannel",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "DiscordChannel"
              }
            }
          },
          "typeParams": []
        },
        {
          "name": "guild_scheduled_events",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1413,
            "col": 4
          },
          "jsDoc": {
            "doc": "List of guild scheduled events found in the audit log"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "DiscordScheduledEvent",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "DiscordScheduledEvent"
              }
            }
          },
          "typeParams": []
        },
        {
          "name": "auto_moderation_rules",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1415,
            "col": 4
          },
          "jsDoc": {
            "doc": "List of auto moderation rules referenced in the audit log"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "DiscordAutoModerationRule",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "DiscordAutoModerationRule"
              }
            }
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "DiscordAutoModerationRule",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 1418,
      "col": 0
    },
    "declarationKind": "export",
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1420,
            "col": 4
          },
          "jsDoc": {
            "doc": "The id of this rule"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "guild_id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1422,
            "col": 4
          },
          "jsDoc": {
            "doc": "The guild id"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "name",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1424,
            "col": 4
          },
          "jsDoc": {
            "doc": "The name of the rule"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "creator_id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1426,
            "col": 4
          },
          "jsDoc": {
            "doc": "The id of the user who created this rule."
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "event_type",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1428,
            "col": 4
          },
          "jsDoc": {
            "doc": "Indicates in what event context a rule should be checked."
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "AutoModerationEventTypes",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "AutoModerationEventTypes"
            }
          },
          "typeParams": []
        },
        {
          "name": "trigger_type",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1430,
            "col": 4
          },
          "jsDoc": {
            "doc": "The type of trigger for this rule"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "AutoModerationTriggerTypes",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "AutoModerationTriggerTypes"
            }
          },
          "typeParams": []
        },
        {
          "name": "trigger_metadata",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1432,
            "col": 4
          },
          "jsDoc": {
            "doc": "The metadata used to determine whether a rule should be triggered."
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "DiscordAutoModerationRuleTriggerMetadata",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "DiscordAutoModerationRuleTriggerMetadata"
            }
          },
          "typeParams": []
        },
        {
          "name": "actions",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1434,
            "col": 4
          },
          "jsDoc": {
            "doc": "Actions which will execute whenever a rule is triggered."
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "DiscordAutoModerationAction",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "DiscordAutoModerationAction"
              }
            }
          },
          "typeParams": []
        },
        {
          "name": "enabled",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1436,
            "col": 4
          },
          "jsDoc": {
            "doc": "Whether the rule is enabled."
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        },
        {
          "name": "exempt_roles",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1438,
            "col": 4
          },
          "jsDoc": {
            "doc": "The role ids that are whitelisted. Max 20."
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            }
          },
          "typeParams": []
        },
        {
          "name": "exempt_channels",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1440,
            "col": 4
          },
          "jsDoc": {
            "doc": "The channel ids that are whitelisted. Max 50."
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            }
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "enum",
    "name": "AutoModerationEventTypes",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 1443,
      "col": 0
    },
    "declarationKind": "export",
    "enumDef": {
      "members": [
        {
          "name": "MessageSend",
          "init": {
            "repr": "1",
            "kind": "literal",
            "literal": {
              "kind": "number",
              "number": 1.0
            }
          },
          "jsDoc": {
            "doc": "When a user sends a message"
          }
        }
      ]
    }
  },
  {
    "kind": "enum",
    "name": "AutoModerationTriggerTypes",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 1448,
      "col": 0
    },
    "declarationKind": "export",
    "enumDef": {
      "members": [
        {
          "name": "Keyword",
          "init": {
            "repr": "1",
            "kind": "literal",
            "literal": {
              "kind": "number",
              "number": 1.0
            }
          }
        },
        {
          "name": "HarmfulLink"
        },
        {
          "name": "Spam"
        },
        {
          "name": "KeywordPreset"
        }
      ]
    }
  },
  {
    "kind": "interface",
    "name": "DiscordAutoModerationRuleTriggerMetadata",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 1455,
      "col": 0
    },
    "declarationKind": "export",
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "keyword_filter",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1458,
            "col": 4
          },
          "jsDoc": {
            "doc": "The keywords needed to match. Only present when TriggerType.Keyword"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            }
          },
          "typeParams": []
        },
        {
          "name": "presets",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1460,
            "col": 4
          },
          "jsDoc": {
            "doc": "The pre-defined lists of words to match from. Only present when TriggerType.KeywordPreset"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "DiscordAutoModerationRuleTriggerMetadataPresets",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "DiscordAutoModerationRuleTriggerMetadataPresets"
              }
            }
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "enum",
    "name": "DiscordAutoModerationRuleTriggerMetadataPresets",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 1463,
      "col": 0
    },
    "declarationKind": "export",
    "enumDef": {
      "members": [
        {
          "name": "Profanity",
          "init": {
            "repr": "1",
            "kind": "literal",
            "literal": {
              "kind": "number",
              "number": 1.0
            }
          },
          "jsDoc": {
            "doc": "Words that may be considered forms of swearing or cursing"
          }
        },
        {
          "name": "SexualContent",
          "jsDoc": {
            "doc": "Words that refer to sexually explicit behavior or activity"
          }
        },
        {
          "name": "Slurs",
          "jsDoc": {
            "doc": "Personal insults or words that may be considered hate speech"
          }
        }
      ]
    }
  },
  {
    "kind": "interface",
    "name": "DiscordAutoModerationAction",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 1472,
      "col": 0
    },
    "declarationKind": "export",
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "type",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1474,
            "col": 4
          },
          "jsDoc": {
            "doc": "The type of action to take when a rule is triggered"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "AutoModerationActionType",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "AutoModerationActionType"
            }
          },
          "typeParams": []
        },
        {
          "name": "metadata",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1476,
            "col": 4
          },
          "jsDoc": {
            "doc": "additional metadata needed during execution for this specific action type"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "DiscordAutoModerationActionMetadata",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "DiscordAutoModerationActionMetadata"
            }
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "enum",
    "name": "AutoModerationActionType",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 1479,
      "col": 0
    },
    "declarationKind": "export",
    "enumDef": {
      "members": [
        {
          "name": "BlockMessage",
          "init": {
            "repr": "1",
            "kind": "literal",
            "literal": {
              "kind": "number",
              "number": 1.0
            }
          },
          "jsDoc": {
            "doc": "Blocks the content of a message according to the rule"
          }
        },
        {
          "name": "SendAlertMessage",
          "jsDoc": {
            "doc": "Logs user content to a specified channel"
          }
        },
        {
          "name": "Timeout",
          "jsDoc": {
            "doc": "Times out user for specified duration"
          }
        }
      ]
    }
  },
  {
    "kind": "interface",
    "name": "DiscordAutoModerationActionMetadata",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 1488,
      "col": 0
    },
    "declarationKind": "export",
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "channel_id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1490,
            "col": 4
          },
          "jsDoc": {
            "doc": "The id of channel to which user content should be logged. Only in ActionType.SendAlertMessage"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "duration_seconds",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1492,
            "col": 4
          },
          "jsDoc": {
            "doc": "Timeout duration in seconds maximum of 2419200 seconds (4 weeks). Only supported for TriggerType.Keyword && Only in ActionType.Timeout"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "DiscordAutoModerationActionExecution",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 1495,
      "col": 0
    },
    "declarationKind": "export",
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "guild_id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1497,
            "col": 4
          },
          "jsDoc": {
            "doc": "The id of the guild"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "rule_id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1499,
            "col": 4
          },
          "jsDoc": {
            "doc": "The id of the rule that was executed"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "user_id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1501,
            "col": 4
          },
          "jsDoc": {
            "doc": "The id of the user which generated the content which triggered the rule"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "content",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1503,
            "col": 4
          },
          "jsDoc": {
            "doc": "The content from the user"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "action",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1505,
            "col": 4
          },
          "jsDoc": {
            "doc": "Action which was executed"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "DiscordAutoModerationAction",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "DiscordAutoModerationAction"
            }
          },
          "typeParams": []
        },
        {
          "name": "rule_trigger_type",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1507,
            "col": 4
          },
          "jsDoc": {
            "doc": "The trigger type of the rule that was executed."
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "AutoModerationTriggerTypes",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "AutoModerationTriggerTypes"
            }
          },
          "typeParams": []
        },
        {
          "name": "channel_id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1509,
            "col": 4
          },
          "jsDoc": {
            "doc": "The id of the channel in which user content was posted"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              },
              {
                "repr": "null",
                "kind": "keyword",
                "keyword": "null"
              }
            ]
          },
          "typeParams": []
        },
        {
          "name": "message_id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1511,
            "col": 4
          },
          "jsDoc": {
            "doc": "The id of the message. Will not exist if message was blocked by automod or content was not part of any message"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              },
              {
                "repr": "null",
                "kind": "keyword",
                "keyword": "null"
              }
            ]
          },
          "typeParams": []
        },
        {
          "name": "alert_system_message_id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1513,
            "col": 4
          },
          "jsDoc": {
            "doc": "The id of any system auto moderation messages posted as a result of this action"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              },
              {
                "repr": "null",
                "kind": "keyword",
                "keyword": "null"
              }
            ]
          },
          "typeParams": []
        },
        {
          "name": "matched_keyword",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1515,
            "col": 4
          },
          "jsDoc": {
            "doc": "The word or phrase that triggerred the rule."
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              },
              {
                "repr": "null",
                "kind": "keyword",
                "keyword": "null"
              }
            ]
          },
          "typeParams": []
        },
        {
          "name": "matched_content",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1517,
            "col": 4
          },
          "jsDoc": {
            "doc": "The substring in content that triggered rule"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              },
              {
                "repr": "null",
                "kind": "keyword",
                "keyword": "null"
              }
            ]
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "DiscordAuditLogEntry",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 1521,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "https://discord.com/developers/docs/resources/audit-log#audit-log-entry-object-audit-log-entry-structure"
    },
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "target_id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1523,
            "col": 4
          },
          "jsDoc": {
            "doc": "ID of the affected entity (webhook, user, role, etc.)"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              },
              {
                "repr": "null",
                "kind": "keyword",
                "keyword": "null"
              }
            ]
          },
          "typeParams": []
        },
        {
          "name": "changes",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1525,
            "col": 4
          },
          "jsDoc": {
            "doc": "Changes made to the `target_id`"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "DiscordAuditLogChange",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "DiscordAuditLogChange"
              }
            }
          },
          "typeParams": []
        },
        {
          "name": "user_id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1527,
            "col": 4
          },
          "jsDoc": {
            "doc": "User or app that made the changes"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              },
              {
                "repr": "null",
                "kind": "keyword",
                "keyword": "null"
              }
            ]
          },
          "typeParams": []
        },
        {
          "name": "id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1529,
            "col": 4
          },
          "jsDoc": {
            "doc": "ID of the entry"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "action_type",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1531,
            "col": 4
          },
          "jsDoc": {
            "doc": "Type of action that occurred"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "AuditLogEvents",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "AuditLogEvents"
            }
          },
          "typeParams": []
        },
        {
          "name": "options",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1533,
            "col": 4
          },
          "jsDoc": {
            "doc": "Additional info for certain event types"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "DiscordOptionalAuditEntryInfo",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "DiscordOptionalAuditEntryInfo"
            }
          },
          "typeParams": []
        },
        {
          "name": "reason",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1535,
            "col": 4
          },
          "jsDoc": {
            "doc": "Reason for the change (1-512 characters)"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "typeAlias",
    "name": "DiscordAuditLogChange",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 1539,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "https://discord.com/developers/docs/resources/audit-log#audit-log-change-object-audit-log-change-structure"
    },
    "typeAliasDef": {
      "tsType": {
        "repr": "",
        "kind": "union",
        "union": [
          {
            "repr": "",
            "kind": "typeLiteral",
            "typeLiteral": {
              "methods": [],
              "properties": [
                {
                  "name": "new_value",
                  "params": [],
                  "computed": false,
                  "optional": false,
                  "tsType": {
                    "repr": "string",
                    "kind": "keyword",
                    "keyword": "string"
                  },
                  "typeParams": []
                },
                {
                  "name": "old_value",
                  "params": [],
                  "computed": false,
                  "optional": false,
                  "tsType": {
                    "repr": "string",
                    "kind": "keyword",
                    "keyword": "string"
                  },
                  "typeParams": []
                },
                {
                  "name": "key",
                  "params": [],
                  "computed": false,
                  "optional": false,
                  "tsType": {
                    "repr": "",
                    "kind": "union",
                    "union": [
                      {
                        "repr": "name",
                        "kind": "literal",
                        "literal": {
                          "kind": "string",
                          "string": "name"
                        }
                      },
                      {
                        "repr": "description",
                        "kind": "literal",
                        "literal": {
                          "kind": "string",
                          "string": "description"
                        }
                      },
                      {
                        "repr": "discovery_splash_hash",
                        "kind": "literal",
                        "literal": {
                          "kind": "string",
                          "string": "discovery_splash_hash"
                        }
                      },
                      {
                        "repr": "banner_hash",
                        "kind": "literal",
                        "literal": {
                          "kind": "string",
                          "string": "banner_hash"
                        }
                      },
                      {
                        "repr": "preferred_locale",
                        "kind": "literal",
                        "literal": {
                          "kind": "string",
                          "string": "preferred_locale"
                        }
                      },
                      {
                        "repr": "rules_channel_id",
                        "kind": "literal",
                        "literal": {
                          "kind": "string",
                          "string": "rules_channel_id"
                        }
                      },
                      {
                        "repr": "public_updates_channel_id",
                        "kind": "literal",
                        "literal": {
                          "kind": "string",
                          "string": "public_updates_channel_id"
                        }
                      },
                      {
                        "repr": "icon_hash",
                        "kind": "literal",
                        "literal": {
                          "kind": "string",
                          "string": "icon_hash"
                        }
                      },
                      {
                        "repr": "image_hash",
                        "kind": "literal",
                        "literal": {
                          "kind": "string",
                          "string": "image_hash"
                        }
                      },
                      {
                        "repr": "splash_hash",
                        "kind": "literal",
                        "literal": {
                          "kind": "string",
                          "string": "splash_hash"
                        }
                      },
                      {
                        "repr": "owner_id",
                        "kind": "literal",
                        "literal": {
                          "kind": "string",
                          "string": "owner_id"
                        }
                      },
                      {
                        "repr": "region",
                        "kind": "literal",
                        "literal": {
                          "kind": "string",
                          "string": "region"
                        }
                      },
                      {
                        "repr": "afk_channel_id",
                        "kind": "literal",
                        "literal": {
                          "kind": "string",
                          "string": "afk_channel_id"
                        }
                      },
                      {
                        "repr": "vanity_url_code",
                        "kind": "literal",
                        "literal": {
                          "kind": "string",
                          "string": "vanity_url_code"
                        }
                      },
                      {
                        "repr": "widget_channel_id",
                        "kind": "literal",
                        "literal": {
                          "kind": "string",
                          "string": "widget_channel_id"
                        }
                      },
                      {
                        "repr": "system_channel_id",
                        "kind": "literal",
                        "literal": {
                          "kind": "string",
                          "string": "system_channel_id"
                        }
                      },
                      {
                        "repr": "topic",
                        "kind": "literal",
                        "literal": {
                          "kind": "string",
                          "string": "topic"
                        }
                      },
                      {
                        "repr": "application_id",
                        "kind": "literal",
                        "literal": {
                          "kind": "string",
                          "string": "application_id"
                        }
                      },
                      {
                        "repr": "permissions",
                        "kind": "literal",
                        "literal": {
                          "kind": "string",
                          "string": "permissions"
                        }
                      },
                      {
                        "repr": "allow",
                        "kind": "literal",
                        "literal": {
                          "kind": "string",
                          "string": "allow"
                        }
                      },
                      {
                        "repr": "deny",
                        "kind": "literal",
                        "literal": {
                          "kind": "string",
                          "string": "deny"
                        }
                      },
                      {
                        "repr": "code",
                        "kind": "literal",
                        "literal": {
                          "kind": "string",
                          "string": "code"
                        }
                      },
                      {
                        "repr": "channel_id",
                        "kind": "literal",
                        "literal": {
                          "kind": "string",
                          "string": "channel_id"
                        }
                      },
                      {
                        "repr": "inviter_id",
                        "kind": "literal",
                        "literal": {
                          "kind": "string",
                          "string": "inviter_id"
                        }
                      },
                      {
                        "repr": "nick",
                        "kind": "literal",
                        "literal": {
                          "kind": "string",
                          "string": "nick"
                        }
                      },
                      {
                        "repr": "avatar_hash",
                        "kind": "literal",
                        "literal": {
                          "kind": "string",
                          "string": "avatar_hash"
                        }
                      },
                      {
                        "repr": "id",
                        "kind": "literal",
                        "literal": {
                          "kind": "string",
                          "string": "id"
                        }
                      },
                      {
                        "repr": "location",
                        "kind": "literal",
                        "literal": {
                          "kind": "string",
                          "string": "location"
                        }
                      },
                      {
                        "repr": "command_id",
                        "kind": "literal",
                        "literal": {
                          "kind": "string",
                          "string": "command_id"
                        }
                      }
                    ]
                  },
                  "typeParams": []
                }
              ],
              "callSignatures": [],
              "indexSignatures": []
            }
          },
          {
            "repr": "",
            "kind": "typeLiteral",
            "typeLiteral": {
              "methods": [],
              "properties": [
                {
                  "name": "new_value",
                  "params": [],
                  "computed": false,
                  "optional": false,
                  "tsType": {
                    "repr": "number",
                    "kind": "keyword",
                    "keyword": "number"
                  },
                  "typeParams": []
                },
                {
                  "name": "old_value",
                  "params": [],
                  "computed": false,
                  "optional": false,
                  "tsType": {
                    "repr": "number",
                    "kind": "keyword",
                    "keyword": "number"
                  },
                  "typeParams": []
                },
                {
                  "name": "key",
                  "params": [],
                  "computed": false,
                  "optional": false,
                  "tsType": {
                    "repr": "",
                    "kind": "union",
                    "union": [
                      {
                        "repr": "afk_timeout",
                        "kind": "literal",
                        "literal": {
                          "kind": "string",
                          "string": "afk_timeout"
                        }
                      },
                      {
                        "repr": "mfa_level",
                        "kind": "literal",
                        "literal": {
                          "kind": "string",
                          "string": "mfa_level"
                        }
                      },
                      {
                        "repr": "verification_level",
                        "kind": "literal",
                        "literal": {
                          "kind": "string",
                          "string": "verification_level"
                        }
                      },
                      {
                        "repr": "explicit_content_filter",
                        "kind": "literal",
                        "literal": {
                          "kind": "string",
                          "string": "explicit_content_filter"
                        }
                      },
                      {
                        "repr": "default_message_notifications",
                        "kind": "literal",
                        "literal": {
                          "kind": "string",
                          "string": "default_message_notifications"
                        }
                      },
                      {
                        "repr": "prune_delete_days",
                        "kind": "literal",
                        "literal": {
                          "kind": "string",
                          "string": "prune_delete_days"
                        }
                      },
                      {
                        "repr": "position",
                        "kind": "literal",
                        "literal": {
                          "kind": "string",
                          "string": "position"
                        }
                      },
                      {
                        "repr": "bitrate",
                        "kind": "literal",
                        "literal": {
                          "kind": "string",
                          "string": "bitrate"
                        }
                      },
                      {
                        "repr": "rate_limit_per_user",
                        "kind": "literal",
                        "literal": {
                          "kind": "string",
                          "string": "rate_limit_per_user"
                        }
                      },
                      {
                        "repr": "color",
                        "kind": "literal",
                        "literal": {
                          "kind": "string",
                          "string": "color"
                        }
                      },
                      {
                        "repr": "max_uses",
                        "kind": "literal",
                        "literal": {
                          "kind": "string",
                          "string": "max_uses"
                        }
                      },
                      {
                        "repr": "uses",
                        "kind": "literal",
                        "literal": {
                          "kind": "string",
                          "string": "uses"
                        }
                      },
                      {
                        "repr": "max_age",
                        "kind": "literal",
                        "literal": {
                          "kind": "string",
                          "string": "max_age"
                        }
                      },
                      {
                        "repr": "expire_behavior",
                        "kind": "literal",
                        "literal": {
                          "kind": "string",
                          "string": "expire_behavior"
                        }
                      },
                      {
                        "repr": "expire_grace_period",
                        "kind": "literal",
                        "literal": {
                          "kind": "string",
                          "string": "expire_grace_period"
                        }
                      },
                      {
                        "repr": "user_limit",
                        "kind": "literal",
                        "literal": {
                          "kind": "string",
                          "string": "user_limit"
                        }
                      },
                      {
                        "repr": "privacy_level",
                        "kind": "literal",
                        "literal": {
                          "kind": "string",
                          "string": "privacy_level"
                        }
                      },
                      {
                        "repr": "auto_archive_duration",
                        "kind": "literal",
                        "literal": {
                          "kind": "string",
                          "string": "auto_archive_duration"
                        }
                      },
                      {
                        "repr": "default_auto_archive_duration",
                        "kind": "literal",
                        "literal": {
                          "kind": "string",
                          "string": "default_auto_archive_duration"
                        }
                      },
                      {
                        "repr": "entity_type",
                        "kind": "literal",
                        "literal": {
                          "kind": "string",
                          "string": "entity_type"
                        }
                      },
                      {
                        "repr": "status",
                        "kind": "literal",
                        "literal": {
                          "kind": "string",
                          "string": "status"
                        }
                      },
                      {
                        "repr": "communication_disabled_until",
                        "kind": "literal",
                        "literal": {
                          "kind": "string",
                          "string": "communication_disabled_until"
                        }
                      }
                    ]
                  },
                  "typeParams": []
                }
              ],
              "callSignatures": [],
              "indexSignatures": []
            }
          },
          {
            "repr": "",
            "kind": "typeLiteral",
            "typeLiteral": {
              "methods": [],
              "properties": [
                {
                  "name": "new_value",
                  "params": [],
                  "computed": false,
                  "optional": false,
                  "tsType": {
                    "repr": "",
                    "kind": "array",
                    "array": {
                      "repr": "Partial",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": [
                          {
                            "repr": "DiscordRole",
                            "kind": "typeRef",
                            "typeRef": {
                              "typeParams": null,
                              "typeName": "DiscordRole"
                            }
                          }
                        ],
                        "typeName": "Partial"
                      }
                    }
                  },
                  "typeParams": []
                },
                {
                  "name": "old_value",
                  "params": [],
                  "computed": false,
                  "optional": true,
                  "tsType": {
                    "repr": "",
                    "kind": "array",
                    "array": {
                      "repr": "Partial",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": [
                          {
                            "repr": "DiscordRole",
                            "kind": "typeRef",
                            "typeRef": {
                              "typeParams": null,
                              "typeName": "DiscordRole"
                            }
                          }
                        ],
                        "typeName": "Partial"
                      }
                    }
                  },
                  "typeParams": []
                },
                {
                  "name": "key",
                  "params": [],
                  "computed": false,
                  "optional": false,
                  "tsType": {
                    "repr": "",
                    "kind": "union",
                    "union": [
                      {
                        "repr": "$add",
                        "kind": "literal",
                        "literal": {
                          "kind": "string",
                          "string": "$add"
                        }
                      },
                      {
                        "repr": "$remove",
                        "kind": "literal",
                        "literal": {
                          "kind": "string",
                          "string": "$remove"
                        }
                      }
                    ]
                  },
                  "typeParams": []
                }
              ],
              "callSignatures": [],
              "indexSignatures": []
            }
          },
          {
            "repr": "",
            "kind": "typeLiteral",
            "typeLiteral": {
              "methods": [],
              "properties": [
                {
                  "name": "new_value",
                  "params": [],
                  "computed": false,
                  "optional": false,
                  "tsType": {
                    "repr": "boolean",
                    "kind": "keyword",
                    "keyword": "boolean"
                  },
                  "typeParams": []
                },
                {
                  "name": "old_value",
                  "params": [],
                  "computed": false,
                  "optional": false,
                  "tsType": {
                    "repr": "boolean",
                    "kind": "keyword",
                    "keyword": "boolean"
                  },
                  "typeParams": []
                },
                {
                  "name": "key",
                  "params": [],
                  "computed": false,
                  "optional": false,
                  "tsType": {
                    "repr": "",
                    "kind": "union",
                    "union": [
                      {
                        "repr": "widget_enabled",
                        "kind": "literal",
                        "literal": {
                          "kind": "string",
                          "string": "widget_enabled"
                        }
                      },
                      {
                        "repr": "nsfw",
                        "kind": "literal",
                        "literal": {
                          "kind": "string",
                          "string": "nsfw"
                        }
                      },
                      {
                        "repr": "hoist",
                        "kind": "literal",
                        "literal": {
                          "kind": "string",
                          "string": "hoist"
                        }
                      },
                      {
                        "repr": "mentionable",
                        "kind": "literal",
                        "literal": {
                          "kind": "string",
                          "string": "mentionable"
                        }
                      },
                      {
                        "repr": "temporary",
                        "kind": "literal",
                        "literal": {
                          "kind": "string",
                          "string": "temporary"
                        }
                      },
                      {
                        "repr": "deaf",
                        "kind": "literal",
                        "literal": {
                          "kind": "string",
                          "string": "deaf"
                        }
                      },
                      {
                        "repr": "mute",
                        "kind": "literal",
                        "literal": {
                          "kind": "string",
                          "string": "mute"
                        }
                      },
                      {
                        "repr": "enable_emoticons",
                        "kind": "literal",
                        "literal": {
                          "kind": "string",
                          "string": "enable_emoticons"
                        }
                      },
                      {
                        "repr": "archived",
                        "kind": "literal",
                        "literal": {
                          "kind": "string",
                          "string": "archived"
                        }
                      },
                      {
                        "repr": "locked",
                        "kind": "literal",
                        "literal": {
                          "kind": "string",
                          "string": "locked"
                        }
                      },
                      {
                        "repr": "invitable",
                        "kind": "literal",
                        "literal": {
                          "kind": "string",
                          "string": "invitable"
                        }
                      }
                    ]
                  },
                  "typeParams": []
                }
              ],
              "callSignatures": [],
              "indexSignatures": []
            }
          },
          {
            "repr": "",
            "kind": "typeLiteral",
            "typeLiteral": {
              "methods": [],
              "properties": [
                {
                  "name": "new_value",
                  "params": [],
                  "computed": false,
                  "optional": false,
                  "tsType": {
                    "repr": "",
                    "kind": "array",
                    "array": {
                      "repr": "DiscordOverwrite",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "DiscordOverwrite"
                      }
                    }
                  },
                  "typeParams": []
                },
                {
                  "name": "old_value",
                  "params": [],
                  "computed": false,
                  "optional": false,
                  "tsType": {
                    "repr": "",
                    "kind": "array",
                    "array": {
                      "repr": "DiscordOverwrite",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "DiscordOverwrite"
                      }
                    }
                  },
                  "typeParams": []
                },
                {
                  "name": "key",
                  "params": [],
                  "computed": false,
                  "optional": false,
                  "tsType": {
                    "repr": "permission_overwrites",
                    "kind": "literal",
                    "literal": {
                      "kind": "string",
                      "string": "permission_overwrites"
                    }
                  },
                  "typeParams": []
                }
              ],
              "callSignatures": [],
              "indexSignatures": []
            }
          },
          {
            "repr": "",
            "kind": "typeLiteral",
            "typeLiteral": {
              "methods": [],
              "properties": [
                {
                  "name": "new_value",
                  "params": [],
                  "computed": false,
                  "optional": false,
                  "tsType": {
                    "repr": "",
                    "kind": "union",
                    "union": [
                      {
                        "repr": "string",
                        "kind": "keyword",
                        "keyword": "string"
                      },
                      {
                        "repr": "number",
                        "kind": "keyword",
                        "keyword": "number"
                      }
                    ]
                  },
                  "typeParams": []
                },
                {
                  "name": "old_value",
                  "params": [],
                  "computed": false,
                  "optional": false,
                  "tsType": {
                    "repr": "",
                    "kind": "union",
                    "union": [
                      {
                        "repr": "string",
                        "kind": "keyword",
                        "keyword": "string"
                      },
                      {
                        "repr": "number",
                        "kind": "keyword",
                        "keyword": "number"
                      }
                    ]
                  },
                  "typeParams": []
                },
                {
                  "name": "key",
                  "params": [],
                  "computed": false,
                  "optional": false,
                  "tsType": {
                    "repr": "type",
                    "kind": "literal",
                    "literal": {
                      "kind": "string",
                      "string": "type"
                    }
                  },
                  "typeParams": []
                }
              ],
              "callSignatures": [],
              "indexSignatures": []
            }
          }
        ]
      },
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "DiscordOptionalAuditEntryInfo",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 1634,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "https://discord.com/developers/docs/resources/audit-log#audit-log-entry-object-optional-audit-entry-info"
    },
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "delete_member_days",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1640,
            "col": 4
          },
          "jsDoc": {
            "doc": "Number of days after which inactive members were kicked.\n\nEvent types: `MEMBER_PRUNE`"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "members_removed",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1646,
            "col": 4
          },
          "jsDoc": {
            "doc": "Number of members removed by the prune.\n\nEvent types: `MEMBER_PRUNE`"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "channel_id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1652,
            "col": 4
          },
          "jsDoc": {
            "doc": "Channel in which the entities were targeted.\n\nEvent types: `MEMBER_MOVE`, `MESSAGE_PIN`, `MESSAGE_UNPIN`, `MESSAGE_DELETE`, `STAGE_INSTANCE_CREATE`, `STAGE_INSTANCE_UPDATE`, `STAGE_INSTANCE_DELETE`"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "message_id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1658,
            "col": 4
          },
          "jsDoc": {
            "doc": "ID of the message that was targeted.\n\nEvent types: `MESSAGE_PIN`, `MESSAGE_UNPIN`, `STAGE_INSTANCE_CREATE`, `STAGE_INSTANCE_UPDATE`, `STAGE_INSTANCE_DELETE`"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "count",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1664,
            "col": 4
          },
          "jsDoc": {
            "doc": "Number of entities that were targeted.\n\nEvent types: `MESSAGE_DELETE`, `MESSAGE_BULK_DELETE`, `MEMBER_DISCONNECT`, `MEMBER_MOVE`"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1670,
            "col": 4
          },
          "jsDoc": {
            "doc": "ID of the overwritten entity.\n\nEvent types: `CHANNEL_OVERWRITE_CREATE`, `CHANNEL_OVERWRITE_UPDATE`, `CHANNEL_OVERWRITE_DELETE`"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "type",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1676,
            "col": 4
          },
          "jsDoc": {
            "doc": "Type of overwritten entity - \"0\", for \"role\", or \"1\" for \"member\".\n\nEvent types: `CHANNEL_OVERWRITE_CREATE`, `CHANNEL_OVERWRITE_UPDATE`, `CHANNEL_OVERWRITE_DELETE`"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "role_name",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1682,
            "col": 4
          },
          "jsDoc": {
            "doc": "Name of the role if type is \"0\" (not present if type is \"1\").\n\nEvent types: `CHANNEL_OVERWRITE_CREATE`, `CHANNEL_OVERWRITE_UPDATE`, `CHANNEL_OVERWRITE_DELETE`"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "application_id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1688,
            "col": 4
          },
          "jsDoc": {
            "doc": "ID of the app whose permissions were targeted.\n\nEvent types: `APPLICATION_COMMAND_PERMISSION_UPDATE`"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "DiscordScheduledEvent",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 1691,
      "col": 0
    },
    "declarationKind": "export",
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1693,
            "col": 4
          },
          "jsDoc": {
            "doc": "the id of the scheduled event"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "guild_id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1695,
            "col": 4
          },
          "jsDoc": {
            "doc": "the guild id which the scheduled event belongs to"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "channel_id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1697,
            "col": 4
          },
          "jsDoc": {
            "doc": "the channel id in which the scheduled event will be hosted if specified"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              },
              {
                "repr": "null",
                "kind": "keyword",
                "keyword": "null"
              }
            ]
          },
          "typeParams": []
        },
        {
          "name": "creator_id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1699,
            "col": 4
          },
          "jsDoc": {
            "doc": "the id of the user that created the scheduled event"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              },
              {
                "repr": "null",
                "kind": "keyword",
                "keyword": "null"
              }
            ]
          },
          "typeParams": []
        },
        {
          "name": "name",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1701,
            "col": 4
          },
          "jsDoc": {
            "doc": "the name of the scheduled event"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "description",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1703,
            "col": 4
          },
          "jsDoc": {
            "doc": "the description of the scheduled event"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "scheduled_start_time",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1705,
            "col": 4
          },
          "jsDoc": {
            "doc": "the time the scheduled event will start"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "scheduled_end_time",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1707,
            "col": 4
          },
          "jsDoc": {
            "doc": "the time the scheduled event will end if it does end."
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              },
              {
                "repr": "null",
                "kind": "keyword",
                "keyword": "null"
              }
            ]
          },
          "typeParams": []
        },
        {
          "name": "privacy_level",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1709,
            "col": 4
          },
          "jsDoc": {
            "doc": "the privacy level of the scheduled event"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "ScheduledEventPrivacyLevel",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "ScheduledEventPrivacyLevel"
            }
          },
          "typeParams": []
        },
        {
          "name": "status",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1711,
            "col": 4
          },
          "jsDoc": {
            "doc": "the status of the scheduled event"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "ScheduledEventStatus",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "ScheduledEventStatus"
            }
          },
          "typeParams": []
        },
        {
          "name": "entity_type",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1713,
            "col": 4
          },
          "jsDoc": {
            "doc": "the type of hosting entity associated with a scheduled event"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "ScheduledEventEntityType",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "ScheduledEventEntityType"
            }
          },
          "typeParams": []
        },
        {
          "name": "entity_id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1715,
            "col": 4
          },
          "jsDoc": {
            "doc": "any additional id of the hosting entity associated with event"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              },
              {
                "repr": "null",
                "kind": "keyword",
                "keyword": "null"
              }
            ]
          },
          "typeParams": []
        },
        {
          "name": "entity_metadata",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1717,
            "col": 4
          },
          "jsDoc": {
            "doc": "the entity metadata for the scheduled event"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "DiscordScheduledEventEntityMetadata",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "DiscordScheduledEventEntityMetadata"
                }
              },
              {
                "repr": "null",
                "kind": "keyword",
                "keyword": "null"
              }
            ]
          },
          "typeParams": []
        },
        {
          "name": "creator",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1719,
            "col": 4
          },
          "jsDoc": {
            "doc": "the user that created the scheduled event"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "DiscordUser",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "DiscordUser"
            }
          },
          "typeParams": []
        },
        {
          "name": "user_count",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1721,
            "col": 4
          },
          "jsDoc": {
            "doc": "the number of users subscribed to the scheduled event"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "image",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1723,
            "col": 4
          },
          "jsDoc": {
            "doc": "the cover image hash of the scheduled event"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              },
              {
                "repr": "null",
                "kind": "keyword",
                "keyword": "null"
              }
            ]
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "DiscordScheduledEventEntityMetadata",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 1726,
      "col": 0
    },
    "declarationKind": "export",
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "location",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1728,
            "col": 4
          },
          "jsDoc": {
            "doc": "location of the event"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "DiscordGetGatewayBot",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 1732,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "https://discord.com/developers/docs/topics/gateway#get-gateway-bot"
    },
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "url",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1734,
            "col": 4
          },
          "jsDoc": {
            "doc": "The WSS URL that can be used for connecting to the gateway"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "shards",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1736,
            "col": 4
          },
          "jsDoc": {
            "doc": "The recommended number of shards to use when connecting"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "session_start_limit",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1738,
            "col": 4
          },
          "jsDoc": {
            "doc": "Information on the current session start limit"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "DiscordSessionStartLimit",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "DiscordSessionStartLimit"
            }
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "DiscordSessionStartLimit",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 1742,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "https://discord.com/developers/docs/topics/gateway#session-start-limit-object"
    },
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "total",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1744,
            "col": 4
          },
          "jsDoc": {
            "doc": "The total number of session starts the current user is allowed"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "remaining",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1746,
            "col": 4
          },
          "jsDoc": {
            "doc": "The remaining number of session starts the current user is allowed"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "reset_after",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1748,
            "col": 4
          },
          "jsDoc": {
            "doc": "The number of milliseconds after which the limit resets"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "max_concurrency",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1750,
            "col": 4
          },
          "jsDoc": {
            "doc": "The number of identify requests allowed per 5 seconds"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "DiscordInviteMetadata",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 1754,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "https://discord.com/developers/docs/resources/invite#invite-metadata-object"
    },
    "interfaceDef": {
      "extends": [
        {
          "repr": "DiscordInvite",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "DiscordInvite"
          }
        }
      ],
      "methods": [],
      "properties": [
        {
          "name": "uses",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1756,
            "col": 4
          },
          "jsDoc": {
            "doc": "Number of times this invite has been used"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "max_uses",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1758,
            "col": 4
          },
          "jsDoc": {
            "doc": "Max number of times this invite can be used"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "max_age",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1760,
            "col": 4
          },
          "jsDoc": {
            "doc": "Duration (in seconds) after which the invite expires"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "temporary",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1762,
            "col": 4
          },
          "jsDoc": {
            "doc": "Whether this invite only grants temporary membership"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        },
        {
          "name": "created_at",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1764,
            "col": 4
          },
          "jsDoc": {
            "doc": "When this invite was created"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "DiscordInvite",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 1768,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "https://discord.com/developers/docs/resources/invite#invite-object"
    },
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "code",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1770,
            "col": 4
          },
          "jsDoc": {
            "doc": "The invite code (unique Id)"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "guild",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1772,
            "col": 4
          },
          "jsDoc": {
            "doc": "The guild this invite is for"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "Partial",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": [
                {
                  "repr": "DiscordGuild",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "DiscordGuild"
                  }
                }
              ],
              "typeName": "Partial"
            }
          },
          "typeParams": []
        },
        {
          "name": "channel",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1774,
            "col": 4
          },
          "jsDoc": {
            "doc": "The channel this invite is for"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "Partial",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": [
                    {
                      "repr": "DiscordChannel",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "DiscordChannel"
                      }
                    }
                  ],
                  "typeName": "Partial"
                }
              },
              {
                "repr": "null",
                "kind": "keyword",
                "keyword": "null"
              }
            ]
          },
          "typeParams": []
        },
        {
          "name": "inviter",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1776,
            "col": 4
          },
          "jsDoc": {
            "doc": "The user who created the invite"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "DiscordUser",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "DiscordUser"
            }
          },
          "typeParams": []
        },
        {
          "name": "target_type",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1778,
            "col": 4
          },
          "jsDoc": {
            "doc": "The type of target for this voice channel invite"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "TargetTypes",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "TargetTypes"
            }
          },
          "typeParams": []
        },
        {
          "name": "target_user",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1780,
            "col": 4
          },
          "jsDoc": {
            "doc": "The target user for this invite"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "DiscordUser",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "DiscordUser"
            }
          },
          "typeParams": []
        },
        {
          "name": "target_application",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1782,
            "col": 4
          },
          "jsDoc": {
            "doc": "The embedded application to open for this voice channel embedded application invite"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "Partial",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": [
                {
                  "repr": "DiscordApplication",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "DiscordApplication"
                  }
                }
              ],
              "typeName": "Partial"
            }
          },
          "typeParams": []
        },
        {
          "name": "approximate_presence_count",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1784,
            "col": 4
          },
          "jsDoc": {
            "doc": "Approximate count of online members (only present when target_user is set)"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "approximate_member_count",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1786,
            "col": 4
          },
          "jsDoc": {
            "doc": "Approximate count of total members"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "expires_at",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1788,
            "col": 4
          },
          "jsDoc": {
            "doc": "The expiration date of this invite, returned from the `GET /invites/<code>` endpoint when `with_expiration` is `true`"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              },
              {
                "repr": "null",
                "kind": "keyword",
                "keyword": "null"
              }
            ]
          },
          "typeParams": []
        },
        {
          "name": "stage_instance",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1790,
            "col": 4
          },
          "jsDoc": {
            "doc": "Stage instance data if there is a public Stage instance in the Stage channel this invite is for"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "DiscordInviteStageInstance",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "DiscordInviteStageInstance"
            }
          },
          "typeParams": []
        },
        {
          "name": "guild_scheduled_event",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1792,
            "col": 4
          },
          "jsDoc": {
            "doc": "guild scheduled event data"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "DiscordScheduledEvent",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "DiscordScheduledEvent"
            }
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "DiscordInviteStageInstance",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 1795,
      "col": 0
    },
    "declarationKind": "export",
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "members",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1797,
            "col": 4
          },
          "jsDoc": {
            "doc": "The members speaking in the Stage"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "Partial",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "DiscordMember",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "DiscordMember"
                    }
                  }
                ],
                "typeName": "Partial"
              }
            }
          },
          "typeParams": []
        },
        {
          "name": "participant_count",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1799,
            "col": 4
          },
          "jsDoc": {
            "doc": "The number of users in the Stage"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "speaker_count",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1801,
            "col": 4
          },
          "jsDoc": {
            "doc": "The number of users speaking in the Stage"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "topic",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1803,
            "col": 4
          },
          "jsDoc": {
            "doc": "The topic of the Stage instance (1-120 characters)"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "DiscordApplicationCommand",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 1807,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "https://discord.com/developers/docs/interactions/application-commands#application-command-object-application-command-structure"
    },
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1809,
            "col": 4
          },
          "jsDoc": {
            "doc": "Unique ID of command"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "type",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1811,
            "col": 4
          },
          "jsDoc": {
            "doc": "Type of command, defaults to `ApplicationCommandTypes.ChatInput`"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "ApplicationCommandTypes",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "ApplicationCommandTypes"
            }
          },
          "typeParams": []
        },
        {
          "name": "application_id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1813,
            "col": 4
          },
          "jsDoc": {
            "doc": "ID of the parent application"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "guild_id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1815,
            "col": 4
          },
          "jsDoc": {
            "doc": "Guild id of the command, if not global"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "name",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1823,
            "col": 4
          },
          "jsDoc": {
            "doc": "Name of command, 1-32 characters.\n`ApplicationCommandTypes.ChatInput` command names must match the following regex `^[-_\\p{L}\\p{N}\\p{sc=Deva}\\p{sc=Thai}]{1,32}$` with the unicode flag set.\nIf there is a lowercase variant of any letters used, you must use those.\nCharacters with no lowercase variants and/or uncased letters are still allowed.\nApplicationCommandTypes.User` and `ApplicationCommandTypes.Message` commands may be mixed case and can include spaces."
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "name_localizations",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1825,
            "col": 4
          },
          "jsDoc": {
            "doc": "Localization object for `name` field. Values follow the same restrictions as `name`"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "Localization",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Localization"
                }
              },
              {
                "repr": "null",
                "kind": "keyword",
                "keyword": "null"
              }
            ]
          },
          "typeParams": []
        },
        {
          "name": "description",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1827,
            "col": 4
          },
          "jsDoc": {
            "doc": "Description for `ApplicationCommandTypes.ChatInput` commands, 1-100 characters. Empty string for `ApplicationCommandTypes.User` and `ApplicationCommandTypes.Message` commands"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "description_localizations",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1829,
            "col": 4
          },
          "jsDoc": {
            "doc": "Localization object for `description` field. Values follow the same restrictions as `description`"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "Localization",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Localization"
                }
              },
              {
                "repr": "null",
                "kind": "keyword",
                "keyword": "null"
              }
            ]
          },
          "typeParams": []
        },
        {
          "name": "options",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1831,
            "col": 4
          },
          "jsDoc": {
            "doc": "Parameters for the command, max of 25"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "DiscordApplicationCommandOption",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "DiscordApplicationCommandOption"
              }
            }
          },
          "typeParams": []
        },
        {
          "name": "default_member_permissions",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1833,
            "col": 4
          },
          "jsDoc": {
            "doc": "Set of permissions represented as a bit set"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              },
              {
                "repr": "null",
                "kind": "keyword",
                "keyword": "null"
              }
            ]
          },
          "typeParams": []
        },
        {
          "name": "dm_permission",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1835,
            "col": 4
          },
          "jsDoc": {
            "doc": "Indicates whether the command is available in DMs with the app, only for globally-scoped commands. By default, commands are visible."
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        },
        {
          "name": "version",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1837,
            "col": 4
          },
          "jsDoc": {
            "doc": "Auto incrementing version identifier updated during substantial record changes"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "DiscordApplicationCommandOption",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 1841,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "https://discord.com/developers/docs/interactions/application-commands#application-command-object-application-command-option-structure"
    },
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "type",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1843,
            "col": 4
          },
          "jsDoc": {
            "doc": "Type of option"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "ApplicationCommandOptionTypes",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "ApplicationCommandOptionTypes"
            }
          },
          "typeParams": []
        },
        {
          "name": "name",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1851,
            "col": 4
          },
          "jsDoc": {
            "doc": "Name of command, 1-32 characters.\n`ApplicationCommandTypes.ChatInput` command names must match the following regex `^[-_\\p{L}\\p{N}\\p{sc=Deva}\\p{sc=Thai}]{1,32}$` with the unicode flag set.\nIf there is a lowercase variant of any letters used, you must use those.\nCharacters with no lowercase variants and/or uncased letters are still allowed.\nApplicationCommandTypes.User` and `ApplicationCommandTypes.Message` commands may be mixed case and can include spaces."
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "name_localizations",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1853,
            "col": 4
          },
          "jsDoc": {
            "doc": "Localization object for the `name` field. Values follow the same restrictions as `name`"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "Localization",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Localization"
                }
              },
              {
                "repr": "null",
                "kind": "keyword",
                "keyword": "null"
              }
            ]
          },
          "typeParams": []
        },
        {
          "name": "description",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1855,
            "col": 4
          },
          "jsDoc": {
            "doc": "1-100 character description"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "description_localizations",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1857,
            "col": 4
          },
          "jsDoc": {
            "doc": "Localization object for the `description` field. Values follow the same restrictions as `description`"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "Localization",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Localization"
                }
              },
              {
                "repr": "null",
                "kind": "keyword",
                "keyword": "null"
              }
            ]
          },
          "typeParams": []
        },
        {
          "name": "required",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1859,
            "col": 4
          },
          "jsDoc": {
            "doc": "If the parameter is required or optional--default `false`"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        },
        {
          "name": "choices",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1861,
            "col": 4
          },
          "jsDoc": {
            "doc": "Choices for the option types `ApplicationCommandOptionTypes.String`, `ApplicationCommandOptionTypes.Integer`, and `ApplicationCommandOptionTypes.Number`, from which the user can choose, max 25"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "DiscordApplicationCommandOptionChoice",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "DiscordApplicationCommandOptionChoice"
              }
            }
          },
          "typeParams": []
        },
        {
          "name": "options",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1863,
            "col": 4
          },
          "jsDoc": {
            "doc": "If the option is a subcommand or subcommand group type, these nested options will be the parameters"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "DiscordApplicationCommandOption",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "DiscordApplicationCommandOption"
              }
            }
          },
          "typeParams": []
        },
        {
          "name": "autocomplete",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1869,
            "col": 4
          },
          "jsDoc": {
            "doc": "If autocomplete interactions are enabled for this option.\n\nOnly available for `ApplicationCommandOptionTypes.String`, `ApplicationCommandOptionTypes.Integer` and `ApplicationCommandOptionTypes.Number` option types"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        },
        {
          "name": "channel_types",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1871,
            "col": 4
          },
          "jsDoc": {
            "doc": "If the option is a channel type, the channels shown will be restricted to these types"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "ChannelTypes",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "ChannelTypes"
              }
            }
          },
          "typeParams": []
        },
        {
          "name": "min_value",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1873,
            "col": 4
          },
          "jsDoc": {
            "doc": "If the option type is `ApplicationCommandOptionTypes.Integer` or `ApplicationCommandOptionTypes.Number`, the minimum permitted value"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "max_value",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1875,
            "col": 4
          },
          "jsDoc": {
            "doc": "If the option type is `ApplicationCommandOptionTypes.Integer` or `ApplicationCommandOptionTypes.Number`, the maximum permitted value"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "DiscordApplicationCommandOptionChoice",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 1879,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "https://discord.com/developers/docs/interactions/application-commands#application-command-object-application-command-option-choice-structure"
    },
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "name",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1881,
            "col": 4
          },
          "jsDoc": {
            "doc": "1-100 character choice name"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "name_localizations",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1883,
            "col": 4
          },
          "jsDoc": {
            "doc": "Localization object for the `name` field. Values follow the same restrictions as `name`"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "Localization",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Localization"
                }
              },
              {
                "repr": "null",
                "kind": "keyword",
                "keyword": "null"
              }
            ]
          },
          "typeParams": []
        },
        {
          "name": "value",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1885,
            "col": 4
          },
          "jsDoc": {
            "doc": "Value for the choice, up to 100 characters if string"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              },
              {
                "repr": "number",
                "kind": "keyword",
                "keyword": "number"
              }
            ]
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "DiscordGuildApplicationCommandPermissions",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 1889,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "https://discord.com/developers/docs/interactions/slash-commands#guildapplicationcommandpermissions"
    },
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1891,
            "col": 4
          },
          "jsDoc": {
            "doc": "ID of the command or the application ID. When the `id` field is the application ID instead of a command ID, the permissions apply to all commands that do not contain explicit overwrites."
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "application_id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1893,
            "col": 4
          },
          "jsDoc": {
            "doc": "ID of the application the command belongs to"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "guild_id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1895,
            "col": 4
          },
          "jsDoc": {
            "doc": "ID of the guild"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "permissions",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1897,
            "col": 4
          },
          "jsDoc": {
            "doc": "Permissions for the command in the guild, max of 100"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "DiscordApplicationCommandPermissions",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "DiscordApplicationCommandPermissions"
              }
            }
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "DiscordApplicationCommandPermissions",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 1901,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "https://discord.com/developers/docs/interactions/slash-commands#applicationcommandpermissions"
    },
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1903,
            "col": 4
          },
          "jsDoc": {
            "doc": "ID of the role, user, or channel. It can also be a permission constant"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "type",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1905,
            "col": 4
          },
          "jsDoc": {
            "doc": "ApplicationCommandPermissionTypes.Role, ApplicationCommandPermissionTypes.User, or ApplicationCommandPermissionTypes.Channel"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "ApplicationCommandPermissionTypes",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "ApplicationCommandPermissionTypes"
            }
          },
          "typeParams": []
        },
        {
          "name": "permission",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1907,
            "col": 4
          },
          "jsDoc": {
            "doc": "`true` to allow, `false`, to disallow"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "DiscordGuildWidget",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 1911,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "https://discord.com/developers/docs/resources/guild#get-guild-widget-example-get-guild-widget"
    },
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1912,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "name",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1913,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "instant_invite",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1914,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "channels",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1915,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "",
              "kind": "typeLiteral",
              "typeLiteral": {
                "methods": [],
                "properties": [
                  {
                    "name": "id",
                    "params": [],
                    "computed": false,
                    "optional": false,
                    "tsType": {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    "typeParams": []
                  },
                  {
                    "name": "name",
                    "params": [],
                    "computed": false,
                    "optional": false,
                    "tsType": {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    "typeParams": []
                  },
                  {
                    "name": "position",
                    "params": [],
                    "computed": false,
                    "optional": false,
                    "tsType": {
                      "repr": "number",
                      "kind": "keyword",
                      "keyword": "number"
                    },
                    "typeParams": []
                  }
                ],
                "callSignatures": [],
                "indexSignatures": []
              }
            }
          },
          "typeParams": []
        },
        {
          "name": "members",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1920,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "",
              "kind": "typeLiteral",
              "typeLiteral": {
                "methods": [],
                "properties": [
                  {
                    "name": "id",
                    "params": [],
                    "computed": false,
                    "optional": false,
                    "tsType": {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    "typeParams": []
                  },
                  {
                    "name": "username",
                    "params": [],
                    "computed": false,
                    "optional": false,
                    "tsType": {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    "typeParams": []
                  },
                  {
                    "name": "discriminator",
                    "params": [],
                    "computed": false,
                    "optional": false,
                    "tsType": {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    "typeParams": []
                  },
                  {
                    "name": "avatar",
                    "params": [],
                    "computed": false,
                    "optional": true,
                    "tsType": {
                      "repr": "",
                      "kind": "union",
                      "union": [
                        {
                          "repr": "string",
                          "kind": "keyword",
                          "keyword": "string"
                        },
                        {
                          "repr": "null",
                          "kind": "keyword",
                          "keyword": "null"
                        }
                      ]
                    },
                    "typeParams": []
                  },
                  {
                    "name": "status",
                    "params": [],
                    "computed": false,
                    "optional": false,
                    "tsType": {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    "typeParams": []
                  },
                  {
                    "name": "avatar_url",
                    "params": [],
                    "computed": false,
                    "optional": false,
                    "tsType": {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    "typeParams": []
                  }
                ],
                "callSignatures": [],
                "indexSignatures": []
              }
            }
          },
          "typeParams": []
        },
        {
          "name": "presence_count",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1928,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "DiscordGuildPreview",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 1932,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "https://discord.com/developers/docs/resources/guild#guild-preview-object"
    },
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1934,
            "col": 4
          },
          "jsDoc": {
            "doc": "Guild id"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "name",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1936,
            "col": 4
          },
          "jsDoc": {
            "doc": "Guild name (2-100 characters)"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "icon",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1938,
            "col": 4
          },
          "jsDoc": {
            "doc": "Icon hash"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              },
              {
                "repr": "null",
                "kind": "keyword",
                "keyword": "null"
              }
            ]
          },
          "typeParams": []
        },
        {
          "name": "splash",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1940,
            "col": 4
          },
          "jsDoc": {
            "doc": "Splash hash"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              },
              {
                "repr": "null",
                "kind": "keyword",
                "keyword": "null"
              }
            ]
          },
          "typeParams": []
        },
        {
          "name": "discovery_splash",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1942,
            "col": 4
          },
          "jsDoc": {
            "doc": "Discovery splash hash"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              },
              {
                "repr": "null",
                "kind": "keyword",
                "keyword": "null"
              }
            ]
          },
          "typeParams": []
        },
        {
          "name": "emojis",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1944,
            "col": 4
          },
          "jsDoc": {
            "doc": "Custom guild emojis"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "DiscordEmoji",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "DiscordEmoji"
              }
            }
          },
          "typeParams": []
        },
        {
          "name": "features",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1946,
            "col": 4
          },
          "jsDoc": {
            "doc": "Enabled guild features"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "GuildFeatures",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "GuildFeatures"
              }
            }
          },
          "typeParams": []
        },
        {
          "name": "approximate_member_count",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1948,
            "col": 4
          },
          "jsDoc": {
            "doc": "Approximate number of members in this guild"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "approximate_presence_count",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1950,
            "col": 4
          },
          "jsDoc": {
            "doc": "Approximate number of online members in this guild"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "description",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1952,
            "col": 4
          },
          "jsDoc": {
            "doc": "The description for the guild, if the guild is discoverable"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              },
              {
                "repr": "null",
                "kind": "keyword",
                "keyword": "null"
              }
            ]
          },
          "typeParams": []
        },
        {
          "name": "stickers",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1954,
            "col": 4
          },
          "jsDoc": {
            "doc": "Custom guild stickers"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "DiscordSticker",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "DiscordSticker"
              }
            }
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "DiscordDiscoveryCategory",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 1957,
      "col": 0
    },
    "declarationKind": "export",
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1959,
            "col": 4
          },
          "jsDoc": {
            "doc": "Numeric id of the category"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "name",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1961,
            "col": 4
          },
          "jsDoc": {
            "doc": "The name of this category, in multiple languages"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "DiscordDiscoveryName",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "DiscordDiscoveryName"
            }
          },
          "typeParams": []
        },
        {
          "name": "is_primary",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1963,
            "col": 4
          },
          "jsDoc": {
            "doc": "Whether this category can be set as a guild's primary category"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "DiscordDiscoveryName",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 1966,
      "col": 0
    },
    "declarationKind": "export",
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "default",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1968,
            "col": 4
          },
          "jsDoc": {
            "doc": "The name in English"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "localizations",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1970,
            "col": 4
          },
          "jsDoc": {
            "doc": "The name in other languages"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "Record",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": [
                {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              ],
              "typeName": "Record"
            }
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "DiscordDiscoveryMetadata",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 1973,
      "col": 0
    },
    "declarationKind": "export",
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "guild_id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1975,
            "col": 4
          },
          "jsDoc": {
            "doc": "The guild Id"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "primary_category_id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1977,
            "col": 4
          },
          "jsDoc": {
            "doc": "The id of the primary discovery category set for this guild"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "keywords",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1979,
            "col": 4
          },
          "jsDoc": {
            "doc": "Up to 10 discovery search keywords set for this guild"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "",
                "kind": "array",
                "array": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "repr": "null",
                "kind": "keyword",
                "keyword": "null"
              }
            ]
          },
          "typeParams": []
        },
        {
          "name": "emoji_discoverability_enabled",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1981,
            "col": 4
          },
          "jsDoc": {
            "doc": "Whether guild info is shown when custom emojis from this guild are clicked"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        },
        {
          "name": "partner_actioned_timestamp",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1983,
            "col": 4
          },
          "jsDoc": {
            "doc": "When the server's partner application was accepted or denied, for applications via Server Settings"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              },
              {
                "repr": "null",
                "kind": "keyword",
                "keyword": "null"
              }
            ]
          },
          "typeParams": []
        },
        {
          "name": "partner_application_timestamp",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1985,
            "col": 4
          },
          "jsDoc": {
            "doc": "When the server applied for partnership, if it has a pending application"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              },
              {
                "repr": "null",
                "kind": "keyword",
                "keyword": "null"
              }
            ]
          },
          "typeParams": []
        },
        {
          "name": "category_ids",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1987,
            "col": 4
          },
          "jsDoc": {
            "doc": "Ids of up to 5 discovery subcategories set for this guild"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "number",
              "kind": "keyword",
              "keyword": "number"
            }
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "DiscordFollowedChannel",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 1991,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "https://discord.com/developers/docs/resources/channel#followed-channel-object"
    },
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "channel_id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1993,
            "col": 4
          },
          "jsDoc": {
            "doc": "Source message id"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "webhook_id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 1995,
            "col": 4
          },
          "jsDoc": {
            "doc": "Created target webhook id"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "DiscordGatewayPayload",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 1999,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "https://discord.com/developers/docs/topics/gateway#payloads-gateway-payload-structure"
    },
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "op",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 2001,
            "col": 4
          },
          "jsDoc": {
            "doc": "opcode for the payload"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "d",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 2003,
            "col": 4
          },
          "jsDoc": {
            "doc": "Event data"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "unknown",
                "kind": "keyword",
                "keyword": "unknown"
              },
              {
                "repr": "null",
                "kind": "keyword",
                "keyword": "null"
              }
            ]
          },
          "typeParams": []
        },
        {
          "name": "s",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 2005,
            "col": 4
          },
          "jsDoc": {
            "doc": "Sequence number, used for resuming sessions and heartbeats"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "number",
                "kind": "keyword",
                "keyword": "number"
              },
              {
                "repr": "null",
                "kind": "keyword",
                "keyword": "null"
              }
            ]
          },
          "typeParams": []
        },
        {
          "name": "t",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 2007,
            "col": 4
          },
          "jsDoc": {
            "doc": "The event name for this payload"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "GatewayEventNames",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "GatewayEventNames"
                }
              },
              {
                "repr": "null",
                "kind": "keyword",
                "keyword": "null"
              }
            ]
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "DiscordGuildMembersChunk",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 2011,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "https://discord.com/developers/docs/topics/gateway#guild-members-chunk"
    },
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "guild_id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 2013,
            "col": 4
          },
          "jsDoc": {
            "doc": "The id of the guild"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "members",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 2015,
            "col": 4
          },
          "jsDoc": {
            "doc": "Set of guild members"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "DiscordMemberWithUser",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "DiscordMemberWithUser"
              }
            }
          },
          "typeParams": []
        },
        {
          "name": "chunk_index",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 2017,
            "col": 4
          },
          "jsDoc": {
            "doc": "The chunk index in the expected chunks for this response (0 <= chunk_index < chunk_count)"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "chunk_count",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 2019,
            "col": 4
          },
          "jsDoc": {
            "doc": "The total number of expected chunks for this response"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "not_found",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 2021,
            "col": 4
          },
          "jsDoc": {
            "doc": "If passing an invalid id to `REQUEST_GUILD_MEMBERS`, it will be returned here"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            }
          },
          "typeParams": []
        },
        {
          "name": "presences",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 2023,
            "col": 4
          },
          "jsDoc": {
            "doc": "If passing true to `REQUEST_GUILD_MEMBERS`, presences of the returned members will be here"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "DiscordPresenceUpdate",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "DiscordPresenceUpdate"
              }
            }
          },
          "typeParams": []
        },
        {
          "name": "nonce",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 2025,
            "col": 4
          },
          "jsDoc": {
            "doc": "The nonce used in the Guild Members Request"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "DiscordComponent",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 2028,
      "col": 0
    },
    "declarationKind": "export",
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "type",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 2030,
            "col": 4
          },
          "jsDoc": {
            "doc": "component type"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "MessageComponentTypes",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "MessageComponentTypes"
            }
          },
          "typeParams": []
        },
        {
          "name": "custom_id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 2032,
            "col": 4
          },
          "jsDoc": {
            "doc": "a developer-defined identifier for the component, max 100 characters"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "disabled",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 2034,
            "col": 4
          },
          "jsDoc": {
            "doc": "whether the component is disabled, default false"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        },
        {
          "name": "style",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 2036,
            "col": 4
          },
          "jsDoc": {
            "doc": "For different styles/colors of the buttons"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "ButtonStyles",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "ButtonStyles"
                }
              },
              {
                "repr": "TextStyles",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "TextStyles"
                }
              }
            ]
          },
          "typeParams": []
        },
        {
          "name": "label",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 2038,
            "col": 4
          },
          "jsDoc": {
            "doc": "text that appears on the button (max 80 characters)"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "value",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 2040,
            "col": 4
          },
          "jsDoc": {
            "doc": "the dev-define value of the option, max 100 characters for select or 4000 for input."
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "emoji",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 2042,
            "col": 4
          },
          "jsDoc": {
            "doc": "Emoji object that includes fields of name, id, and animated supporting unicode and custom emojis."
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "typeLiteral",
            "typeLiteral": {
              "methods": [],
              "properties": [
                {
                  "name": "id",
                  "params": [],
                  "computed": false,
                  "optional": true,
                  "tsType": {
                    "repr": "string",
                    "kind": "keyword",
                    "keyword": "string"
                  },
                  "typeParams": []
                },
                {
                  "name": "name",
                  "params": [],
                  "computed": false,
                  "optional": true,
                  "tsType": {
                    "repr": "string",
                    "kind": "keyword",
                    "keyword": "string"
                  },
                  "typeParams": []
                },
                {
                  "name": "animated",
                  "params": [],
                  "computed": false,
                  "optional": true,
                  "tsType": {
                    "repr": "boolean",
                    "kind": "keyword",
                    "keyword": "boolean"
                  },
                  "typeParams": []
                }
              ],
              "callSignatures": [],
              "indexSignatures": []
            }
          },
          "typeParams": []
        },
        {
          "name": "url",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 2051,
            "col": 4
          },
          "jsDoc": {
            "doc": "optional url for link-style buttons that can navigate a user to the web. Only type 5 Link buttons can have a url"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "options",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 2053,
            "col": 4
          },
          "jsDoc": {
            "doc": "The choices! Maximum of 25 items."
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "DiscordSelectOption",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "DiscordSelectOption"
              }
            }
          },
          "typeParams": []
        },
        {
          "name": "placeholder",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 2055,
            "col": 4
          },
          "jsDoc": {
            "doc": "A custom placeholder text if nothing is selected. Maximum 150 characters."
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "min_values",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 2057,
            "col": 4
          },
          "jsDoc": {
            "doc": "The minimum number of items that must be selected. Default 1. Between 1-25."
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "max_values",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 2059,
            "col": 4
          },
          "jsDoc": {
            "doc": "The maximum number of items that can be selected. Default 1. Between 1-25."
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "components",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 2061,
            "col": 4
          },
          "jsDoc": {
            "doc": "a list of child components"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "DiscordComponent",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "DiscordComponent"
              }
            }
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "DiscordChannelPinsUpdate",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 2065,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "https://discord.com/developers/docs/topics/gateway#channel-pins-update"
    },
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "guild_id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 2067,
            "col": 4
          },
          "jsDoc": {
            "doc": "The id of the guild"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "channel_id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 2069,
            "col": 4
          },
          "jsDoc": {
            "doc": "The id of the channel"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "last_pin_timestamp",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 2071,
            "col": 4
          },
          "jsDoc": {
            "doc": "The time at which the most recent pinned message was pinned"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              },
              {
                "repr": "null",
                "kind": "keyword",
                "keyword": "null"
              }
            ]
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "DiscordGuildRoleDelete",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 2075,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "https://discord.com/developers/docs/topics/gateway#guild-role-delete"
    },
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "guild_id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 2077,
            "col": 4
          },
          "jsDoc": {
            "doc": "id of the guild"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "role_id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 2079,
            "col": 4
          },
          "jsDoc": {
            "doc": "id of the role"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "DiscordGuildBanAddRemove",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 2083,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "https://discord.com/developers/docs/topics/gateway#guild-ban-add"
    },
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "guild_id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 2085,
            "col": 4
          },
          "jsDoc": {
            "doc": "id of the guild"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "user",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 2087,
            "col": 4
          },
          "jsDoc": {
            "doc": "The banned user"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "DiscordUser",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "DiscordUser"
            }
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "DiscordMessageReactionRemove",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 2091,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "https://discord.com/developers/docs/topics/gateway#message-reaction-remove"
    },
    "interfaceDef": {
      "extends": [
        {
          "repr": "Omit",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": [
              {
                "repr": "DiscordMessageReactionAdd",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "DiscordMessageReactionAdd"
                }
              },
              {
                "repr": "member",
                "kind": "literal",
                "literal": {
                  "kind": "string",
                  "string": "member"
                }
              }
            ],
            "typeName": "Omit"
          }
        }
      ],
      "methods": [],
      "properties": [],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "DiscordMessageReactionAdd",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 2094,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "https://discord.com/developers/docs/topics/gateway#message-reaction-add"
    },
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "user_id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 2096,
            "col": 4
          },
          "jsDoc": {
            "doc": "The id of the user"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "channel_id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 2098,
            "col": 4
          },
          "jsDoc": {
            "doc": "The id of the channel"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "message_id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 2100,
            "col": 4
          },
          "jsDoc": {
            "doc": "The id of the message"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "guild_id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 2102,
            "col": 4
          },
          "jsDoc": {
            "doc": "The id of the guild"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "member",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 2104,
            "col": 4
          },
          "jsDoc": {
            "doc": "The member who reacted if this happened in a guild"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "DiscordMemberWithUser",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "DiscordMemberWithUser"
            }
          },
          "typeParams": []
        },
        {
          "name": "emoji",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 2106,
            "col": 4
          },
          "jsDoc": {
            "doc": "The emoji used to react"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "Partial",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": [
                {
                  "repr": "DiscordEmoji",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "DiscordEmoji"
                  }
                }
              ],
              "typeName": "Partial"
            }
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "DiscordVoiceServerUpdate",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 2110,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "https://discord.com/developers/docs/topics/gateway#voice-server-update"
    },
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "token",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 2112,
            "col": 4
          },
          "jsDoc": {
            "doc": "Voice connection token"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "guild_id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 2114,
            "col": 4
          },
          "jsDoc": {
            "doc": "The guild this voice server update is for"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "endpoint",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 2116,
            "col": 4
          },
          "jsDoc": {
            "doc": "The voice server host"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              },
              {
                "repr": "null",
                "kind": "keyword",
                "keyword": "null"
              }
            ]
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "DiscordInviteCreate",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 2120,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "https://discord.com/developers/docs/topics/gateway#invite-create"
    },
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "channel_id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 2122,
            "col": 4
          },
          "jsDoc": {
            "doc": "The channel the invite is for"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "code",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 2124,
            "col": 4
          },
          "jsDoc": {
            "doc": "The unique invite code"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "created_at",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 2126,
            "col": 4
          },
          "jsDoc": {
            "doc": "The time at which the invite was created"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "guild_id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 2128,
            "col": 4
          },
          "jsDoc": {
            "doc": "The guild of the invite"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "inviter",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 2130,
            "col": 4
          },
          "jsDoc": {
            "doc": "The user that created the invite"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "DiscordUser",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "DiscordUser"
            }
          },
          "typeParams": []
        },
        {
          "name": "max_age",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 2132,
            "col": 4
          },
          "jsDoc": {
            "doc": "How long the invite is valid for (in seconds)"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "max_uses",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 2134,
            "col": 4
          },
          "jsDoc": {
            "doc": "The maximum number of times the invite can be used"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "target_type",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 2136,
            "col": 4
          },
          "jsDoc": {
            "doc": "The type of target for this voice channel invite"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "TargetTypes",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "TargetTypes"
            }
          },
          "typeParams": []
        },
        {
          "name": "target_user",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 2138,
            "col": 4
          },
          "jsDoc": {
            "doc": "The target user for this invite"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "DiscordUser",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "DiscordUser"
            }
          },
          "typeParams": []
        },
        {
          "name": "target_application",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 2140,
            "col": 4
          },
          "jsDoc": {
            "doc": "The embedded application to open for this voice channel embedded application invite"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "Partial",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": [
                {
                  "repr": "DiscordApplication",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "DiscordApplication"
                  }
                }
              ],
              "typeName": "Partial"
            }
          },
          "typeParams": []
        },
        {
          "name": "temporary",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 2142,
            "col": 4
          },
          "jsDoc": {
            "doc": "Whether or not the invite is temporary (invited users will be kicked on disconnect unless they're assigned a role)"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        },
        {
          "name": "uses",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 2144,
            "col": 4
          },
          "jsDoc": {
            "doc": "How many times the invite has been used (always will be 0)"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "DiscordHello",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 2148,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "https://discord.com/developers/docs/topics/gateway#hello"
    },
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "heartbeat_interval",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 2150,
            "col": 4
          },
          "jsDoc": {
            "doc": "The interval (in milliseconds) the client should heartbeat with"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "DiscordReady",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 2154,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "https://discord.com/developers/docs/topics/gateway#ready"
    },
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "v",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 2156,
            "col": 4
          },
          "jsDoc": {
            "doc": "Gateway version"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "user",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 2158,
            "col": 4
          },
          "jsDoc": {
            "doc": "Information about the user including email"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "DiscordUser",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "DiscordUser"
            }
          },
          "typeParams": []
        },
        {
          "name": "guilds",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 2160,
            "col": 4
          },
          "jsDoc": {
            "doc": "The guilds the user is in"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "DiscordUnavailableGuild",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "DiscordUnavailableGuild"
              }
            }
          },
          "typeParams": []
        },
        {
          "name": "session_id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 2162,
            "col": 4
          },
          "jsDoc": {
            "doc": "Used for resuming connections"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "shard",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 2164,
            "col": 4
          },
          "jsDoc": {
            "doc": "The shard information associated with this session, if sent when identifying"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "tuple",
            "tuple": [
              {
                "repr": "number",
                "kind": "keyword",
                "keyword": "number"
              },
              {
                "repr": "number",
                "kind": "keyword",
                "keyword": "number"
              }
            ]
          },
          "typeParams": []
        },
        {
          "name": "application",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 2166,
            "col": 4
          },
          "jsDoc": {
            "doc": "Contains id and flags"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "",
            "kind": "intersection",
            "intersection": [
              {
                "repr": "Partial",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": [
                    {
                      "repr": "DiscordApplication",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "DiscordApplication"
                      }
                    }
                  ],
                  "typeName": "Partial"
                }
              },
              {
                "repr": "Pick",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": [
                    {
                      "repr": "DiscordApplication",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "DiscordApplication"
                      }
                    },
                    {
                      "repr": "",
                      "kind": "union",
                      "union": [
                        {
                          "repr": "id",
                          "kind": "literal",
                          "literal": {
                            "kind": "string",
                            "string": "id"
                          }
                        },
                        {
                          "repr": "flags",
                          "kind": "literal",
                          "literal": {
                            "kind": "string",
                            "string": "flags"
                          }
                        }
                      ]
                    }
                  ],
                  "typeName": "Pick"
                }
              }
            ]
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "DiscordUnavailableGuild",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 2170,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "https://discord.com/developers/docs/resources/guild#unavailable-guild-object"
    },
    "interfaceDef": {
      "extends": [
        {
          "repr": "Pick",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": [
              {
                "repr": "DiscordGuild",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "DiscordGuild"
                }
              },
              {
                "repr": "",
                "kind": "union",
                "union": [
                  {
                    "repr": "id",
                    "kind": "literal",
                    "literal": {
                      "kind": "string",
                      "string": "id"
                    }
                  },
                  {
                    "repr": "unavailable",
                    "kind": "literal",
                    "literal": {
                      "kind": "string",
                      "string": "unavailable"
                    }
                  }
                ]
              }
            ],
            "typeName": "Pick"
          }
        }
      ],
      "methods": [],
      "properties": [],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "DiscordMessageDeleteBulk",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 2173,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "https://discord.com/developers/docs/topics/gateway#message-delete-bulk"
    },
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "ids",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 2175,
            "col": 4
          },
          "jsDoc": {
            "doc": "The ids of the messages"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            }
          },
          "typeParams": []
        },
        {
          "name": "channel_id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 2177,
            "col": 4
          },
          "jsDoc": {
            "doc": "The id of the channel"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "guild_id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 2179,
            "col": 4
          },
          "jsDoc": {
            "doc": "The id of the guild"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "DiscordTemplate",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 2183,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "https://discord.com/developers/docs/resources/template#template-object-template-structure"
    },
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "code",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 2185,
            "col": 4
          },
          "jsDoc": {
            "doc": "The template code (unique Id)"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "name",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 2187,
            "col": 4
          },
          "jsDoc": {
            "doc": "Template name"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "description",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 2189,
            "col": 4
          },
          "jsDoc": {
            "doc": "The description for the template"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              },
              {
                "repr": "null",
                "kind": "keyword",
                "keyword": "null"
              }
            ]
          },
          "typeParams": []
        },
        {
          "name": "usage_count",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 2191,
            "col": 4
          },
          "jsDoc": {
            "doc": "Number of times this template has been used"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "creator_id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 2193,
            "col": 4
          },
          "jsDoc": {
            "doc": "The Id of the user who created the template"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "creator",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 2195,
            "col": 4
          },
          "jsDoc": {
            "doc": "The user who created the template"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "DiscordUser",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "DiscordUser"
            }
          },
          "typeParams": []
        },
        {
          "name": "created_at",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 2197,
            "col": 4
          },
          "jsDoc": {
            "doc": "When this template was created"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "updated_at",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 2199,
            "col": 4
          },
          "jsDoc": {
            "doc": "When this template was last synced to the source guild"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "source_guild_id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 2201,
            "col": 4
          },
          "jsDoc": {
            "doc": "The Id of the guild this template is based on"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "serialized_source_guild",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 2203,
            "col": 4
          },
          "jsDoc": {
            "doc": "The guild snapshot this template contains"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "",
            "kind": "intersection",
            "intersection": [
              {
                "repr": "Omit",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": [
                    {
                      "repr": "PickPartial",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": [
                          {
                            "repr": "DiscordGuild",
                            "kind": "typeRef",
                            "typeRef": {
                              "typeParams": null,
                              "typeName": "DiscordGuild"
                            }
                          },
                          {
                            "repr": "",
                            "kind": "union",
                            "union": [
                              {
                                "repr": "name",
                                "kind": "literal",
                                "literal": {
                                  "kind": "string",
                                  "string": "name"
                                }
                              },
                              {
                                "repr": "description",
                                "kind": "literal",
                                "literal": {
                                  "kind": "string",
                                  "string": "description"
                                }
                              },
                              {
                                "repr": "verification_level",
                                "kind": "literal",
                                "literal": {
                                  "kind": "string",
                                  "string": "verification_level"
                                }
                              },
                              {
                                "repr": "default_message_notifications",
                                "kind": "literal",
                                "literal": {
                                  "kind": "string",
                                  "string": "default_message_notifications"
                                }
                              },
                              {
                                "repr": "explicit_content_filter",
                                "kind": "literal",
                                "literal": {
                                  "kind": "string",
                                  "string": "explicit_content_filter"
                                }
                              },
                              {
                                "repr": "preferred_locale",
                                "kind": "literal",
                                "literal": {
                                  "kind": "string",
                                  "string": "preferred_locale"
                                }
                              },
                              {
                                "repr": "afk_timeout",
                                "kind": "literal",
                                "literal": {
                                  "kind": "string",
                                  "string": "afk_timeout"
                                }
                              },
                              {
                                "repr": "channels",
                                "kind": "literal",
                                "literal": {
                                  "kind": "string",
                                  "string": "channels"
                                }
                              },
                              {
                                "repr": "afk_channel_id",
                                "kind": "literal",
                                "literal": {
                                  "kind": "string",
                                  "string": "afk_channel_id"
                                }
                              },
                              {
                                "repr": "system_channel_id",
                                "kind": "literal",
                                "literal": {
                                  "kind": "string",
                                  "string": "system_channel_id"
                                }
                              },
                              {
                                "repr": "system_channel_flags",
                                "kind": "literal",
                                "literal": {
                                  "kind": "string",
                                  "string": "system_channel_flags"
                                }
                              }
                            ]
                          }
                        ],
                        "typeName": "PickPartial"
                      }
                    },
                    {
                      "repr": "roles",
                      "kind": "literal",
                      "literal": {
                        "kind": "string",
                        "string": "roles"
                      }
                    }
                  ],
                  "typeName": "Omit"
                }
              },
              {
                "repr": "",
                "kind": "typeLiteral",
                "typeLiteral": {
                  "methods": [],
                  "properties": [
                    {
                      "name": "roles",
                      "params": [],
                      "computed": false,
                      "optional": false,
                      "tsType": {
                        "repr": "",
                        "kind": "array",
                        "array": {
                          "repr": "",
                          "kind": "parenthesized",
                          "parenthesized": {
                            "repr": "",
                            "kind": "intersection",
                            "intersection": [
                              {
                                "repr": "Omit",
                                "kind": "typeRef",
                                "typeRef": {
                                  "typeParams": [
                                    {
                                      "repr": "PickPartial",
                                      "kind": "typeRef",
                                      "typeRef": {
                                        "typeParams": [
                                          {
                                            "repr": "DiscordRole",
                                            "kind": "typeRef",
                                            "typeRef": {
                                              "typeParams": null,
                                              "typeName": "DiscordRole"
                                            }
                                          },
                                          {
                                            "repr": "",
                                            "kind": "union",
                                            "union": [
                                              {
                                                "repr": "name",
                                                "kind": "literal",
                                                "literal": {
                                                  "kind": "string",
                                                  "string": "name"
                                                }
                                              },
                                              {
                                                "repr": "color",
                                                "kind": "literal",
                                                "literal": {
                                                  "kind": "string",
                                                  "string": "color"
                                                }
                                              },
                                              {
                                                "repr": "hoist",
                                                "kind": "literal",
                                                "literal": {
                                                  "kind": "string",
                                                  "string": "hoist"
                                                }
                                              },
                                              {
                                                "repr": "mentionable",
                                                "kind": "literal",
                                                "literal": {
                                                  "kind": "string",
                                                  "string": "mentionable"
                                                }
                                              },
                                              {
                                                "repr": "permissions",
                                                "kind": "literal",
                                                "literal": {
                                                  "kind": "string",
                                                  "string": "permissions"
                                                }
                                              },
                                              {
                                                "repr": "icon",
                                                "kind": "literal",
                                                "literal": {
                                                  "kind": "string",
                                                  "string": "icon"
                                                }
                                              },
                                              {
                                                "repr": "unicode_emoji",
                                                "kind": "literal",
                                                "literal": {
                                                  "kind": "string",
                                                  "string": "unicode_emoji"
                                                }
                                              }
                                            ]
                                          }
                                        ],
                                        "typeName": "PickPartial"
                                      }
                                    },
                                    {
                                      "repr": "id",
                                      "kind": "literal",
                                      "literal": {
                                        "kind": "string",
                                        "string": "id"
                                      }
                                    }
                                  ],
                                  "typeName": "Omit"
                                }
                              },
                              {
                                "repr": "",
                                "kind": "typeLiteral",
                                "typeLiteral": {
                                  "methods": [],
                                  "properties": [
                                    {
                                      "name": "id",
                                      "params": [],
                                      "computed": false,
                                      "optional": false,
                                      "tsType": {
                                        "repr": "number",
                                        "kind": "keyword",
                                        "keyword": "number"
                                      },
                                      "typeParams": []
                                    }
                                  ],
                                  "callSignatures": [],
                                  "indexSignatures": []
                                }
                              }
                            ]
                          }
                        }
                      },
                      "typeParams": []
                    }
                  ],
                  "callSignatures": [],
                  "indexSignatures": []
                }
              }
            ]
          },
          "typeParams": []
        },
        {
          "name": "is_dirty",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 2234,
            "col": 4
          },
          "jsDoc": {
            "doc": "Whether the template has un-synced changes"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "boolean",
                "kind": "keyword",
                "keyword": "boolean"
              },
              {
                "repr": "null",
                "kind": "keyword",
                "keyword": "null"
              }
            ]
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "DiscordGuildMemberAdd",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 2238,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "https://discord.com/developers/docs/topics/gateway#guild-member-add"
    },
    "interfaceDef": {
      "extends": [
        {
          "repr": "DiscordMemberWithUser",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "DiscordMemberWithUser"
          }
        }
      ],
      "methods": [],
      "properties": [
        {
          "name": "guild_id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 2240,
            "col": 4
          },
          "jsDoc": {
            "doc": "id of the guild"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "DiscordMessageDelete",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 2244,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "https://discord.com/developers/docs/topics/gateway#message-delete"
    },
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 2246,
            "col": 4
          },
          "jsDoc": {
            "doc": "The id of the message"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "channel_id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 2248,
            "col": 4
          },
          "jsDoc": {
            "doc": "The id of the channel"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "guild_id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 2250,
            "col": 4
          },
          "jsDoc": {
            "doc": "The id of the guild"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "DiscordThreadMembersUpdate",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 2254,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "https://discord.com/developers/docs/topics/gateway#thread-members-update-thread-members-update-event-fields"
    },
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 2256,
            "col": 4
          },
          "jsDoc": {
            "doc": "The id of the thread"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "guild_id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 2258,
            "col": 4
          },
          "jsDoc": {
            "doc": "The id of the guild"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "added_members",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 2260,
            "col": 4
          },
          "jsDoc": {
            "doc": "The users who were added to the thread"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "DiscordThreadMember",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "DiscordThreadMember"
              }
            }
          },
          "typeParams": []
        },
        {
          "name": "removed_member_ids",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 2262,
            "col": 4
          },
          "jsDoc": {
            "doc": "The id of the users who were removed from the thread"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            }
          },
          "typeParams": []
        },
        {
          "name": "member_count",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 2264,
            "col": 4
          },
          "jsDoc": {
            "doc": "the approximate number of members in the thread, capped at 50"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "DiscordThreadMemberUpdate",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 2268,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "https://discord.com/developers/docs/topics/gateway#thread-member-update"
    },
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 2270,
            "col": 4
          },
          "jsDoc": {
            "doc": "The id of the thread"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "user_id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 2272,
            "col": 4
          },
          "jsDoc": {
            "doc": "The id of the user"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "guild_id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 2274,
            "col": 4
          },
          "jsDoc": {
            "doc": "The id of the guild"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "joined_at",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 2276,
            "col": 4
          },
          "jsDoc": {
            "doc": "The timestamp when the bot joined this thread."
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "flags",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 2278,
            "col": 4
          },
          "jsDoc": {
            "doc": "The flags this user has for this thread. Not useful for bots."
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "DiscordGuildRoleCreate",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 2282,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "https://discord.com/developers/docs/topics/gateway#guild-role-create"
    },
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "guild_id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 2284,
            "col": 4
          },
          "jsDoc": {
            "doc": "The id of the guild"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "role",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 2286,
            "col": 4
          },
          "jsDoc": {
            "doc": "The role created"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "DiscordRole",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "DiscordRole"
            }
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "DiscordGuildEmojisUpdate",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 2290,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "https://discord.com/developers/docs/topics/gateway#guild-emojis-update"
    },
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "guild_id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 2292,
            "col": 4
          },
          "jsDoc": {
            "doc": "id of the guild"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "emojis",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 2294,
            "col": 4
          },
          "jsDoc": {
            "doc": "Array of emojis"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "DiscordEmoji",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "DiscordEmoji"
              }
            }
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "DiscordAddGuildDiscoverySubcategory",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 2297,
      "col": 0
    },
    "declarationKind": "export",
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "guild_id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 2299,
            "col": 4
          },
          "jsDoc": {
            "doc": "The guild Id of the subcategory was added to"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "category_id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 2301,
            "col": 4
          },
          "jsDoc": {
            "doc": "The Id of the subcategory added"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "DiscordGuildBanAddRemove",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 2305,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "https://discord.com/developers/docs/topics/gateway#guild-ban-add"
    },
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "guild_id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 2307,
            "col": 4
          },
          "jsDoc": {
            "doc": "id of the guild"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "user",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 2309,
            "col": 4
          },
          "jsDoc": {
            "doc": "The banned user"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "DiscordUser",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "DiscordUser"
            }
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "DiscordGuildMemberUpdate",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 2313,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "https://discord.com/developers/docs/topics/gateway#guild-member-update"
    },
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "guild_id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 2315,
            "col": 4
          },
          "jsDoc": {
            "doc": "The id of the guild"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "roles",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 2317,
            "col": 4
          },
          "jsDoc": {
            "doc": "User role ids"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            }
          },
          "typeParams": []
        },
        {
          "name": "user",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 2319,
            "col": 4
          },
          "jsDoc": {
            "doc": "The user"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "DiscordUser",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "DiscordUser"
            }
          },
          "typeParams": []
        },
        {
          "name": "nick",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 2321,
            "col": 4
          },
          "jsDoc": {
            "doc": "Nickname of the user in the guild"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              },
              {
                "repr": "null",
                "kind": "keyword",
                "keyword": "null"
              }
            ]
          },
          "typeParams": []
        },
        {
          "name": "avatar",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 2323,
            "col": 4
          },
          "jsDoc": {
            "doc": "the member's [guild avatar hash](https://discord.com/developers/docs/reference#image-formatting)"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "joined_at",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 2325,
            "col": 4
          },
          "jsDoc": {
            "doc": "When the user joined the guild"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "premium_since",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 2327,
            "col": 4
          },
          "jsDoc": {
            "doc": "When the user starting boosting the guild"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              },
              {
                "repr": "null",
                "kind": "keyword",
                "keyword": "null"
              }
            ]
          },
          "typeParams": []
        },
        {
          "name": "deaf",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 2329,
            "col": 4
          },
          "jsDoc": {
            "doc": "whether the user is deafened in voice channels"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        },
        {
          "name": "mute",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 2331,
            "col": 4
          },
          "jsDoc": {
            "doc": "whether the user is muted in voice channels"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        },
        {
          "name": "pending",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 2333,
            "col": 4
          },
          "jsDoc": {
            "doc": "Whether the user has not yet passed the guild's Membership Screening requirements"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        },
        {
          "name": "communication_disabled_until",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 2335,
            "col": 4
          },
          "jsDoc": {
            "doc": "when the user's [timeout](https://support.discord.com/hc/en-us/articles/4413305239191-Time-Out-FAQ) will expire and the user will be able to communicate in the guild again, null or a time in the past if the user is not timed out. Will throw a 403 error if the user has the ADMINISTRATOR permission or is the owner of the guild"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "DiscordMessageReactionRemoveAll",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 2339,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "https://discord.com/developers/docs/topics/gateway#message-reaction-remove-all"
    },
    "interfaceDef": {
      "extends": [
        {
          "repr": "Pick",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": [
              {
                "repr": "DiscordMessageReactionAdd",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "DiscordMessageReactionAdd"
                }
              },
              {
                "repr": "",
                "kind": "union",
                "union": [
                  {
                    "repr": "channel_id",
                    "kind": "literal",
                    "literal": {
                      "kind": "string",
                      "string": "channel_id"
                    }
                  },
                  {
                    "repr": "message_id",
                    "kind": "literal",
                    "literal": {
                      "kind": "string",
                      "string": "message_id"
                    }
                  },
                  {
                    "repr": "guild_id",
                    "kind": "literal",
                    "literal": {
                      "kind": "string",
                      "string": "guild_id"
                    }
                  }
                ]
              }
            ],
            "typeName": "Pick"
          }
        }
      ],
      "methods": [],
      "properties": [],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "DiscordValidateDiscoverySearchTerm",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 2343,
      "col": 0
    },
    "declarationKind": "export",
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "valid",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 2345,
            "col": 4
          },
          "jsDoc": {
            "doc": "Whether the provided term is valid"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "DiscordGuildRoleUpdate",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 2349,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "https://discord.com/developers/docs/topics/gateway#guild-role-update"
    },
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "guild_id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 2351,
            "col": 4
          },
          "jsDoc": {
            "doc": "The id of the guild"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "role",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 2353,
            "col": 4
          },
          "jsDoc": {
            "doc": "The role updated"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "DiscordRole",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "DiscordRole"
            }
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "DiscordScheduledEventUserAdd",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 2356,
      "col": 0
    },
    "declarationKind": "export",
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "guild_scheduled_event_id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 2358,
            "col": 4
          },
          "jsDoc": {
            "doc": "id of the guild scheduled event"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "user_id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 2360,
            "col": 4
          },
          "jsDoc": {
            "doc": "id of the user"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "guild_id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 2362,
            "col": 4
          },
          "jsDoc": {
            "doc": "id of the guild"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "typeAlias",
    "name": "DiscordMessageReactionRemoveEmoji",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 2366,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "https://discord.com/developers/docs/topics/gateway#message-reaction-remove-emoji"
    },
    "typeAliasDef": {
      "tsType": {
        "repr": "Pick",
        "kind": "typeRef",
        "typeRef": {
          "typeParams": [
            {
              "repr": "DiscordMessageReactionAdd",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "DiscordMessageReactionAdd"
              }
            },
            {
              "repr": "",
              "kind": "union",
              "union": [
                {
                  "repr": "channel_id",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "channel_id"
                  }
                },
                {
                  "repr": "guild_id",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "guild_id"
                  }
                },
                {
                  "repr": "message_id",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "message_id"
                  }
                },
                {
                  "repr": "emoji",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "emoji"
                  }
                }
              ]
            }
          ],
          "typeName": "Pick"
        }
      },
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "DiscordGuildMemberRemove",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 2372,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "https://discord.com/developers/docs/topics/gateway#guild-member-remove"
    },
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "guild_id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 2374,
            "col": 4
          },
          "jsDoc": {
            "doc": "The id of the guild"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "user",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 2376,
            "col": 4
          },
          "jsDoc": {
            "doc": "The user who was removed"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "DiscordUser",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "DiscordUser"
            }
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "DiscordBan",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 2380,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "https://discord.com/developers/docs/resources/guild#ban-object"
    },
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "reason",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 2382,
            "col": 4
          },
          "jsDoc": {
            "doc": "The reason for the ban"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              },
              {
                "repr": "null",
                "kind": "keyword",
                "keyword": "null"
              }
            ]
          },
          "typeParams": []
        },
        {
          "name": "user",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 2384,
            "col": 4
          },
          "jsDoc": {
            "doc": "The banned user"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "DiscordUser",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "DiscordUser"
            }
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "DiscordScheduledEventUserRemove",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 2387,
      "col": 0
    },
    "declarationKind": "export",
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "guild_scheduled_event_id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 2389,
            "col": 4
          },
          "jsDoc": {
            "doc": "id of the guild scheduled event"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "user_id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 2391,
            "col": 4
          },
          "jsDoc": {
            "doc": "id of the user"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "guild_id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 2393,
            "col": 4
          },
          "jsDoc": {
            "doc": "id of the guild"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "DiscordInviteDelete",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 2397,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "https://discord.com/developers/docs/topics/gateway#invite-delete"
    },
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "channel_id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 2399,
            "col": 4
          },
          "jsDoc": {
            "doc": "The channel of the invite"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "guild_id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 2401,
            "col": 4
          },
          "jsDoc": {
            "doc": "The guild of the invite"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "code",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 2403,
            "col": 4
          },
          "jsDoc": {
            "doc": "The unique invite code"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "DiscordVoiceRegion",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 2407,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "https://discord.com/developers/docs/resources/voice#voice-region-object-voice-region-structure"
    },
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 2409,
            "col": 4
          },
          "jsDoc": {
            "doc": "Unique Id for the region"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "name",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 2411,
            "col": 4
          },
          "jsDoc": {
            "doc": "Name of the region"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "optimal",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 2413,
            "col": 4
          },
          "jsDoc": {
            "doc": "true for a single server that is closest to the current user's client"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        },
        {
          "name": "deprecated",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 2415,
            "col": 4
          },
          "jsDoc": {
            "doc": "Whether this is a deprecated voice region (avoid switching to these)"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        },
        {
          "name": "custom",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 2417,
            "col": 4
          },
          "jsDoc": {
            "doc": "Whether this is a custom voice region (used for events/etc)"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "DiscordGuildWidgetSettings",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 2420,
      "col": 0
    },
    "declarationKind": "export",
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "enabled",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 2422,
            "col": 4
          },
          "jsDoc": {
            "doc": "whether the widget is enabled"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        },
        {
          "name": "channel_id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 2424,
            "col": 4
          },
          "jsDoc": {
            "doc": "the widget channel id"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              },
              {
                "repr": "null",
                "kind": "keyword",
                "keyword": "null"
              }
            ]
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "DiscordInstallParams",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 2427,
      "col": 0
    },
    "declarationKind": "export",
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "scopes",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 2429,
            "col": 4
          },
          "jsDoc": {
            "doc": "he scopes to add the application to the server with"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            }
          },
          "typeParams": []
        },
        {
          "name": "permissions",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
            "line": 2431,
            "col": 4
          },
          "jsDoc": {
            "doc": "the permissions to request for the bot role"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "import",
    "name": "ActivityTypes",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 1,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/types/shared.ts",
      "imported": "ActivityTypes"
    }
  },
  {
    "kind": "import",
    "name": "AllowedMentionsTypes",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 1,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/types/shared.ts",
      "imported": "AllowedMentionsTypes"
    }
  },
  {
    "kind": "import",
    "name": "ApplicationCommandOptionTypes",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 1,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/types/shared.ts",
      "imported": "ApplicationCommandOptionTypes"
    }
  },
  {
    "kind": "import",
    "name": "ApplicationCommandPermissionTypes",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 1,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/types/shared.ts",
      "imported": "ApplicationCommandPermissionTypes"
    }
  },
  {
    "kind": "import",
    "name": "ApplicationCommandTypes",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 1,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/types/shared.ts",
      "imported": "ApplicationCommandTypes"
    }
  },
  {
    "kind": "import",
    "name": "ApplicationFlags",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 1,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/types/shared.ts",
      "imported": "ApplicationFlags"
    }
  },
  {
    "kind": "import",
    "name": "AuditLogEvents",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 1,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/types/shared.ts",
      "imported": "AuditLogEvents"
    }
  },
  {
    "kind": "import",
    "name": "ButtonStyles",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 1,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/types/shared.ts",
      "imported": "ButtonStyles"
    }
  },
  {
    "kind": "import",
    "name": "ChannelFlags",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 1,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/types/shared.ts",
      "imported": "ChannelFlags"
    }
  },
  {
    "kind": "import",
    "name": "ChannelTypes",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 1,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/types/shared.ts",
      "imported": "ChannelTypes"
    }
  },
  {
    "kind": "import",
    "name": "DefaultMessageNotificationLevels",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 1,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/types/shared.ts",
      "imported": "DefaultMessageNotificationLevels"
    }
  },
  {
    "kind": "import",
    "name": "EmbedTypes",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 1,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/types/shared.ts",
      "imported": "EmbedTypes"
    }
  },
  {
    "kind": "import",
    "name": "ExplicitContentFilterLevels",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 1,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/types/shared.ts",
      "imported": "ExplicitContentFilterLevels"
    }
  },
  {
    "kind": "import",
    "name": "GatewayEventNames",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 1,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/types/shared.ts",
      "imported": "GatewayEventNames"
    }
  },
  {
    "kind": "import",
    "name": "GuildFeatures",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 1,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/types/shared.ts",
      "imported": "GuildFeatures"
    }
  },
  {
    "kind": "import",
    "name": "GuildNsfwLevel",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 1,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/types/shared.ts",
      "imported": "GuildNsfwLevel"
    }
  },
  {
    "kind": "import",
    "name": "IntegrationExpireBehaviors",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 1,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/types/shared.ts",
      "imported": "IntegrationExpireBehaviors"
    }
  },
  {
    "kind": "import",
    "name": "InteractionTypes",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 1,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/types/shared.ts",
      "imported": "InteractionTypes"
    }
  },
  {
    "kind": "import",
    "name": "Locales",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 1,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/types/shared.ts",
      "imported": "Locales"
    }
  },
  {
    "kind": "import",
    "name": "Localization",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 1,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/types/shared.ts",
      "imported": "Localization"
    }
  },
  {
    "kind": "import",
    "name": "MessageActivityTypes",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 1,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/types/shared.ts",
      "imported": "MessageActivityTypes"
    }
  },
  {
    "kind": "import",
    "name": "MessageComponentTypes",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 1,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/types/shared.ts",
      "imported": "MessageComponentTypes"
    }
  },
  {
    "kind": "import",
    "name": "MessageTypes",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 1,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/types/shared.ts",
      "imported": "MessageTypes"
    }
  },
  {
    "kind": "import",
    "name": "MfaLevels",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 1,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/types/shared.ts",
      "imported": "MfaLevels"
    }
  },
  {
    "kind": "import",
    "name": "OverwriteTypes",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 1,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/types/shared.ts",
      "imported": "OverwriteTypes"
    }
  },
  {
    "kind": "import",
    "name": "PickPartial",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 1,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/types/shared.ts",
      "imported": "PickPartial"
    }
  },
  {
    "kind": "import",
    "name": "PremiumTiers",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 1,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/types/shared.ts",
      "imported": "PremiumTiers"
    }
  },
  {
    "kind": "import",
    "name": "PremiumTypes",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 1,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/types/shared.ts",
      "imported": "PremiumTypes"
    }
  },
  {
    "kind": "import",
    "name": "ScheduledEventEntityType",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 1,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/types/shared.ts",
      "imported": "ScheduledEventEntityType"
    }
  },
  {
    "kind": "import",
    "name": "ScheduledEventPrivacyLevel",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 1,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/types/shared.ts",
      "imported": "ScheduledEventPrivacyLevel"
    }
  },
  {
    "kind": "import",
    "name": "ScheduledEventStatus",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 1,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/types/shared.ts",
      "imported": "ScheduledEventStatus"
    }
  },
  {
    "kind": "import",
    "name": "StickerFormatTypes",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 1,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/types/shared.ts",
      "imported": "StickerFormatTypes"
    }
  },
  {
    "kind": "import",
    "name": "StickerTypes",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 1,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/types/shared.ts",
      "imported": "StickerTypes"
    }
  },
  {
    "kind": "import",
    "name": "SystemChannelFlags",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 1,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/types/shared.ts",
      "imported": "SystemChannelFlags"
    }
  },
  {
    "kind": "import",
    "name": "TargetTypes",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 1,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/types/shared.ts",
      "imported": "TargetTypes"
    }
  },
  {
    "kind": "import",
    "name": "TeamMembershipStates",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 1,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/types/shared.ts",
      "imported": "TeamMembershipStates"
    }
  },
  {
    "kind": "import",
    "name": "TextStyles",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 1,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/types/shared.ts",
      "imported": "TextStyles"
    }
  },
  {
    "kind": "import",
    "name": "UserFlags",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 1,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/types/shared.ts",
      "imported": "UserFlags"
    }
  },
  {
    "kind": "import",
    "name": "VerificationLevels",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 1,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/types/shared.ts",
      "imported": "VerificationLevels"
    }
  },
  {
    "kind": "import",
    "name": "VideoQualityModes",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 1,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/types/shared.ts",
      "imported": "VideoQualityModes"
    }
  },
  {
    "kind": "import",
    "name": "VisibilityTypes",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 1,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/types/shared.ts",
      "imported": "VisibilityTypes"
    }
  },
  {
    "kind": "import",
    "name": "WebhookTypes",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "line": 1,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/types/shared.ts",
      "imported": "WebhookTypes"
    }
  },
  {
    "kind": "enum",
    "name": "PremiumTypes",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/shared.ts",
      "line": 2,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "https://discord.com/developers/docs/resources/user#user-object-premium-types"
    },
    "enumDef": {
      "members": [
        {
          "name": "None"
        },
        {
          "name": "NitroClassic"
        },
        {
          "name": "Nitro"
        }
      ]
    }
  },
  {
    "kind": "enum",
    "name": "UserFlags",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/shared.ts",
      "line": 9,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "https://discord.com/developers/docs/resources/user#user-object-user-flags"
    },
    "enumDef": {
      "members": [
        {
          "name": "DiscordEmployee"
        },
        {
          "name": "PartneredServerOwner"
        },
        {
          "name": "HypeSquadEventsMember"
        },
        {
          "name": "BugHunterLevel1"
        },
        {
          "name": "HouseBravery"
        },
        {
          "name": "HouseBrilliance"
        },
        {
          "name": "HouseBalance"
        },
        {
          "name": "EarlySupporter"
        },
        {
          "name": "TeamUser"
        },
        {
          "name": "BugHunterLevel2"
        },
        {
          "name": "VerifiedBot"
        },
        {
          "name": "EarlyVerifiedBotDeveloper"
        },
        {
          "name": "DiscordCertifiedModerator"
        },
        {
          "name": "BotHttpInteractions"
        }
      ]
    }
  },
  {
    "kind": "enum",
    "name": "ChannelFlags",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/shared.ts",
      "line": 27,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "https://discord.com/developers/docs/resources/channel#channels-resource"
    },
    "enumDef": {
      "members": [
        {
          "name": "None"
        },
        {
          "name": "Pinned"
        }
      ]
    }
  },
  {
    "kind": "enum",
    "name": "IntegrationExpireBehaviors",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/shared.ts",
      "line": 33,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "https://discord.com/developers/docs/resources/guild#integration-object-integration-expire-behaviors"
    },
    "enumDef": {
      "members": [
        {
          "name": "RemoveRole"
        },
        {
          "name": "Kick"
        }
      ]
    }
  },
  {
    "kind": "enum",
    "name": "VisibilityTypes",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/shared.ts",
      "line": 39,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "https://discord.com/developers/docs/resources/user#connection-object-visibility-types"
    },
    "enumDef": {
      "members": [
        {
          "name": "None",
          "jsDoc": {
            "doc": "Invisible to everyone except the user themselves"
          }
        },
        {
          "name": "Everyone",
          "jsDoc": {
            "doc": "Visible to everyone"
          }
        }
      ]
    }
  },
  {
    "kind": "enum",
    "name": "TeamMembershipStates",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/shared.ts",
      "line": 47,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "https://discord.com/developers/docs/topics/teams#data-models-membership-state-enum"
    },
    "enumDef": {
      "members": [
        {
          "name": "Invited",
          "init": {
            "repr": "1",
            "kind": "literal",
            "literal": {
              "kind": "number",
              "number": 1.0
            }
          }
        },
        {
          "name": "Accepted"
        }
      ]
    }
  },
  {
    "kind": "enum",
    "name": "ApplicationFlags",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/shared.ts",
      "line": 53,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "https://discord.com/developers/docs/topics/oauth2#application-application-flags"
    },
    "enumDef": {
      "members": [
        {
          "name": "GatewayPresence",
          "jsDoc": {
            "doc": "Intent required for bots in **100 or more servers** to receive [`presence_update` events](#DOCS_TOPICS_GATEWAY/presence-update)"
          }
        },
        {
          "name": "GatewayPresenceLimited",
          "jsDoc": {
            "doc": "Intent required for bots in under 100 servers to receive [`presence_update` events](#DOCS_TOPICS_GATEWAY/presence-update), found in Bot Settings"
          }
        },
        {
          "name": "GatewayGuildMembers",
          "jsDoc": {
            "doc": "Intent required for bots in **100 or more servers** to receive member-related events like `guild_member_add`. See list of member-related events [under `GUILD_MEMBERS`](#DOCS_TOPICS_GATEWAY/list-of-intents)"
          }
        },
        {
          "name": "GatewayGuildMembersLimited",
          "jsDoc": {
            "doc": "Intent required for bots in under 100 servers to receive member-related events like `guild_member_add`, found in Bot Settings. See list of member-related events [under `GUILD_MEMBERS`](#DOCS_TOPICS_GATEWAY/list-of-intents)"
          }
        },
        {
          "name": "VerificationPendingGuildLimit",
          "jsDoc": {
            "doc": "Indicates unusual growth of an app that prevents verification"
          }
        },
        {
          "name": "Embedded",
          "jsDoc": {
            "doc": "Indicates if an app is embedded within the Discord client (currently unavailable publicly)"
          }
        },
        {
          "name": "GatewayMessageCount",
          "jsDoc": {
            "doc": "Intent required for bots in **100 or more servers** to receive [message content](https://support-dev.discord.com/hc/en-us/articles/4404772028055)"
          }
        },
        {
          "name": "GatewayMessageContentLimited",
          "jsDoc": {
            "doc": "Intent required for bots in under 100 servers to receive [message content](https://support-dev.discord.com/hc/en-us/articles/4404772028055), found in Bot Settings"
          }
        }
      ]
    }
  },
  {
    "kind": "enum",
    "name": "MessageComponentTypes",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/shared.ts",
      "line": 73,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "https://discord.com/developers/docs/interactions/message-components#component-types"
    },
    "enumDef": {
      "members": [
        {
          "name": "ActionRow",
          "init": {
            "repr": "1",
            "kind": "literal",
            "literal": {
              "kind": "number",
              "number": 1.0
            }
          },
          "jsDoc": {
            "doc": "A container for other components"
          }
        },
        {
          "name": "Button",
          "init": {
            "repr": "2",
            "kind": "literal",
            "literal": {
              "kind": "number",
              "number": 2.0
            }
          },
          "jsDoc": {
            "doc": "A button object"
          }
        },
        {
          "name": "SelectMenu",
          "init": {
            "repr": "3",
            "kind": "literal",
            "literal": {
              "kind": "number",
              "number": 3.0
            }
          },
          "jsDoc": {
            "doc": "A select menu for picking from choices"
          }
        },
        {
          "name": "InputText",
          "init": {
            "repr": "4",
            "kind": "literal",
            "literal": {
              "kind": "number",
              "number": 4.0
            }
          },
          "jsDoc": {
            "doc": "A text input object"
          }
        }
      ]
    }
  },
  {
    "kind": "enum",
    "name": "TextStyles",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/shared.ts",
      "line": 84,
      "col": 0
    },
    "declarationKind": "export",
    "enumDef": {
      "members": [
        {
          "name": "Short",
          "init": {
            "repr": "1",
            "kind": "literal",
            "literal": {
              "kind": "number",
              "number": 1.0
            }
          },
          "jsDoc": {
            "doc": "Intended for short single-line text"
          }
        },
        {
          "name": "Paragraph",
          "init": {
            "repr": "2",
            "kind": "literal",
            "literal": {
              "kind": "number",
              "number": 2.0
            }
          },
          "jsDoc": {
            "doc": "Intended for much longer inputs"
          }
        }
      ]
    }
  },
  {
    "kind": "enum",
    "name": "ButtonStyles",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/shared.ts",
      "line": 92,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "https://discord.com/developers/docs/interactions/message-components#buttons-button-styles"
    },
    "enumDef": {
      "members": [
        {
          "name": "Primary",
          "init": {
            "repr": "1",
            "kind": "literal",
            "literal": {
              "kind": "number",
              "number": 1.0
            }
          },
          "jsDoc": {
            "doc": "A blurple button"
          }
        },
        {
          "name": "Secondary",
          "jsDoc": {
            "doc": "A grey button"
          }
        },
        {
          "name": "Success",
          "jsDoc": {
            "doc": "A green button"
          }
        },
        {
          "name": "Danger",
          "jsDoc": {
            "doc": "A red button"
          }
        },
        {
          "name": "Link",
          "jsDoc": {
            "doc": "A button that navigates to a URL"
          }
        }
      ]
    }
  },
  {
    "kind": "enum",
    "name": "AllowedMentionsTypes",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/shared.ts",
      "line": 106,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "https://discord.com/developers/docs/resources/channel#allowed-mentions-object-allowed-mention-types"
    },
    "enumDef": {
      "members": [
        {
          "name": "RoleMentions",
          "init": {
            "repr": "roles",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "roles"
            }
          },
          "jsDoc": {
            "doc": "Controls role mentions"
          }
        },
        {
          "name": "UserMentions",
          "init": {
            "repr": "users",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "users"
            }
          },
          "jsDoc": {
            "doc": "Controls user mentions"
          }
        },
        {
          "name": "EveryoneMentions",
          "init": {
            "repr": "everyone",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "everyone"
            }
          },
          "jsDoc": {
            "doc": "Controls @everyone and @here mentions"
          }
        }
      ]
    }
  },
  {
    "kind": "enum",
    "name": "WebhookTypes",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/shared.ts",
      "line": 116,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "https://discord.com/developers/docs/resources/webhook#webhook-object-webhook-types"
    },
    "enumDef": {
      "members": [
        {
          "name": "Incoming",
          "init": {
            "repr": "1",
            "kind": "literal",
            "literal": {
              "kind": "number",
              "number": 1.0
            }
          },
          "jsDoc": {
            "doc": "Incoming Webhooks can post messages to channels with a generated token"
          }
        },
        {
          "name": "ChannelFollower",
          "jsDoc": {
            "doc": "Channel Follower Webhooks are internal webhooks used with Channel Following to post new messages into channels"
          }
        },
        {
          "name": "Application",
          "jsDoc": {
            "doc": "Application webhooks are webhooks used with Interactions"
          }
        }
      ]
    }
  },
  {
    "kind": "typeAlias",
    "name": "EmbedTypes",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/shared.ts",
      "line": 126,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "https://discord.com/developers/docs/resources/channel#embed-object-embed-types"
    },
    "typeAliasDef": {
      "tsType": {
        "repr": "",
        "kind": "union",
        "union": [
          {
            "repr": "rich",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "rich"
            }
          },
          {
            "repr": "image",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "image"
            }
          },
          {
            "repr": "video",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "video"
            }
          },
          {
            "repr": "gifv",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "gifv"
            }
          },
          {
            "repr": "article",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "article"
            }
          },
          {
            "repr": "link",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "link"
            }
          }
        ]
      },
      "typeParams": []
    }
  },
  {
    "kind": "enum",
    "name": "DefaultMessageNotificationLevels",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/shared.ts",
      "line": 129,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "https://discord.com/developers/docs/resources/guild#guild-object-default-message-notification-level"
    },
    "enumDef": {
      "members": [
        {
          "name": "AllMessages",
          "jsDoc": {
            "doc": "Members will receive notifications for all messages by default"
          }
        },
        {
          "name": "OnlyMentions",
          "jsDoc": {
            "doc": "Members will receive notifications only for messages that @mention them by default"
          }
        }
      ]
    }
  },
  {
    "kind": "enum",
    "name": "ExplicitContentFilterLevels",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/shared.ts",
      "line": 137,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "https://discord.com/developers/docs/resources/guild#guild-object-explicit-content-filter-level"
    },
    "enumDef": {
      "members": [
        {
          "name": "Disabled",
          "jsDoc": {
            "doc": "Media content will not be scanned"
          }
        },
        {
          "name": "MembersWithoutRoles",
          "jsDoc": {
            "doc": "Media content sent by members without roles will be scanned"
          }
        },
        {
          "name": "AllMembers",
          "jsDoc": {
            "doc": "Media content sent by all members will be scanned"
          }
        }
      ]
    }
  },
  {
    "kind": "enum",
    "name": "VerificationLevels",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/shared.ts",
      "line": 147,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "https://discord.com/developers/docs/resources/guild#guild-object-verification-level"
    },
    "enumDef": {
      "members": [
        {
          "name": "None",
          "jsDoc": {
            "doc": "Unrestricted"
          }
        },
        {
          "name": "Low",
          "jsDoc": {
            "doc": "Must have verified email on account"
          }
        },
        {
          "name": "Medium",
          "jsDoc": {
            "doc": "Must be registered on Discord for longer than 5 minutes"
          }
        },
        {
          "name": "High",
          "jsDoc": {
            "doc": "Must be a member of the server for longer than 10 minutes"
          }
        },
        {
          "name": "VeryHigh",
          "jsDoc": {
            "doc": "Must have a verified phone number"
          }
        }
      ]
    }
  },
  {
    "kind": "interface",
    "name": "BaseRole",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/shared.ts",
      "line": 161,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "https://discord.com/developers/docs/topics/permissions#role-object-role-structure"
    },
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "name",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/shared.ts",
            "line": 163,
            "col": 4
          },
          "jsDoc": {
            "doc": "Role name"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "color",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/shared.ts",
            "line": 165,
            "col": 4
          },
          "jsDoc": {
            "doc": "Integer representation of hexadecimal color code"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "position",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/shared.ts",
            "line": 167,
            "col": 4
          },
          "jsDoc": {
            "doc": "Position of this role"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "unicodeEmoji",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/shared.ts",
            "line": 169,
            "col": 4
          },
          "jsDoc": {
            "doc": "role unicode emoji"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "enum",
    "name": "GuildFeatures",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/shared.ts",
      "line": 173,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "https://discord.com/developers/docs/resources/guild#guild-object-guild-features"
    },
    "enumDef": {
      "members": [
        {
          "name": "InviteSplash",
          "init": {
            "repr": "INVITE_SPLASH",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "INVITE_SPLASH"
            }
          },
          "jsDoc": {
            "doc": "Guild has access to set an invite splash background"
          }
        },
        {
          "name": "VipRegions",
          "init": {
            "repr": "VIP_REGIONS",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "VIP_REGIONS"
            }
          },
          "jsDoc": {
            "doc": "Guild has access to set 384 kbps bitrate in voice (previously VIP voice servers)"
          }
        },
        {
          "name": "VanityUrl",
          "init": {
            "repr": "VANITY_URL",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "VANITY_URL"
            }
          },
          "jsDoc": {
            "doc": "Guild has access to set a vanity URL"
          }
        },
        {
          "name": "Verified",
          "init": {
            "repr": "VERIFIED",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "VERIFIED"
            }
          },
          "jsDoc": {
            "doc": "Guild is verified"
          }
        },
        {
          "name": "Partnered",
          "init": {
            "repr": "PARTNERED",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "PARTNERED"
            }
          },
          "jsDoc": {
            "doc": "Guild is partnered"
          }
        },
        {
          "name": "Community",
          "init": {
            "repr": "COMMUNITY",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "COMMUNITY"
            }
          },
          "jsDoc": {
            "doc": "Guild can enable welcome screen, Membership Screening, stage channels and discovery, and receives community updates"
          }
        },
        {
          "name": "Commerce",
          "init": {
            "repr": "COMMERCE",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "COMMERCE"
            }
          },
          "jsDoc": {
            "doc": "Guild has access to use commerce features (i.e. create store channels)"
          }
        },
        {
          "name": "News",
          "init": {
            "repr": "NEWS",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "NEWS"
            }
          },
          "jsDoc": {
            "doc": "Guild has access to create news channels"
          }
        },
        {
          "name": "Discoverable",
          "init": {
            "repr": "DISCOVERABLE",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "DISCOVERABLE"
            }
          },
          "jsDoc": {
            "doc": "Guild is able to be discovered in the directory"
          }
        },
        {
          "name": "DiscoverableDisabled",
          "init": {
            "repr": "DISCOVERABLE_DISABLED",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "DISCOVERABLE_DISABLED"
            }
          },
          "jsDoc": {
            "doc": "guild cannot be discoverable"
          }
        },
        {
          "name": "Feature",
          "init": {
            "repr": "FEATURABLE",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "FEATURABLE"
            }
          },
          "jsDoc": {
            "doc": "Guild is able to be featured in the directory"
          }
        },
        {
          "name": "AnimatedIcon",
          "init": {
            "repr": "ANIMATED_ICON",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "ANIMATED_ICON"
            }
          },
          "jsDoc": {
            "doc": "Guild has access to set an animated guild icon"
          }
        },
        {
          "name": "Banner",
          "init": {
            "repr": "BANNER",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "BANNER"
            }
          },
          "jsDoc": {
            "doc": "Guild has access to set a guild banner image"
          }
        },
        {
          "name": "WelcomeScreenEnabled",
          "init": {
            "repr": "WELCOME_SCREEN_ENABLED",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "WELCOME_SCREEN_ENABLED"
            }
          },
          "jsDoc": {
            "doc": "Guild has enabled the welcome screen"
          }
        },
        {
          "name": "MemberVerificationGateEnabled",
          "init": {
            "repr": "MEMBER_VERIFICATION_GATE_ENABLED",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "MEMBER_VERIFICATION_GATE_ENABLED"
            }
          },
          "jsDoc": {
            "doc": "Guild has enabled [Membership Screening](https://discord.com/developers/docs/resources/guild#membership-screening-object)"
          }
        },
        {
          "name": "PreviewEnabled",
          "init": {
            "repr": "PREVIEW_ENABLED",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "PREVIEW_ENABLED"
            }
          },
          "jsDoc": {
            "doc": "Guild can be previewed before joining via Membership Screening or the directory"
          }
        },
        {
          "name": "TicketedEventsEnabled",
          "init": {
            "repr": "TICKETED_EVENTS_ENABLED",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "TICKETED_EVENTS_ENABLED"
            }
          },
          "jsDoc": {
            "doc": "Guild has enabled ticketed events"
          }
        },
        {
          "name": "MonetizationEnabled",
          "init": {
            "repr": "MONETIZATION_ENABLED",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "MONETIZATION_ENABLED"
            }
          },
          "jsDoc": {
            "doc": "Guild has enabled monetization"
          }
        },
        {
          "name": "MoreStickers",
          "init": {
            "repr": "MORE_STICKERS",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "MORE_STICKERS"
            }
          },
          "jsDoc": {
            "doc": "Guild has increased custom sticker slots"
          }
        },
        {
          "name": "PrivateThreads",
          "init": {
            "repr": "PRIVATE_THREADS",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "PRIVATE_THREADS"
            }
          },
          "jsDoc": {
            "doc": "Guild has access to create private threads"
          }
        },
        {
          "name": "RoleIcons",
          "init": {
            "repr": "ROLE_ICONS",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "ROLE_ICONS"
            }
          },
          "jsDoc": {
            "doc": "Guild is able to set role icons"
          }
        },
        {
          "name": "AutoModeration",
          "init": {
            "repr": "AUTO_MODERATION",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "AUTO_MODERATION"
            }
          },
          "jsDoc": {
            "doc": "Guild has set up auto moderation rules"
          }
        }
      ]
    }
  },
  {
    "kind": "enum",
    "name": "MfaLevels",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/shared.ts",
      "line": 221,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "https://discord.com/developers/docs/resources/guild#guild-object-mfa-level"
    },
    "enumDef": {
      "members": [
        {
          "name": "None",
          "jsDoc": {
            "doc": "Guild has no MFA/2FA requirement for moderation actions"
          }
        },
        {
          "name": "Elevated",
          "jsDoc": {
            "doc": "Guild has a 2FA requirement for moderation actions"
          }
        }
      ]
    }
  },
  {
    "kind": "enum",
    "name": "SystemChannelFlags",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/shared.ts",
      "line": 229,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "https://discord.com/developers/docs/resources/guild#guild-object-system-channel-flags"
    },
    "enumDef": {
      "members": [
        {
          "name": "SuppressJoinNotifications",
          "jsDoc": {
            "doc": "Suppress member join notifications"
          }
        },
        {
          "name": "SuppressPremiumSubscriptions",
          "jsDoc": {
            "doc": "Suppress server boost notifications"
          }
        },
        {
          "name": "SuppressGuildReminderNotifications",
          "jsDoc": {
            "doc": "Suppress server setup tips"
          }
        },
        {
          "name": "SuppressJoinNotificationReplies",
          "jsDoc": {
            "doc": "Hide member join sticker reply buttons"
          }
        }
      ]
    }
  },
  {
    "kind": "enum",
    "name": "PremiumTiers",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/shared.ts",
      "line": 241,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "https://discord.com/developers/docs/resources/guild#guild-object-premium-tier"
    },
    "enumDef": {
      "members": [
        {
          "name": "None",
          "jsDoc": {
            "doc": "Guild has not unlocked any Server Boost perks"
          }
        },
        {
          "name": "Tier1",
          "jsDoc": {
            "doc": "Guild has unlocked Server Boost level 1 perks"
          }
        },
        {
          "name": "Tier2",
          "jsDoc": {
            "doc": "Guild has unlocked Server Boost level 2 perks"
          }
        },
        {
          "name": "Tier3",
          "jsDoc": {
            "doc": "Guild has unlocked Server Boost level 3 perks"
          }
        }
      ]
    }
  },
  {
    "kind": "enum",
    "name": "GuildNsfwLevel",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/shared.ts",
      "line": 253,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "https://discord.com/developers/docs/resources/guild#guild-object-guild-nsfw-level"
    },
    "enumDef": {
      "members": [
        {
          "name": "Default"
        },
        {
          "name": "Explicit"
        },
        {
          "name": "Safe"
        },
        {
          "name": "AgeRestricted"
        }
      ]
    }
  },
  {
    "kind": "enum",
    "name": "ChannelTypes",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/shared.ts",
      "line": 261,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "https://discord.com/developers/docs/resources/channel#channel-object-channel-types"
    },
    "enumDef": {
      "members": [
        {
          "name": "GuildText",
          "jsDoc": {
            "doc": "A text channel within a server"
          }
        },
        {
          "name": "DM",
          "jsDoc": {
            "doc": "A direct message between users"
          }
        },
        {
          "name": "GuildVoice",
          "jsDoc": {
            "doc": "A voice channel within a server"
          }
        },
        {
          "name": "GroupDm",
          "jsDoc": {
            "doc": "A direct message between multiple users"
          }
        },
        {
          "name": "GuildCategory",
          "jsDoc": {
            "doc": "An organizational category that contains up to 50 channels"
          }
        },
        {
          "name": "GuildNews",
          "jsDoc": {
            "doc": "A channel that users can follow and crosspost into their own server"
          }
        },
        {
          "name": "GuildNewsThread",
          "init": {
            "repr": "10",
            "kind": "literal",
            "literal": {
              "kind": "number",
              "number": 10.0
            }
          },
          "jsDoc": {
            "doc": "A temporary sub-channel within a GUILD_NEWS channel"
          }
        },
        {
          "name": "GuildPublicThread",
          "jsDoc": {
            "doc": "A temporary sub-channel within a GUILD_TEXT channel"
          }
        },
        {
          "name": "GuildPrivateThread",
          "jsDoc": {
            "doc": "A temporary sub-channel within a GUILD_TEXT channel that is only viewable by those invited and those with the MANAGE_THREADS permission"
          }
        },
        {
          "name": "GuildStageVoice",
          "jsDoc": {
            "doc": "A voice channel for hosting events with an audience"
          }
        },
        {
          "name": "GuildDirectory",
          "jsDoc": {
            "doc": "A channel in a hub containing the listed servers"
          }
        },
        {
          "name": "GuildForum",
          "jsDoc": {
            "doc": "A channel which can only contains threads"
          }
        }
      ]
    }
  },
  {
    "kind": "enum",
    "name": "OverwriteTypes",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/shared.ts",
      "line": 288,
      "col": 0
    },
    "declarationKind": "export",
    "enumDef": {
      "members": [
        {
          "name": "Role"
        },
        {
          "name": "Member"
        }
      ]
    }
  },
  {
    "kind": "enum",
    "name": "VideoQualityModes",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/shared.ts",
      "line": 293,
      "col": 0
    },
    "declarationKind": "export",
    "enumDef": {
      "members": [
        {
          "name": "Auto",
          "init": {
            "repr": "1",
            "kind": "literal",
            "literal": {
              "kind": "number",
              "number": 1.0
            }
          },
          "jsDoc": {
            "doc": "Discord chooses the quality for optimal performance"
          }
        },
        {
          "name": "Full",
          "jsDoc": {
            "doc": "720p"
          }
        }
      ]
    }
  },
  {
    "kind": "enum",
    "name": "ActivityTypes",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/shared.ts",
      "line": 301,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "https://discord.com/developers/docs/topics/gateway#activity-object-activity-types"
    },
    "enumDef": {
      "members": [
        {
          "name": "Game"
        },
        {
          "name": "Streaming"
        },
        {
          "name": "Listening"
        },
        {
          "name": "Watching"
        },
        {
          "name": "Custom",
          "init": {
            "repr": "4",
            "kind": "literal",
            "literal": {
              "kind": "number",
              "number": 4.0
            }
          }
        },
        {
          "name": "Competing"
        }
      ]
    }
  },
  {
    "kind": "enum",
    "name": "MessageTypes",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/shared.ts",
      "line": 311,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "https://discord.com/developers/docs/resources/channel#message-object-message-types"
    },
    "enumDef": {
      "members": [
        {
          "name": "Default"
        },
        {
          "name": "RecipientAdd"
        },
        {
          "name": "RecipientRemove"
        },
        {
          "name": "Call"
        },
        {
          "name": "ChannelNameChange"
        },
        {
          "name": "ChannelIconChange"
        },
        {
          "name": "ChannelPinnedMessage"
        },
        {
          "name": "GuildMemberJoin"
        },
        {
          "name": "UserPremiumGuildSubscription"
        },
        {
          "name": "UserPremiumGuildSubscriptionTier1"
        },
        {
          "name": "UserPremiumGuildSubscriptionTier2"
        },
        {
          "name": "UserPremiumGuildSubscriptionTier3"
        },
        {
          "name": "ChannelFollowAdd"
        },
        {
          "name": "GuildDiscoveryDisqualified",
          "init": {
            "repr": "14",
            "kind": "literal",
            "literal": {
              "kind": "number",
              "number": 14.0
            }
          }
        },
        {
          "name": "GuildDiscoveryRequalified"
        },
        {
          "name": "GuildDiscoveryGracePeriodInitialWarning"
        },
        {
          "name": "GuildDiscoveryGracePeriodFinalWarning"
        },
        {
          "name": "ThreadCreated"
        },
        {
          "name": "Reply"
        },
        {
          "name": "ChatInputCommand"
        },
        {
          "name": "ThreadStarterMessage"
        },
        {
          "name": "GuildInviteReminder"
        },
        {
          "name": "ContextMenuCommand"
        },
        {
          "name": "AutoModerationAction"
        }
      ]
    }
  },
  {
    "kind": "enum",
    "name": "MessageActivityTypes",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/shared.ts",
      "line": 339,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "https://discord.com/developers/docs/resources/channel#message-object-message-activity-types"
    },
    "enumDef": {
      "members": [
        {
          "name": "Join",
          "init": {
            "repr": "1",
            "kind": "literal",
            "literal": {
              "kind": "number",
              "number": 1.0
            }
          }
        },
        {
          "name": "Spectate"
        },
        {
          "name": "Listen"
        },
        {
          "name": "JoinRequest"
        }
      ]
    }
  },
  {
    "kind": "enum",
    "name": "StickerTypes",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/shared.ts",
      "line": 347,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "https://discord.com/developers/docs/resources/sticker#sticker-object-sticker-types"
    },
    "enumDef": {
      "members": [
        {
          "name": "Standard",
          "init": {
            "repr": "1",
            "kind": "literal",
            "literal": {
              "kind": "number",
              "number": 1.0
            }
          },
          "jsDoc": {
            "doc": "an official sticker in a pack, part of Nitro or in a removed purchasable pack"
          }
        },
        {
          "name": "Guild",
          "jsDoc": {
            "doc": "a sticker uploaded to a Boosted guild for the guild's members"
          }
        }
      ]
    }
  },
  {
    "kind": "enum",
    "name": "StickerFormatTypes",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/shared.ts",
      "line": 355,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "https://discord.com/developers/docs/resources/sticker#sticker-object-sticker-format-types"
    },
    "enumDef": {
      "members": [
        {
          "name": "Png",
          "init": {
            "repr": "1",
            "kind": "literal",
            "literal": {
              "kind": "number",
              "number": 1.0
            }
          }
        },
        {
          "name": "APng"
        },
        {
          "name": "Lottie"
        }
      ]
    }
  },
  {
    "kind": "enum",
    "name": "InteractionTypes",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/shared.ts",
      "line": 362,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "https://discord.com/developers/docs/interactions/slash-commands#interaction-interactiontype"
    },
    "enumDef": {
      "members": [
        {
          "name": "Ping",
          "init": {
            "repr": "1",
            "kind": "literal",
            "literal": {
              "kind": "number",
              "number": 1.0
            }
          }
        },
        {
          "name": "ApplicationCommand",
          "init": {
            "repr": "2",
            "kind": "literal",
            "literal": {
              "kind": "number",
              "number": 2.0
            }
          }
        },
        {
          "name": "MessageComponent",
          "init": {
            "repr": "3",
            "kind": "literal",
            "literal": {
              "kind": "number",
              "number": 3.0
            }
          }
        },
        {
          "name": "ApplicationCommandAutocomplete",
          "init": {
            "repr": "4",
            "kind": "literal",
            "literal": {
              "kind": "number",
              "number": 4.0
            }
          }
        },
        {
          "name": "ModalSubmit",
          "init": {
            "repr": "5",
            "kind": "literal",
            "literal": {
              "kind": "number",
              "number": 5.0
            }
          }
        }
      ]
    }
  },
  {
    "kind": "enum",
    "name": "ApplicationCommandOptionTypes",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/shared.ts",
      "line": 371,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "https://discord.com/developers/docs/interactions/slash-commands#applicationcommandoptiontype"
    },
    "enumDef": {
      "members": [
        {
          "name": "SubCommand",
          "init": {
            "repr": "1",
            "kind": "literal",
            "literal": {
              "kind": "number",
              "number": 1.0
            }
          }
        },
        {
          "name": "SubCommandGroup"
        },
        {
          "name": "String"
        },
        {
          "name": "Integer"
        },
        {
          "name": "Boolean"
        },
        {
          "name": "User"
        },
        {
          "name": "Channel"
        },
        {
          "name": "Role"
        },
        {
          "name": "Mentionable"
        },
        {
          "name": "Number"
        },
        {
          "name": "Attachment"
        }
      ]
    }
  },
  {
    "kind": "enum",
    "name": "AuditLogEvents",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/shared.ts",
      "line": 386,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "https://discord.com/developers/docs/resources/audit-log#audit-log-entry-object-audit-log-events"
    },
    "enumDef": {
      "members": [
        {
          "name": "GuildUpdate",
          "init": {
            "repr": "1",
            "kind": "literal",
            "literal": {
              "kind": "number",
              "number": 1.0
            }
          },
          "jsDoc": {
            "doc": "Server settings were updated"
          }
        },
        {
          "name": "ChannelCreate",
          "init": {
            "repr": "10",
            "kind": "literal",
            "literal": {
              "kind": "number",
              "number": 10.0
            }
          },
          "jsDoc": {
            "doc": "Channel was created"
          }
        },
        {
          "name": "ChannelUpdate",
          "jsDoc": {
            "doc": "Channel settings were updated"
          }
        },
        {
          "name": "ChannelDelete",
          "jsDoc": {
            "doc": "Channel was deleted"
          }
        },
        {
          "name": "ChannelOverwriteCreate",
          "jsDoc": {
            "doc": "Permission overwrite was added to a channel"
          }
        },
        {
          "name": "ChannelOverwriteUpdate",
          "jsDoc": {
            "doc": "Permission overwrite was updated for a channel"
          }
        },
        {
          "name": "ChannelOverwriteDelete",
          "jsDoc": {
            "doc": "Permission overwrite was deleted from a channel"
          }
        },
        {
          "name": "MemberKick",
          "init": {
            "repr": "20",
            "kind": "literal",
            "literal": {
              "kind": "number",
              "number": 20.0
            }
          },
          "jsDoc": {
            "doc": "Member was removed from server"
          }
        },
        {
          "name": "MemberPrune",
          "jsDoc": {
            "doc": "Members were pruned from server"
          }
        },
        {
          "name": "MemberBanAdd",
          "jsDoc": {
            "doc": "Member was banned from server"
          }
        },
        {
          "name": "MemberBanRemove",
          "jsDoc": {
            "doc": "Server ban was lifted for a member"
          }
        },
        {
          "name": "MemberUpdate",
          "jsDoc": {
            "doc": "Member was updated in server"
          }
        },
        {
          "name": "MemberRoleUpdate",
          "jsDoc": {
            "doc": "Member was added or removed from a role"
          }
        },
        {
          "name": "MemberMove",
          "jsDoc": {
            "doc": "Member was moved to a different voice channel"
          }
        },
        {
          "name": "MemberDisconnect",
          "jsDoc": {
            "doc": "Member was disconnected from a voice channel"
          }
        },
        {
          "name": "BotAdd",
          "jsDoc": {
            "doc": "Bot user was added to server"
          }
        },
        {
          "name": "RoleCreate",
          "init": {
            "repr": "30",
            "kind": "literal",
            "literal": {
              "kind": "number",
              "number": 30.0
            }
          },
          "jsDoc": {
            "doc": "Role was created"
          }
        },
        {
          "name": "RoleUpdate",
          "jsDoc": {
            "doc": "Role was edited"
          }
        },
        {
          "name": "RoleDelete",
          "jsDoc": {
            "doc": "Role was deleted"
          }
        },
        {
          "name": "InviteCreate",
          "init": {
            "repr": "40",
            "kind": "literal",
            "literal": {
              "kind": "number",
              "number": 40.0
            }
          },
          "jsDoc": {
            "doc": "Server invite was created"
          }
        },
        {
          "name": "InviteUpdate",
          "jsDoc": {
            "doc": "Server invite was updated"
          }
        },
        {
          "name": "InviteDelete",
          "jsDoc": {
            "doc": "Server invite was deleted"
          }
        },
        {
          "name": "WebhookCreate",
          "init": {
            "repr": "50",
            "kind": "literal",
            "literal": {
              "kind": "number",
              "number": 50.0
            }
          },
          "jsDoc": {
            "doc": "Webhook was created"
          }
        },
        {
          "name": "WebhookUpdate",
          "jsDoc": {
            "doc": "Webhook properties or channel were updated"
          }
        },
        {
          "name": "WebhookDelete",
          "jsDoc": {
            "doc": "Webhook was deleted"
          }
        },
        {
          "name": "EmojiCreate",
          "init": {
            "repr": "60",
            "kind": "literal",
            "literal": {
              "kind": "number",
              "number": 60.0
            }
          },
          "jsDoc": {
            "doc": "Emoji was created"
          }
        },
        {
          "name": "EmojiUpdate",
          "jsDoc": {
            "doc": "Emoji name was updated"
          }
        },
        {
          "name": "EmojiDelete",
          "jsDoc": {
            "doc": "Emoji was deleted"
          }
        },
        {
          "name": "MessageDelete",
          "init": {
            "repr": "72",
            "kind": "literal",
            "literal": {
              "kind": "number",
              "number": 72.0
            }
          },
          "jsDoc": {
            "doc": "Single message was deleted"
          }
        },
        {
          "name": "MessageBulkDelete",
          "jsDoc": {
            "doc": "Multiple messages were deleted"
          }
        },
        {
          "name": "MessagePin",
          "jsDoc": {
            "doc": "Messaged was pinned to a channel"
          }
        },
        {
          "name": "MessageUnpin",
          "jsDoc": {
            "doc": "Message was unpinned from a channel"
          }
        },
        {
          "name": "IntegrationCreate",
          "init": {
            "repr": "80",
            "kind": "literal",
            "literal": {
              "kind": "number",
              "number": 80.0
            }
          },
          "jsDoc": {
            "doc": "App was added to server"
          }
        },
        {
          "name": "IntegrationUpdate",
          "jsDoc": {
            "doc": "App was updated (as an example, its scopes were updated)"
          }
        },
        {
          "name": "IntegrationDelete",
          "jsDoc": {
            "doc": "App was removed from server"
          }
        },
        {
          "name": "StageInstanceCreate",
          "jsDoc": {
            "doc": "Stage instance was created (stage channel becomes live)"
          }
        },
        {
          "name": "StageInstanceUpdate",
          "jsDoc": {
            "doc": "Stage instace details were updated"
          }
        },
        {
          "name": "StageInstanceDelete",
          "jsDoc": {
            "doc": "Stage instance was deleted (stage channel no longer live)"
          }
        },
        {
          "name": "StickerCreate",
          "init": {
            "repr": "90",
            "kind": "literal",
            "literal": {
              "kind": "number",
              "number": 90.0
            }
          },
          "jsDoc": {
            "doc": "Sticker was created"
          }
        },
        {
          "name": "StickerUpdate",
          "jsDoc": {
            "doc": "Sticker details were updated"
          }
        },
        {
          "name": "StickerDelete",
          "jsDoc": {
            "doc": "Sticker was deleted"
          }
        },
        {
          "name": "GuildScheduledEventCreate",
          "init": {
            "repr": "100",
            "kind": "literal",
            "literal": {
              "kind": "number",
              "number": 100.0
            }
          },
          "jsDoc": {
            "doc": "Event was created"
          }
        },
        {
          "name": "GuildScheduledEventUpdate",
          "jsDoc": {
            "doc": "Event was updated"
          }
        },
        {
          "name": "GuildScheduledEventDelete",
          "jsDoc": {
            "doc": "Event was cancelled"
          }
        },
        {
          "name": "ThreadCreate",
          "init": {
            "repr": "110",
            "kind": "literal",
            "literal": {
              "kind": "number",
              "number": 110.0
            }
          },
          "jsDoc": {
            "doc": "Thread was created in a channel"
          }
        },
        {
          "name": "ThreadUpdate",
          "jsDoc": {
            "doc": "Thread was updated"
          }
        },
        {
          "name": "ThreadDelete",
          "jsDoc": {
            "doc": "Thread was deleted"
          }
        },
        {
          "name": "ApplicationCommandPermissionUpdate",
          "init": {
            "repr": "121",
            "kind": "literal",
            "literal": {
              "kind": "number",
              "number": 121.0
            }
          },
          "jsDoc": {
            "doc": "Permissions were updated for a command"
          }
        },
        {
          "name": "AutoModerationRuleCreate",
          "init": {
            "repr": "140",
            "kind": "literal",
            "literal": {
              "kind": "number",
              "number": 140.0
            }
          },
          "jsDoc": {
            "doc": "Auto moderation rule was created"
          }
        },
        {
          "name": "AutoModerationRuleUpdate",
          "jsDoc": {
            "doc": "Auto moderation rule was updated"
          }
        },
        {
          "name": "AutoModerationRuleDelete",
          "jsDoc": {
            "doc": "Auto moderation rule was deleted"
          }
        },
        {
          "name": "AutoModerationBlockMessage",
          "jsDoc": {
            "doc": "Message was blocked by AutoMod according to a rule."
          }
        }
      ]
    }
  },
  {
    "kind": "enum",
    "name": "ScheduledEventPrivacyLevel",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/shared.ts",
      "line": 493,
      "col": 0
    },
    "declarationKind": "export",
    "enumDef": {
      "members": [
        {
          "name": "GuildOnly",
          "init": {
            "repr": "2",
            "kind": "literal",
            "literal": {
              "kind": "number",
              "number": 2.0
            }
          },
          "jsDoc": {
            "doc": "the scheduled event is only accessible to guild members"
          }
        }
      ]
    }
  },
  {
    "kind": "enum",
    "name": "ScheduledEventEntityType",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/shared.ts",
      "line": 500,
      "col": 0
    },
    "declarationKind": "export",
    "enumDef": {
      "members": [
        {
          "name": "StageInstance",
          "init": {
            "repr": "1",
            "kind": "literal",
            "literal": {
              "kind": "number",
              "number": 1.0
            }
          }
        },
        {
          "name": "Voice"
        },
        {
          "name": "External"
        }
      ]
    }
  },
  {
    "kind": "enum",
    "name": "ScheduledEventStatus",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/shared.ts",
      "line": 506,
      "col": 0
    },
    "declarationKind": "export",
    "enumDef": {
      "members": [
        {
          "name": "Scheduled",
          "init": {
            "repr": "1",
            "kind": "literal",
            "literal": {
              "kind": "number",
              "number": 1.0
            }
          }
        },
        {
          "name": "Active"
        },
        {
          "name": "Completed"
        },
        {
          "name": "Canceled"
        }
      ]
    }
  },
  {
    "kind": "enum",
    "name": "TargetTypes",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/shared.ts",
      "line": 514,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "https://discord.com/developers/docs/resources/invite#invite-object-target-user-types"
    },
    "enumDef": {
      "members": [
        {
          "name": "Stream",
          "init": {
            "repr": "1",
            "kind": "literal",
            "literal": {
              "kind": "number",
              "number": 1.0
            }
          }
        },
        {
          "name": "EmbeddedApplication"
        }
      ]
    }
  },
  {
    "kind": "enum",
    "name": "ApplicationCommandTypes",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/shared.ts",
      "line": 519,
      "col": 0
    },
    "declarationKind": "export",
    "enumDef": {
      "members": [
        {
          "name": "ChatInput",
          "init": {
            "repr": "1",
            "kind": "literal",
            "literal": {
              "kind": "number",
              "number": 1.0
            }
          },
          "jsDoc": {
            "doc": "A text-based command that shows up when a user types `/`"
          }
        },
        {
          "name": "User",
          "jsDoc": {
            "doc": "A UI-based command that shows up when you right click or tap on a user"
          }
        },
        {
          "name": "Message",
          "jsDoc": {
            "doc": "A UI-based command that shows up when you right click or tap on a message"
          }
        }
      ]
    }
  },
  {
    "kind": "enum",
    "name": "ApplicationCommandPermissionTypes",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/shared.ts",
      "line": 528,
      "col": 0
    },
    "declarationKind": "export",
    "enumDef": {
      "members": [
        {
          "name": "Role",
          "init": {
            "repr": "1",
            "kind": "literal",
            "literal": {
              "kind": "number",
              "number": 1.0
            }
          }
        },
        {
          "name": "User"
        },
        {
          "name": "Channel"
        }
      ]
    }
  },
  {
    "kind": "enum",
    "name": "ActivityFlags",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/shared.ts",
      "line": 535,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "https://discord.com/developers/docs/topics/gateway#activity-object-activity-flags"
    },
    "enumDef": {
      "members": [
        {
          "name": "Instance"
        },
        {
          "name": "Join"
        },
        {
          "name": "Spectate"
        },
        {
          "name": "JoinRequest"
        },
        {
          "name": "Sync"
        },
        {
          "name": "Play"
        },
        {
          "name": "PartyPrivacyFriends"
        },
        {
          "name": "PartyPrivacyVoiceChannel"
        },
        {
          "name": "Embedded"
        }
      ]
    }
  },
  {
    "kind": "enum",
    "name": "BitwisePermissionFlags",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/shared.ts",
      "line": 548,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "https://discord.com/developers/docs/topics/permissions#permissions-bitwise-permission-flags"
    },
    "enumDef": {
      "members": [
        {
          "name": "CREATE_INSTANT_INVITE",
          "init": {
            "repr": "1",
            "kind": "literal",
            "literal": {
              "kind": "number",
              "number": 1.0
            }
          },
          "jsDoc": {
            "doc": "Allows creation of instant invites"
          }
        },
        {
          "name": "KICK_MEMBERS",
          "init": {
            "repr": "2",
            "kind": "literal",
            "literal": {
              "kind": "number",
              "number": 2.0
            }
          },
          "jsDoc": {
            "doc": "Allows kicking members"
          }
        },
        {
          "name": "BAN_MEMBERS",
          "init": {
            "repr": "4",
            "kind": "literal",
            "literal": {
              "kind": "number",
              "number": 4.0
            }
          },
          "jsDoc": {
            "doc": "Allows banning members"
          }
        },
        {
          "name": "ADMINISTRATOR",
          "init": {
            "repr": "8",
            "kind": "literal",
            "literal": {
              "kind": "number",
              "number": 8.0
            }
          },
          "jsDoc": {
            "doc": "Allows all permissions and bypasses channel permission overwrites"
          }
        },
        {
          "name": "MANAGE_CHANNELS",
          "init": {
            "repr": "16",
            "kind": "literal",
            "literal": {
              "kind": "number",
              "number": 16.0
            }
          },
          "jsDoc": {
            "doc": "Allows management and editing of channels"
          }
        },
        {
          "name": "MANAGE_GUILD",
          "init": {
            "repr": "32",
            "kind": "literal",
            "literal": {
              "kind": "number",
              "number": 32.0
            }
          },
          "jsDoc": {
            "doc": "Allows management and editing of the guild"
          }
        },
        {
          "name": "ADD_REACTIONS",
          "init": {
            "repr": "64",
            "kind": "literal",
            "literal": {
              "kind": "number",
              "number": 64.0
            }
          },
          "jsDoc": {
            "doc": "Allows for the addition of reactions to messages"
          }
        },
        {
          "name": "VIEW_AUDIT_LOG",
          "init": {
            "repr": "128",
            "kind": "literal",
            "literal": {
              "kind": "number",
              "number": 128.0
            }
          },
          "jsDoc": {
            "doc": "Allows for viewing of audit logs"
          }
        },
        {
          "name": "PRIORITY_SPEAKER",
          "init": {
            "repr": "256",
            "kind": "literal",
            "literal": {
              "kind": "number",
              "number": 256.0
            }
          },
          "jsDoc": {
            "doc": "Allows for using priority speaker in a voice channel"
          }
        },
        {
          "name": "STREAM",
          "init": {
            "repr": "512",
            "kind": "literal",
            "literal": {
              "kind": "number",
              "number": 512.0
            }
          },
          "jsDoc": {
            "doc": "Allows the user to go live"
          }
        },
        {
          "name": "VIEW_CHANNEL",
          "init": {
            "repr": "1024",
            "kind": "literal",
            "literal": {
              "kind": "number",
              "number": 1024.0
            }
          },
          "jsDoc": {
            "doc": "Allows guild members to view a channel, which includes reading messages in text channels and joining voice channels"
          }
        },
        {
          "name": "SEND_MESSAGES",
          "init": {
            "repr": "2048",
            "kind": "literal",
            "literal": {
              "kind": "number",
              "number": 2048.0
            }
          },
          "jsDoc": {
            "doc": "Allows for sending messages in a channel. (does not allow sending messages in threads)"
          }
        },
        {
          "name": "SEND_TTS_MESSAGES",
          "init": {
            "repr": "4096",
            "kind": "literal",
            "literal": {
              "kind": "number",
              "number": 4096.0
            }
          },
          "jsDoc": {
            "doc": "Allows for sending of /tts messages"
          }
        },
        {
          "name": "MANAGE_MESSAGES",
          "init": {
            "repr": "8192",
            "kind": "literal",
            "literal": {
              "kind": "number",
              "number": 8192.0
            }
          },
          "jsDoc": {
            "doc": "Allows for deletion of other users messages"
          }
        },
        {
          "name": "EMBED_LINKS",
          "init": {
            "repr": "16384",
            "kind": "literal",
            "literal": {
              "kind": "number",
              "number": 16384.0
            }
          },
          "jsDoc": {
            "doc": "Links sent by users with this permission will be auto-embedded"
          }
        },
        {
          "name": "ATTACH_FILES",
          "init": {
            "repr": "32768",
            "kind": "literal",
            "literal": {
              "kind": "number",
              "number": 32768.0
            }
          },
          "jsDoc": {
            "doc": "Allows for uploading images and files"
          }
        },
        {
          "name": "READ_MESSAGE_HISTORY",
          "init": {
            "repr": "65536",
            "kind": "literal",
            "literal": {
              "kind": "number",
              "number": 65536.0
            }
          },
          "jsDoc": {
            "doc": "Allows for reading of message history"
          }
        },
        {
          "name": "MENTION_EVERYONE",
          "init": {
            "repr": "131072",
            "kind": "literal",
            "literal": {
              "kind": "number",
              "number": 131072.0
            }
          },
          "jsDoc": {
            "doc": "Allows for using the @everyone tag to notify all users in a channel, and the @here tag to notify all online users in a channel"
          }
        },
        {
          "name": "USE_EXTERNAL_EMOJIS",
          "init": {
            "repr": "262144",
            "kind": "literal",
            "literal": {
              "kind": "number",
              "number": 262144.0
            }
          },
          "jsDoc": {
            "doc": "Allows the usage of custom emojis from other servers"
          }
        },
        {
          "name": "VIEW_GUILD_INSIGHTS",
          "init": {
            "repr": "524288",
            "kind": "literal",
            "literal": {
              "kind": "number",
              "number": 524288.0
            }
          },
          "jsDoc": {
            "doc": "Allows for viewing guild insights"
          }
        },
        {
          "name": "CONNECT",
          "init": {
            "repr": "1048576",
            "kind": "literal",
            "literal": {
              "kind": "number",
              "number": 1048576.0
            }
          },
          "jsDoc": {
            "doc": "Allows for joining of a voice channel"
          }
        },
        {
          "name": "SPEAK",
          "init": {
            "repr": "2097152",
            "kind": "literal",
            "literal": {
              "kind": "number",
              "number": 2097152.0
            }
          },
          "jsDoc": {
            "doc": "Allows for speaking in a voice channel"
          }
        },
        {
          "name": "MUTE_MEMBERS",
          "init": {
            "repr": "4194304",
            "kind": "literal",
            "literal": {
              "kind": "number",
              "number": 4194304.0
            }
          },
          "jsDoc": {
            "doc": "Allows for muting members in a voice channel"
          }
        },
        {
          "name": "DEAFEN_MEMBERS",
          "init": {
            "repr": "8388608",
            "kind": "literal",
            "literal": {
              "kind": "number",
              "number": 8388608.0
            }
          },
          "jsDoc": {
            "doc": "Allows for deafening of members in a voice channel"
          }
        },
        {
          "name": "MOVE_MEMBERS",
          "init": {
            "repr": "16777216",
            "kind": "literal",
            "literal": {
              "kind": "number",
              "number": 16777216.0
            }
          },
          "jsDoc": {
            "doc": "Allows for moving of members between voice channels"
          }
        },
        {
          "name": "USE_VAD",
          "init": {
            "repr": "33554432",
            "kind": "literal",
            "literal": {
              "kind": "number",
              "number": 33554432.0
            }
          },
          "jsDoc": {
            "doc": "Allows for using voice-activity-detection in a voice channel"
          }
        },
        {
          "name": "CHANGE_NICKNAME",
          "init": {
            "repr": "67108864",
            "kind": "literal",
            "literal": {
              "kind": "number",
              "number": 67108864.0
            }
          },
          "jsDoc": {
            "doc": "Allows for modification of own nickname"
          }
        },
        {
          "name": "MANAGE_NICKNAMES",
          "init": {
            "repr": "134217728",
            "kind": "literal",
            "literal": {
              "kind": "number",
              "number": 134217728.0
            }
          },
          "jsDoc": {
            "doc": "Allows for modification of other users nicknames"
          }
        },
        {
          "name": "MANAGE_ROLES",
          "init": {
            "repr": "268435456",
            "kind": "literal",
            "literal": {
              "kind": "number",
              "number": 268435456.0
            }
          },
          "jsDoc": {
            "doc": "Allows management and editing of roles"
          }
        },
        {
          "name": "MANAGE_WEBHOOKS",
          "init": {
            "repr": "536870912",
            "kind": "literal",
            "literal": {
              "kind": "number",
              "number": 536870912.0
            }
          },
          "jsDoc": {
            "doc": "Allows management and editing of webhooks"
          }
        },
        {
          "name": "MANAGE_EMOJIS",
          "init": {
            "repr": "1073741824",
            "kind": "literal",
            "literal": {
              "kind": "number",
              "number": 1073741824.0
            }
          },
          "jsDoc": {
            "doc": "Allows management and editing of emojis"
          }
        },
        {
          "name": "USE_SLASH_COMMANDS",
          "init": {
            "repr": "2147483648",
            "kind": "literal",
            "literal": {
              "kind": "number",
              "number": 2147483648.0
            }
          },
          "jsDoc": {
            "doc": "Allows members to use application commands in text channels"
          }
        },
        {
          "name": "REQUEST_TO_SPEAK",
          "init": {
            "repr": "4294967296",
            "kind": "literal",
            "literal": {
              "kind": "number",
              "number": 4294967296.0
            }
          },
          "jsDoc": {
            "doc": "Allows for requesting to speak in stage channels."
          }
        },
        {
          "name": "MANAGE_EVENTS",
          "init": {
            "repr": "8589934592",
            "kind": "literal",
            "literal": {
              "kind": "number",
              "number": 8589934592.0
            }
          },
          "jsDoc": {
            "doc": "Allows for creating, editing, and deleting scheduled events"
          }
        },
        {
          "name": "MANAGE_THREADS",
          "init": {
            "repr": "17179869184",
            "kind": "literal",
            "literal": {
              "kind": "number",
              "number": 17179869184.0
            }
          },
          "jsDoc": {
            "doc": "Allows for deleting and archiving threads, and viewing all private threads"
          }
        },
        {
          "name": "CREATE_PUBLIC_THREADS",
          "init": {
            "repr": "34359738368",
            "kind": "literal",
            "literal": {
              "kind": "number",
              "number": 34359738368.0
            }
          },
          "jsDoc": {
            "doc": "Allows for creating public and announcement threads"
          }
        },
        {
          "name": "CREATE_PRIVATE_THREADS",
          "init": {
            "repr": "68719476736",
            "kind": "literal",
            "literal": {
              "kind": "number",
              "number": 68719476736.0
            }
          },
          "jsDoc": {
            "doc": "Allows for creating private threads"
          }
        },
        {
          "name": "USE_EXTERNAL_STICKERS",
          "init": {
            "repr": "137438953472",
            "kind": "literal",
            "literal": {
              "kind": "number",
              "number": 137438953472.0
            }
          },
          "jsDoc": {
            "doc": "Allows the usage of custom stickers from other servers"
          }
        },
        {
          "name": "SEND_MESSAGES_IN_THREADS",
          "init": {
            "repr": "274877906944",
            "kind": "literal",
            "literal": {
              "kind": "number",
              "number": 274877906944.0
            }
          },
          "jsDoc": {
            "doc": "Allows for sending messages in threads"
          }
        },
        {
          "name": "USE_EMBEDDED_ACTIVITIES",
          "init": {
            "repr": "549755813888",
            "kind": "literal",
            "literal": {
              "kind": "number",
              "number": 549755813888.0
            }
          },
          "jsDoc": {
            "doc": "Allows for launching activities (applications with the `EMBEDDED` flag) in a voice channel."
          }
        },
        {
          "name": "MODERATE_MEMBERS",
          "init": {
            "repr": "1099511627776",
            "kind": "literal",
            "literal": {
              "kind": "number",
              "number": 1099511627776.0
            }
          },
          "jsDoc": {
            "doc": "Allows for timing out users to prevent them from sending or reacting to messages in chat and threads, and from speaking in voice and stage channels"
          }
        }
      ]
    }
  },
  {
    "kind": "typeAlias",
    "name": "PermissionStrings",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/shared.ts",
      "line": 633,
      "col": 0
    },
    "declarationKind": "export",
    "typeAliasDef": {
      "tsType": {
        "repr": "",
        "kind": "typeOperator",
        "typeOperator": {
          "operator": "keyof",
          "tsType": {
            "repr": "BitwisePermissionFlags",
            "kind": "typeQuery",
            "typeQuery": "BitwisePermissionFlags"
          }
        }
      },
      "typeParams": []
    }
  },
  {
    "kind": "enum",
    "name": "VoiceOpcodes",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/shared.ts",
      "line": 636,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "https://discord.com/developers/docs/topics/opcodes-and-status-codes#voice"
    },
    "enumDef": {
      "members": [
        {
          "name": "Identify",
          "jsDoc": {
            "doc": "Begin a voice websocket connection."
          }
        },
        {
          "name": "SelectProtocol",
          "jsDoc": {
            "doc": "Select the voice protocol."
          }
        },
        {
          "name": "Ready",
          "jsDoc": {
            "doc": "Complete the websocket handshake."
          }
        },
        {
          "name": "Heartbeat",
          "jsDoc": {
            "doc": "Keep the websocket connection alive."
          }
        },
        {
          "name": "SessionDescription",
          "jsDoc": {
            "doc": "Describe the session."
          }
        },
        {
          "name": "Speaking",
          "jsDoc": {
            "doc": "Indicate which users are speaking."
          }
        },
        {
          "name": "HeartbeatACK",
          "jsDoc": {
            "doc": "Sent to acknowledge a received client heartbeat."
          }
        },
        {
          "name": "Resume",
          "jsDoc": {
            "doc": "Resume a connection."
          }
        },
        {
          "name": "Hello",
          "jsDoc": {
            "doc": "Time to wait between sending heartbeats in milliseconds."
          }
        },
        {
          "name": "Resumed",
          "jsDoc": {
            "doc": "Acknowledge a successful session resume."
          }
        },
        {
          "name": "ClientDisconnect",
          "init": {
            "repr": "13",
            "kind": "literal",
            "literal": {
              "kind": "number",
              "number": 13.0
            }
          },
          "jsDoc": {
            "doc": "A client has disconnected from the voice channel"
          }
        }
      ]
    }
  },
  {
    "kind": "enum",
    "name": "VoiceCloseEventCodes",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/shared.ts",
      "line": 662,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "https://discord.com/developers/docs/topics/opcodes-and-status-codes#voice"
    },
    "enumDef": {
      "members": [
        {
          "name": "UnknownOpcode",
          "init": {
            "repr": "4001",
            "kind": "literal",
            "literal": {
              "kind": "number",
              "number": 4001.0
            }
          },
          "jsDoc": {
            "doc": "You sent an invalid [opcode](https://discord.com/developers/docs/topics/opcodes-and-status-codes#voice-voice-opcodes)."
          }
        },
        {
          "name": "FailedToDecodePayload",
          "jsDoc": {
            "doc": "You sent a invalid payload in your [identifying](https://discord.com/developers/docs/topics/gateway#identify) to the Gateway."
          }
        },
        {
          "name": "NotAuthenticated",
          "jsDoc": {
            "doc": "You sent a payload before [identifying](https://discord.com/developers/docs/topics/gateway#identify) with the Gateway."
          }
        },
        {
          "name": "AuthenticationFailed",
          "jsDoc": {
            "doc": "The token you sent in your [identify](https://discord.com/developers/docs/topics/gateway#identify) payload is incorrect."
          }
        },
        {
          "name": "AlreadyAuthenticated",
          "jsDoc": {
            "doc": "You sent more than one [identify](https://discord.com/developers/docs/topics/gateway#identify) payload. Stahp."
          }
        },
        {
          "name": "SessionNoLongerValid",
          "jsDoc": {
            "doc": "Your session is no longer valid."
          }
        },
        {
          "name": "SessionTimedOut",
          "init": {
            "repr": "4009",
            "kind": "literal",
            "literal": {
              "kind": "number",
              "number": 4009.0
            }
          },
          "jsDoc": {
            "doc": "Your session has timed out."
          }
        },
        {
          "name": "ServerNotFound",
          "init": {
            "repr": "4011",
            "kind": "literal",
            "literal": {
              "kind": "number",
              "number": 4011.0
            }
          },
          "jsDoc": {
            "doc": "We can't find the server you're trying to connect to."
          }
        },
        {
          "name": "UnknownProtocol",
          "jsDoc": {
            "doc": "We didn't recognize the [protocol](https://discord.com/developers/docs/topics/voice-connections#establishing-a-voice-udp-connection-example-select-protocol-payload) you sent."
          }
        },
        {
          "name": "Disconnect",
          "init": {
            "repr": "4014",
            "kind": "literal",
            "literal": {
              "kind": "number",
              "number": 4014.0
            }
          },
          "jsDoc": {
            "doc": "Channel was deleted, you were kicked, voice server changed, or the main gateway session was dropped. Should not reconnect."
          }
        },
        {
          "name": "VoiceServerCrashed",
          "jsDoc": {
            "doc": "The server crashed. Our bad! Try [resuming](https://discord.com/developers/docs/topics/voice-connections#resuming-voice-connection)."
          }
        },
        {
          "name": "UnknownEncryptionMode",
          "jsDoc": {
            "doc": "We didn't recognize your [encryption](https://discord.com/developers/docs/topics/voice-connections#encrypting-and-sending-voice)."
          }
        }
      ]
    }
  },
  {
    "kind": "enum",
    "name": "RpcErrorCodes",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/shared.ts",
      "line": 690,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "https://discord.com/developers/docs/topics/opcodes-and-status-codes#rpc"
    },
    "enumDef": {
      "members": [
        {
          "name": "UnknownError",
          "init": {
            "repr": "1000",
            "kind": "literal",
            "literal": {
              "kind": "number",
              "number": 1000.0
            }
          },
          "jsDoc": {
            "doc": "An unknown error occurred."
          }
        },
        {
          "name": "InvalidPayload",
          "init": {
            "repr": "4000",
            "kind": "literal",
            "literal": {
              "kind": "number",
              "number": 4000.0
            }
          },
          "jsDoc": {
            "doc": "You sent an invalid payload."
          }
        },
        {
          "name": "InvalidCommand",
          "init": {
            "repr": "4002",
            "kind": "literal",
            "literal": {
              "kind": "number",
              "number": 4002.0
            }
          },
          "jsDoc": {
            "doc": "Invalid command name specified."
          }
        },
        {
          "name": "InvalidGuild",
          "jsDoc": {
            "doc": "Invalid guild ID specified."
          }
        },
        {
          "name": "InvalidEvent",
          "jsDoc": {
            "doc": "Invalid event name specified."
          }
        },
        {
          "name": "InvalidChannel",
          "jsDoc": {
            "doc": "Invalid channel ID specified."
          }
        },
        {
          "name": "InvalidPermissions",
          "jsDoc": {
            "doc": "You lack permissions to access the given resource."
          }
        },
        {
          "name": "InvalidClientId",
          "jsDoc": {
            "doc": "An invalid OAuth2 application ID was used to authorize or authenticate with."
          }
        },
        {
          "name": "InvalidOrigin",
          "jsDoc": {
            "doc": "An invalid OAuth2 application origin was used to authorize or authenticate with."
          }
        },
        {
          "name": "InvalidToken",
          "jsDoc": {
            "doc": "An invalid OAuth2 token was used to authorize or authenticate with."
          }
        },
        {
          "name": "InvalidUser",
          "jsDoc": {
            "doc": "The specified user ID was invalid."
          }
        },
        {
          "name": "OAuth2Error",
          "init": {
            "repr": "5000",
            "kind": "literal",
            "literal": {
              "kind": "number",
              "number": 5000.0
            }
          },
          "jsDoc": {
            "doc": "A standard OAuth2 error occurred; check the data object for the OAuth2 error details."
          }
        },
        {
          "name": "SelectChannelTimedOut",
          "jsDoc": {
            "doc": "An asynchronous `SELECT_TEXT_CHANNEL`/`SELECT_VOICE_CHANNEL` command timed out."
          }
        },
        {
          "name": "GetGuildTimedOut",
          "jsDoc": {
            "doc": "An asynchronous `GET_GUILD` command timed out."
          }
        },
        {
          "name": "SelectVoiceForceRequired",
          "jsDoc": {
            "doc": "You tried to join a user to a voice channel but the user was already in one."
          }
        },
        {
          "name": "CaptureShortcutAlreadyListening",
          "jsDoc": {
            "doc": "You tried to capture more than one shortcut key at once."
          }
        }
      ]
    }
  },
  {
    "kind": "enum",
    "name": "RpcCloseEventCodes",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/shared.ts",
      "line": 726,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "https://discord.com/developers/docs/topics/opcodes-and-status-codes#rpc"
    },
    "enumDef": {
      "members": [
        {
          "name": "InvalidClientId",
          "init": {
            "repr": "4000",
            "kind": "literal",
            "literal": {
              "kind": "number",
              "number": 4000.0
            }
          },
          "jsDoc": {
            "doc": "You connected to the RPC server with an invalid client ID."
          }
        },
        {
          "name": "InvalidOrigin",
          "jsDoc": {
            "doc": "You connected to the RPC server with an invalid origin."
          }
        },
        {
          "name": "RateLimited",
          "jsDoc": {
            "doc": "You are being rate limited."
          }
        },
        {
          "name": "TokenRevoked",
          "jsDoc": {
            "doc": "The OAuth2 token associated with a connection was revoked, get a new one!"
          }
        },
        {
          "name": "InvalidVersion",
          "jsDoc": {
            "doc": "The RPC Server version specified in the connection string was not valid."
          }
        },
        {
          "name": "InvalidEncoding",
          "jsDoc": {
            "doc": "The encoding specified in the connection string was not valid."
          }
        }
      ]
    }
  },
  {
    "kind": "enum",
    "name": "HTTPResponseCodes",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/shared.ts",
      "line": 742,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "https://discord.com/developers/docs/topics/opcodes-and-status-codes#http"
    },
    "enumDef": {
      "members": [
        {
          "name": "Ok",
          "init": {
            "repr": "200",
            "kind": "literal",
            "literal": {
              "kind": "number",
              "number": 200.0
            }
          },
          "jsDoc": {
            "doc": "The request completed successfully."
          }
        },
        {
          "name": "Created",
          "jsDoc": {
            "doc": "The entity was created successfully."
          }
        },
        {
          "name": "NoContent",
          "init": {
            "repr": "204",
            "kind": "literal",
            "literal": {
              "kind": "number",
              "number": 204.0
            }
          },
          "jsDoc": {
            "doc": "The request completed successfully but returned no content."
          }
        },
        {
          "name": "NotModified",
          "init": {
            "repr": "304",
            "kind": "literal",
            "literal": {
              "kind": "number",
              "number": 304.0
            }
          },
          "jsDoc": {
            "doc": "The entity was not modified (no action was taken)."
          }
        },
        {
          "name": "BadRequest",
          "init": {
            "repr": "400",
            "kind": "literal",
            "literal": {
              "kind": "number",
              "number": 400.0
            }
          },
          "jsDoc": {
            "doc": "The request was improperly formatted, or the server couldn't understand it."
          }
        },
        {
          "name": "Unauthorized",
          "jsDoc": {
            "doc": "The `Authorization` header was missing or invalid."
          }
        },
        {
          "name": "Forbidden",
          "init": {
            "repr": "403",
            "kind": "literal",
            "literal": {
              "kind": "number",
              "number": 403.0
            }
          },
          "jsDoc": {
            "doc": "The `Authorization` token you passed did not have permission to the resource."
          }
        },
        {
          "name": "NotFound",
          "jsDoc": {
            "doc": "The resource at the location specified doesn't exist."
          }
        },
        {
          "name": "MethodNotAllowed",
          "jsDoc": {
            "doc": "The HTTP method used is not valid for the location specified."
          }
        },
        {
          "name": "TooManyRequests",
          "init": {
            "repr": "429",
            "kind": "literal",
            "literal": {
              "kind": "number",
              "number": 429.0
            }
          },
          "jsDoc": {
            "doc": "You are being rate limited, see [Rate Limits](https://discord.com/developers/docs/topics/rate-limits)."
          }
        },
        {
          "name": "GatewayUnavailable",
          "init": {
            "repr": "502",
            "kind": "literal",
            "literal": {
              "kind": "number",
              "number": 502.0
            }
          },
          "jsDoc": {
            "doc": "There was not a gateway available to process your request. Wait a bit and retry."
          }
        }
      ]
    }
  },
  {
    "kind": "enum",
    "name": "GatewayCloseEventCodes",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/shared.ts",
      "line": 768,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "https://discord.com/developers/docs/topics/opcodes-and-status-codes#opcodes-and-status-codes"
    },
    "enumDef": {
      "members": [
        {
          "name": "NormalClosure",
          "init": {
            "repr": "1000",
            "kind": "literal",
            "literal": {
              "kind": "number",
              "number": 1000.0
            }
          },
          "jsDoc": {
            "doc": "A normal closure of the gateway.\nYou may attempt to reconnect."
          }
        },
        {
          "name": "UnknownError",
          "init": {
            "repr": "4000",
            "kind": "literal",
            "literal": {
              "kind": "number",
              "number": 4000.0
            }
          },
          "jsDoc": {
            "doc": "We're not sure what went wrong. Try reconnecting?"
          }
        },
        {
          "name": "UnknownOpcode",
          "jsDoc": {
            "doc": "You sent an invalid [Gateway opcode](https://discord.com/developers/docs/topics/opcodes-and-status-codes#gateway-gateway-opcodes) or an invalid payload for an opcode. Don't do that!"
          }
        },
        {
          "name": "DecodeError",
          "jsDoc": {
            "doc": "You sent an invalid [payload](https://discord.com/developers/docs/topics/gateway#sending-payloads) to us. Don't do that!"
          }
        },
        {
          "name": "NotAuthenticated",
          "jsDoc": {
            "doc": "You sent us a payload prior to [identifying](https://discord.com/developers/docs/topics/gateway#identify)."
          }
        },
        {
          "name": "AuthenticationFailed",
          "jsDoc": {
            "doc": "The account token sent with your [identify payload](https://discord.com/developers/docs/topics/gateway#identify) is incorrect."
          }
        },
        {
          "name": "AlreadyAuthenticated",
          "jsDoc": {
            "doc": "You sent more than one identify payload. Don't do that!"
          }
        },
        {
          "name": "InvalidSeq",
          "init": {
            "repr": "4007",
            "kind": "literal",
            "literal": {
              "kind": "number",
              "number": 4007.0
            }
          },
          "jsDoc": {
            "doc": "The sequence sent when [resuming](https://discord.com/developers/docs/topics/gateway#resume) the session was invalid. Reconnect and start a new session."
          }
        },
        {
          "name": "RateLimited",
          "jsDoc": {
            "doc": "Woah nelly! You're sending payloads to us too quickly. Slow it down! You will be disconnected on receiving this."
          }
        },
        {
          "name": "SessionTimedOut",
          "jsDoc": {
            "doc": "Your session timed out. Reconnect and start a new one."
          }
        },
        {
          "name": "InvalidShard",
          "jsDoc": {
            "doc": "You sent us an invalid [shard when identifying](https://discord.com/developers/docs/topics/gateway#sharding)."
          }
        },
        {
          "name": "ShardingRequired",
          "jsDoc": {
            "doc": "The session would have handled too many guilds - you are required to [shard](https://discord.com/developers/docs/topics/gateway#sharding) your connection in order to connect."
          }
        },
        {
          "name": "InvalidApiVersion",
          "jsDoc": {
            "doc": "You sent an invalid version for the gateway."
          }
        },
        {
          "name": "InvalidIntents",
          "jsDoc": {
            "doc": "You sent an invalid intent for a [Gateway Intent](https://discord.com/developers/docs/topics/gateway#gateway-intents). You may have incorrectly calculated the bitwise value."
          }
        },
        {
          "name": "DisallowedIntents",
          "jsDoc": {
            "doc": "You sent a disallowed intent for a [Gateway Intent](https://discord.com/developers/docs/topics/gateway#gateway-intents). You may have tried to specify an intent that you [have not enabled or are not approved for](https://discord.com/developers/docs/topics/gateway#privileged-intents)."
          }
        }
      ]
    }
  },
  {
    "kind": "enum",
    "name": "InviteTargetTypes",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/shared.ts",
      "line": 804,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "https://discord.com/developers/docs/resources/invite#invite-object-invite-target-types"
    },
    "enumDef": {
      "members": [
        {
          "name": "Stream",
          "init": {
            "repr": "1",
            "kind": "literal",
            "literal": {
              "kind": "number",
              "number": 1.0
            }
          }
        },
        {
          "name": "EmbeddedApplication"
        }
      ]
    }
  },
  {
    "kind": "enum",
    "name": "GatewayOpcodes",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/shared.ts",
      "line": 810,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "https://discord.com/developers/docs/topics/opcodes-and-status-codes#gateway-gateway-opcodes"
    },
    "enumDef": {
      "members": [
        {
          "name": "Dispatch",
          "jsDoc": {
            "doc": "An event was dispatched."
          }
        },
        {
          "name": "Heartbeat",
          "jsDoc": {
            "doc": "Fired periodically by the client to keep the connection alive."
          }
        },
        {
          "name": "Identify",
          "jsDoc": {
            "doc": "Starts a new session during the initial handshake."
          }
        },
        {
          "name": "PresenceUpdate",
          "jsDoc": {
            "doc": "Update the client's presence."
          }
        },
        {
          "name": "VoiceStateUpdate",
          "jsDoc": {
            "doc": "Used to join/leave or move between voice channels."
          }
        },
        {
          "name": "Resume",
          "init": {
            "repr": "6",
            "kind": "literal",
            "literal": {
              "kind": "number",
              "number": 6.0
            }
          },
          "jsDoc": {
            "doc": "Resume a previous session that was disconnected."
          }
        },
        {
          "name": "Reconnect",
          "jsDoc": {
            "doc": "You should attempt to reconnect and resume immediately."
          }
        },
        {
          "name": "RequestGuildMembers",
          "jsDoc": {
            "doc": "Request information about offline guild members in a large guild."
          }
        },
        {
          "name": "InvalidSession",
          "jsDoc": {
            "doc": "The session has been invalidated. You should reconnect and identify/resume accordingly."
          }
        },
        {
          "name": "Hello",
          "jsDoc": {
            "doc": "Sent immediately after connecting, contains the `heartbeat_interval` to use."
          }
        },
        {
          "name": "HeartbeatACK",
          "jsDoc": {
            "doc": "Sent in response to receiving a heartbeat to acknowledge that it has been received."
          }
        }
      ]
    }
  },
  {
    "kind": "typeAlias",
    "name": "GatewayDispatchEventNames",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/shared.ts",
      "line": 836,
      "col": 0
    },
    "declarationKind": "export",
    "typeAliasDef": {
      "tsType": {
        "repr": "",
        "kind": "union",
        "union": [
          {
            "repr": "READY",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "READY"
            }
          },
          {
            "repr": "CHANNEL_CREATE",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "CHANNEL_CREATE"
            }
          },
          {
            "repr": "CHANNEL_DELETE",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "CHANNEL_DELETE"
            }
          },
          {
            "repr": "CHANNEL_PINS_UPDATE",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "CHANNEL_PINS_UPDATE"
            }
          },
          {
            "repr": "CHANNEL_UPDATE",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "CHANNEL_UPDATE"
            }
          },
          {
            "repr": "GUILD_BAN_ADD",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "GUILD_BAN_ADD"
            }
          },
          {
            "repr": "GUILD_BAN_REMOVE",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "GUILD_BAN_REMOVE"
            }
          },
          {
            "repr": "GUILD_CREATE",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "GUILD_CREATE"
            }
          },
          {
            "repr": "GUILD_DELETE",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "GUILD_DELETE"
            }
          },
          {
            "repr": "GUILD_EMOJIS_UPDATE",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "GUILD_EMOJIS_UPDATE"
            }
          },
          {
            "repr": "GUILD_INTEGRATIONS_UPDATE",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "GUILD_INTEGRATIONS_UPDATE"
            }
          },
          {
            "repr": "GUILD_MEMBER_ADD",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "GUILD_MEMBER_ADD"
            }
          },
          {
            "repr": "GUILD_MEMBER_REMOVE",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "GUILD_MEMBER_REMOVE"
            }
          },
          {
            "repr": "GUILD_MEMBER_UPDATE",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "GUILD_MEMBER_UPDATE"
            }
          },
          {
            "repr": "GUILD_MEMBERS_CHUNK",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "GUILD_MEMBERS_CHUNK"
            }
          },
          {
            "repr": "GUILD_ROLE_CREATE",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "GUILD_ROLE_CREATE"
            }
          },
          {
            "repr": "GUILD_ROLE_DELETE",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "GUILD_ROLE_DELETE"
            }
          },
          {
            "repr": "GUILD_ROLE_UPDATE",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "GUILD_ROLE_UPDATE"
            }
          },
          {
            "repr": "GUILD_UPDATE",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "GUILD_UPDATE"
            }
          },
          {
            "repr": "GUILD_SCHEDULED_EVENT_CREATE",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "GUILD_SCHEDULED_EVENT_CREATE"
            }
          },
          {
            "repr": "GUILD_SCHEDULED_EVENT_DELETE",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "GUILD_SCHEDULED_EVENT_DELETE"
            }
          },
          {
            "repr": "GUILD_SCHEDULED_EVENT_UPDATE",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "GUILD_SCHEDULED_EVENT_UPDATE"
            }
          },
          {
            "repr": "GUILD_SCHEDULED_EVENT_USER_ADD",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "GUILD_SCHEDULED_EVENT_USER_ADD"
            }
          },
          {
            "repr": "GUILD_SCHEDULED_EVENT_USER_REMOVE",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "GUILD_SCHEDULED_EVENT_USER_REMOVE"
            }
          },
          {
            "repr": "INTERACTION_CREATE",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "INTERACTION_CREATE"
            }
          },
          {
            "repr": "INVITE_CREATE",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "INVITE_CREATE"
            }
          },
          {
            "repr": "INVITE_DELETE",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "INVITE_DELETE"
            }
          },
          {
            "repr": "MESSAGE_CREATE",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "MESSAGE_CREATE"
            }
          },
          {
            "repr": "MESSAGE_DELETE_BULK",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "MESSAGE_DELETE_BULK"
            }
          },
          {
            "repr": "MESSAGE_DELETE",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "MESSAGE_DELETE"
            }
          },
          {
            "repr": "MESSAGE_REACTION_ADD",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "MESSAGE_REACTION_ADD"
            }
          },
          {
            "repr": "MESSAGE_REACTION_REMOVE_ALL",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "MESSAGE_REACTION_REMOVE_ALL"
            }
          },
          {
            "repr": "MESSAGE_REACTION_REMOVE_EMOJI",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "MESSAGE_REACTION_REMOVE_EMOJI"
            }
          },
          {
            "repr": "MESSAGE_REACTION_REMOVE",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "MESSAGE_REACTION_REMOVE"
            }
          },
          {
            "repr": "MESSAGE_UPDATE",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "MESSAGE_UPDATE"
            }
          },
          {
            "repr": "PRESENCE_UPDATE",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "PRESENCE_UPDATE"
            }
          },
          {
            "repr": "TYPING_START",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "TYPING_START"
            }
          },
          {
            "repr": "USER_UPDATE",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "USER_UPDATE"
            }
          },
          {
            "repr": "VOICE_SERVER_UPDATE",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "VOICE_SERVER_UPDATE"
            }
          },
          {
            "repr": "VOICE_STATE_UPDATE",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "VOICE_STATE_UPDATE"
            }
          },
          {
            "repr": "WEBHOOKS_UPDATE",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "WEBHOOKS_UPDATE"
            }
          },
          {
            "repr": "INTEGRATION_CREATE",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "INTEGRATION_CREATE"
            }
          },
          {
            "repr": "INTEGRATION_UPDATE",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "INTEGRATION_UPDATE"
            }
          },
          {
            "repr": "INTEGRATION_DELETE",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "INTEGRATION_DELETE"
            }
          },
          {
            "repr": "STAGE_INSTANCE_CREATE",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "STAGE_INSTANCE_CREATE"
            }
          },
          {
            "repr": "STAGE_INSTANCE_UPDATE",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "STAGE_INSTANCE_UPDATE"
            }
          },
          {
            "repr": "STAGE_INSTANCE_DELETE",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "STAGE_INSTANCE_DELETE"
            }
          },
          {
            "repr": "THREAD_CREATE",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "THREAD_CREATE"
            }
          },
          {
            "repr": "THREAD_UPDATE",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "THREAD_UPDATE"
            }
          },
          {
            "repr": "THREAD_DELETE",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "THREAD_DELETE"
            }
          },
          {
            "repr": "THREAD_LIST_SYNC",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "THREAD_LIST_SYNC"
            }
          },
          {
            "repr": "THREAD_MEMBERS_UPDATE",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "THREAD_MEMBERS_UPDATE"
            }
          }
        ]
      },
      "typeParams": []
    }
  },
  {
    "kind": "typeAlias",
    "name": "GatewayEventNames",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/shared.ts",
      "line": 890,
      "col": 0
    },
    "declarationKind": "export",
    "typeAliasDef": {
      "tsType": {
        "repr": "",
        "kind": "union",
        "union": [
          {
            "repr": "GatewayDispatchEventNames",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "GatewayDispatchEventNames"
            }
          },
          {
            "repr": "READY",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "READY"
            }
          },
          {
            "repr": "RESUMED",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "RESUMED"
            }
          },
          {
            "repr": "GUILD_LOADED_DD",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "GUILD_LOADED_DD"
            }
          }
        ]
      },
      "typeParams": []
    }
  },
  {
    "kind": "enum",
    "name": "GatewayIntents",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/shared.ts",
      "line": 898,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "https://discord.com/developers/docs/topics/gateway#list-of-intents"
    },
    "enumDef": {
      "members": [
        {
          "name": "Guilds",
          "jsDoc": {
            "doc": "- GUILD_CREATE\n- GUILD_DELETE\n- GUILD_ROLE_CREATE\n- GUILD_ROLE_UPDATE\n- GUILD_ROLE_DELETE\n- CHANNEL_CREATE\n- CHANNEL_UPDATE\n- CHANNEL_DELETE\n- CHANNEL_PINS_UPDATE\n- THREAD_CREATE\n- THREAD_UPDATE\n- THREAD_DELETE\n- THREAD_LIST_SYNC\n- THREAD_MEMBER_UPDATE\n- THREAD_MEMBERS_UPDATE\n- STAGE_INSTANCE_CREATE\n- STAGE_INSTANCE_UPDATE\n- STAGE_INSTANCE_DELETE"
          }
        },
        {
          "name": "GuildMembers",
          "jsDoc": {
            "doc": "- GUILD_MEMBER_ADD\n- GUILD_MEMBER_UPDATE\n- GUILD_MEMBER_REMOVE"
          }
        },
        {
          "name": "GuildBans",
          "jsDoc": {
            "doc": "- GUILD_BAN_ADD\n- GUILD_BAN_REMOVE"
          }
        },
        {
          "name": "GuildEmojis",
          "jsDoc": {
            "doc": "- GUILD_EMOJIS_UPDATE"
          }
        },
        {
          "name": "GuildIntegrations",
          "jsDoc": {
            "doc": "- GUILD_INTEGRATIONS_UPDATE\n- INTEGRATION_CREATE\n- INTEGRATION_UPDATE\n- INTEGRATION_DELETE"
          }
        },
        {
          "name": "GuildWebhooks",
          "jsDoc": {
            "doc": "Enables the following events:\n- WEBHOOKS_UPDATE"
          }
        },
        {
          "name": "GuildInvites",
          "jsDoc": {
            "doc": "- INVITE_CREATE\n- INVITE_DELETE"
          }
        },
        {
          "name": "GuildVoiceStates",
          "jsDoc": {
            "doc": "- VOICE_STATE_UPDATE"
          }
        },
        {
          "name": "GuildPresences",
          "jsDoc": {
            "doc": "- PRESENCE_UPDATE"
          }
        },
        {
          "name": "GuildMessages",
          "jsDoc": {
            "doc": "- MESSAGE_CREATE\n- MESSAGE_UPDATE\n- MESSAGE_DELETE"
          }
        },
        {
          "name": "GuildMessageReactions",
          "jsDoc": {
            "doc": "- MESSAGE_REACTION_ADD\n- MESSAGE_REACTION_REMOVE\n- MESSAGE_REACTION_REMOVE_ALL\n- MESSAGE_REACTION_REMOVE_EMOJI"
          }
        },
        {
          "name": "GuildMessageTyping",
          "jsDoc": {
            "doc": "- TYPING_START"
          }
        },
        {
          "name": "DirectMessages",
          "jsDoc": {
            "doc": "- CHANNEL_CREATE\n- MESSAGE_CREATE\n- MESSAGE_UPDATE\n- MESSAGE_DELETE\n- CHANNEL_PINS_UPDATE"
          }
        },
        {
          "name": "DirectMessageReactions",
          "jsDoc": {
            "doc": "- MESSAGE_REACTION_ADD\n- MESSAGE_REACTION_REMOVE\n- MESSAGE_REACTION_REMOVE_ALL\n- MESSAGE_REACTION_REMOVE_EMOJI"
          }
        },
        {
          "name": "DirectMessageTyping",
          "jsDoc": {
            "doc": "- TYPING_START"
          }
        },
        {
          "name": "MessageContent",
          "jsDoc": {
            "doc": "This intent will add `content` values to all message objects."
          }
        },
        {
          "name": "GuildScheduledEvents",
          "jsDoc": {
            "doc": "- GUILD_SCHEDULED_EVENT_CREATE\n- GUILD_SCHEDULED_EVENT_UPDATE\n- GUILD_SCHEDULED_EVENT_DELETE\n- GUILD_SCHEDULED_EVENT_USER_ADD this is experimental and unstable.\n- GUILD_SCHEDULED_EVENT_USER_REMOVE this is experimental and unstable."
          }
        },
        {
          "name": "AutoModerationConfiguration",
          "jsDoc": {
            "doc": "- AUTO_MODERATION_RULE_CREATE\n- AUTO_MODERATION_RULE_UPDATE\n- AUTO_MODERATION_RULE_DELETE"
          }
        },
        {
          "name": "AutoModerationExecution",
          "jsDoc": {
            "doc": "- AUTO_MODERATION_ACTION_EXECUTION"
          }
        }
      ]
    }
  },
  {
    "kind": "variable",
    "name": "Intents",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/shared.ts",
      "line": 1024,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "https://discord.com/developers/docs/topics/gateway#list-of-intents"
    },
    "variableDef": {
      "tsType": null,
      "kind": "const"
    }
  },
  {
    "kind": "typeAlias",
    "name": "Intents",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/shared.ts",
      "line": 1025,
      "col": 0
    },
    "declarationKind": "export",
    "typeAliasDef": {
      "tsType": {
        "repr": "GatewayIntents",
        "kind": "typeRef",
        "typeRef": {
          "typeParams": null,
          "typeName": "GatewayIntents"
        }
      },
      "typeParams": []
    }
  },
  {
    "kind": "enum",
    "name": "InteractionResponseTypes",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/shared.ts",
      "line": 1028,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "https://discord.com/developers/docs/interactions/slash-commands#interaction-response-interactionresponsetype"
    },
    "enumDef": {
      "members": [
        {
          "name": "Pong",
          "init": {
            "repr": "1",
            "kind": "literal",
            "literal": {
              "kind": "number",
              "number": 1.0
            }
          },
          "jsDoc": {
            "doc": "ACK a `Ping`"
          }
        },
        {
          "name": "ChannelMessageWithSource",
          "init": {
            "repr": "4",
            "kind": "literal",
            "literal": {
              "kind": "number",
              "number": 4.0
            }
          },
          "jsDoc": {
            "doc": "Respond to an interaction with a message"
          }
        },
        {
          "name": "DeferredChannelMessageWithSource",
          "init": {
            "repr": "5",
            "kind": "literal",
            "literal": {
              "kind": "number",
              "number": 5.0
            }
          },
          "jsDoc": {
            "doc": "ACK an interaction and edit a response later, the user sees a loading state"
          }
        },
        {
          "name": "DeferredUpdateMessage",
          "init": {
            "repr": "6",
            "kind": "literal",
            "literal": {
              "kind": "number",
              "number": 6.0
            }
          },
          "jsDoc": {
            "doc": "For components, ACK an interaction and edit the original message later; the user does not see a loading state"
          }
        },
        {
          "name": "UpdateMessage",
          "init": {
            "repr": "7",
            "kind": "literal",
            "literal": {
              "kind": "number",
              "number": 7.0
            }
          },
          "jsDoc": {
            "doc": "For components, edit the message the component was attached to"
          }
        },
        {
          "name": "ApplicationCommandAutocompleteResult",
          "init": {
            "repr": "8",
            "kind": "literal",
            "literal": {
              "kind": "number",
              "number": 8.0
            }
          },
          "jsDoc": {
            "doc": "For Application Command Options, send an autocomplete result"
          }
        },
        {
          "name": "Modal",
          "init": {
            "repr": "9",
            "kind": "literal",
            "literal": {
              "kind": "number",
              "number": 9.0
            }
          },
          "jsDoc": {
            "doc": "For Command or Component interactions, send a Modal response"
          }
        }
      ]
    }
  },
  {
    "kind": "enum",
    "name": "Errors",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/shared.ts",
      "line": 1045,
      "col": 0
    },
    "declarationKind": "export",
    "enumDef": {
      "members": [
        {
          "name": "BOTS_HIGHEST_ROLE_TOO_LOW",
          "init": {
            "repr": "BOTS_HIGHEST_ROLE_TOO_LOW",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "BOTS_HIGHEST_ROLE_TOO_LOW"
            }
          }
        },
        {
          "name": "CHANNEL_NOT_FOUND",
          "init": {
            "repr": "CHANNEL_NOT_FOUND",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "CHANNEL_NOT_FOUND"
            }
          }
        },
        {
          "name": "CHANNEL_NOT_IN_GUILD",
          "init": {
            "repr": "CHANNEL_NOT_IN_GUILD",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "CHANNEL_NOT_IN_GUILD"
            }
          }
        },
        {
          "name": "CHANNEL_NOT_TEXT_BASED",
          "init": {
            "repr": "CHANNEL_NOT_TEXT_BASED",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "CHANNEL_NOT_TEXT_BASED"
            }
          }
        },
        {
          "name": "CHANNEL_NOT_STAGE_VOICE",
          "init": {
            "repr": "CHANNEL_NOT_STAGE_VOICE",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "CHANNEL_NOT_STAGE_VOICE"
            }
          }
        },
        {
          "name": "MESSAGE_MAX_LENGTH",
          "init": {
            "repr": "MESSAGE_MAX_LENGTH",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "MESSAGE_MAX_LENGTH"
            }
          }
        },
        {
          "name": "RULES_CHANNEL_CANNOT_BE_DELETED",
          "init": {
            "repr": "RULES_CHANNEL_CANNOT_BE_DELETED",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "RULES_CHANNEL_CANNOT_BE_DELETED"
            }
          }
        },
        {
          "name": "UPDATES_CHANNEL_CANNOT_BE_DELETED",
          "init": {
            "repr": "UPDATES_CHANNEL_CANNOT_BE_DELETED",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "UPDATES_CHANNEL_CANNOT_BE_DELETED"
            }
          }
        },
        {
          "name": "INVALID_TOPIC_LENGTH",
          "init": {
            "repr": "INVALID_TOPIC_LENGTH",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "INVALID_TOPIC_LENGTH"
            }
          }
        },
        {
          "name": "GUILD_NOT_DISCOVERABLE",
          "init": {
            "repr": "GUILD_NOT_DISCOVERABLE",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "GUILD_NOT_DISCOVERABLE"
            }
          }
        },
        {
          "name": "GUILD_WIDGET_NOT_ENABLED",
          "init": {
            "repr": "GUILD_WIDGET_NOT_ENABLED",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "GUILD_WIDGET_NOT_ENABLED"
            }
          }
        },
        {
          "name": "GUILD_NOT_FOUND",
          "init": {
            "repr": "GUILD_NOT_FOUND",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "GUILD_NOT_FOUND"
            }
          }
        },
        {
          "name": "MEMBER_NOT_FOUND",
          "init": {
            "repr": "MEMBER_NOT_FOUND",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "MEMBER_NOT_FOUND"
            }
          }
        },
        {
          "name": "MEMBER_NOT_IN_VOICE_CHANNEL",
          "init": {
            "repr": "MEMBER_NOT_IN_VOICE_CHANNEL",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "MEMBER_NOT_IN_VOICE_CHANNEL"
            }
          }
        },
        {
          "name": "MEMBER_SEARCH_LIMIT_TOO_HIGH",
          "init": {
            "repr": "MEMBER_SEARCH_LIMIT_TOO_HIGH",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "MEMBER_SEARCH_LIMIT_TOO_HIGH"
            }
          }
        },
        {
          "name": "MEMBER_SEARCH_LIMIT_TOO_LOW",
          "init": {
            "repr": "MEMBER_SEARCH_LIMIT_TOO_LOW",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "MEMBER_SEARCH_LIMIT_TOO_LOW"
            }
          }
        },
        {
          "name": "PRUNE_MAX_DAYS",
          "init": {
            "repr": "PRUNE_MAX_DAYS",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "PRUNE_MAX_DAYS"
            }
          }
        },
        {
          "name": "ROLE_NOT_FOUND",
          "init": {
            "repr": "ROLE_NOT_FOUND",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "ROLE_NOT_FOUND"
            }
          }
        },
        {
          "name": "INVALID_THREAD_PARENT_CHANNEL_TYPE",
          "init": {
            "repr": "INVALID_THREAD_PARENT_CHANNEL_TYPE",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "INVALID_THREAD_PARENT_CHANNEL_TYPE"
            }
          }
        },
        {
          "name": "GUILD_NEWS_CHANNEL_ONLY_SUPPORT_PUBLIC_THREADS",
          "init": {
            "repr": "GUILD_NEWS_CHANNEL_ONLY_SUPPORT_PUBLIC_THREADS",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "GUILD_NEWS_CHANNEL_ONLY_SUPPORT_PUBLIC_THREADS"
            }
          }
        },
        {
          "name": "NOT_A_THREAD_CHANNEL",
          "init": {
            "repr": "NOT_A_THREAD_CHANNEL",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "NOT_A_THREAD_CHANNEL"
            }
          }
        },
        {
          "name": "MISSING_MANAGE_THREADS_AND_NOT_MEMBER",
          "init": {
            "repr": "MISSING_MANAGE_THREADS_AND_NOT_MEMBER",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "MISSING_MANAGE_THREADS_AND_NOT_MEMBER"
            }
          }
        },
        {
          "name": "CANNOT_GET_MEMBERS_OF_AN_UNJOINED_PRIVATE_THREAD",
          "init": {
            "repr": "CANNOT_GET_MEMBERS_OF_AN_UNJOINED_PRIVATE_THREAD",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "CANNOT_GET_MEMBERS_OF_AN_UNJOINED_PRIVATE_THREAD"
            }
          }
        },
        {
          "name": "HAVE_TO_BE_THE_CREATOR_OF_THE_THREAD_OR_HAVE_MANAGE_THREADS_TO_REMOVE_MEMBERS",
          "init": {
            "repr": "HAVE_TO_BE_THE_CREATOR_OF_THE_THREAD_OR_HAVE_MANAGE_THREADS_TO_REMOVE_MEMBERS",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "HAVE_TO_BE_THE_CREATOR_OF_THE_THREAD_OR_HAVE_MANAGE_THREADS_TO_REMOVE_MEMBERS"
            }
          }
        },
        {
          "name": "INVALID_GET_MESSAGES_LIMIT",
          "init": {
            "repr": "INVALID_GET_MESSAGES_LIMIT",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "INVALID_GET_MESSAGES_LIMIT"
            }
          }
        },
        {
          "name": "DELETE_MESSAGES_MIN",
          "init": {
            "repr": "DELETE_MESSAGES_MIN",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "DELETE_MESSAGES_MIN"
            }
          }
        },
        {
          "name": "PRUNE_MIN_DAYS",
          "init": {
            "repr": "PRUNE_MIN_DAYS",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "PRUNE_MIN_DAYS"
            }
          }
        },
        {
          "name": "INVALID_SLASH_DESCRIPTION",
          "init": {
            "repr": "INVALID_SLASH_DESCRIPTION",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "INVALID_SLASH_DESCRIPTION"
            }
          }
        },
        {
          "name": "INVALID_SLASH_NAME",
          "init": {
            "repr": "INVALID_SLASH_NAME",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "INVALID_SLASH_NAME"
            }
          }
        },
        {
          "name": "INVALID_SLASH_OPTIONS",
          "init": {
            "repr": "INVALID_SLASH_OPTIONS",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "INVALID_SLASH_OPTIONS"
            }
          }
        },
        {
          "name": "INVALID_SLASH_OPTIONS_CHOICES",
          "init": {
            "repr": "INVALID_SLASH_OPTIONS_CHOICES",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "INVALID_SLASH_OPTIONS_CHOICES"
            }
          }
        },
        {
          "name": "TOO_MANY_SLASH_OPTIONS",
          "init": {
            "repr": "TOO_MANY_SLASH_OPTIONS",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "TOO_MANY_SLASH_OPTIONS"
            }
          }
        },
        {
          "name": "INVALID_SLASH_OPTION_CHOICE_NAME",
          "init": {
            "repr": "INVALID_SLASH_OPTION_CHOICE_NAME",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "INVALID_SLASH_OPTION_CHOICE_NAME"
            }
          }
        },
        {
          "name": "INVALID_SLASH_OPTIONS_CHOICE_VALUE_TYPE",
          "init": {
            "repr": "INVALID_SLASH_OPTIONS_CHOICE_VALUE_TYPE",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "INVALID_SLASH_OPTIONS_CHOICE_VALUE_TYPE"
            }
          }
        },
        {
          "name": "TOO_MANY_SLASH_OPTION_CHOICES",
          "init": {
            "repr": "TOO_MANY_SLASH_OPTION_CHOICES",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "TOO_MANY_SLASH_OPTION_CHOICES"
            }
          }
        },
        {
          "name": "ONLY_STRING_OR_INTEGER_OPTIONS_CAN_HAVE_CHOICES",
          "init": {
            "repr": "ONLY_STRING_OR_INTEGER_OPTIONS_CAN_HAVE_CHOICES",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "ONLY_STRING_OR_INTEGER_OPTIONS_CAN_HAVE_CHOICES"
            }
          }
        },
        {
          "name": "INVALID_SLASH_OPTION_NAME",
          "init": {
            "repr": "INVALID_SLASH_OPTION_NAME",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "INVALID_SLASH_OPTION_NAME"
            }
          }
        },
        {
          "name": "INVALID_SLASH_OPTION_DESCRIPTION",
          "init": {
            "repr": "INVALID_SLASH_OPTION_DESCRIPTION",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "INVALID_SLASH_OPTION_DESCRIPTION"
            }
          }
        },
        {
          "name": "INVALID_CONTEXT_MENU_COMMAND_NAME",
          "init": {
            "repr": "INVALID_CONTEXT_MENU_COMMAND_NAME",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "INVALID_CONTEXT_MENU_COMMAND_NAME"
            }
          }
        },
        {
          "name": "INVALID_CONTEXT_MENU_COMMAND_DESCRIPTION",
          "init": {
            "repr": "INVALID_CONTEXT_MENU_COMMAND_DESCRIPTION",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "INVALID_CONTEXT_MENU_COMMAND_DESCRIPTION"
            }
          }
        },
        {
          "name": "INVALID_WEBHOOK_NAME",
          "init": {
            "repr": "INVALID_WEBHOOK_NAME",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "INVALID_WEBHOOK_NAME"
            }
          }
        },
        {
          "name": "INVALID_WEBHOOK_OPTIONS",
          "init": {
            "repr": "INVALID_WEBHOOK_OPTIONS",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "INVALID_WEBHOOK_OPTIONS"
            }
          }
        },
        {
          "name": "MISSING_ADD_REACTIONS",
          "init": {
            "repr": "MISSING_ADD_REACTIONS",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "MISSING_ADD_REACTIONS"
            }
          }
        },
        {
          "name": "MISSING_ADMINISTRATOR",
          "init": {
            "repr": "MISSING_ADMINISTRATOR",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "MISSING_ADMINISTRATOR"
            }
          }
        },
        {
          "name": "MISSING_ATTACH_FILES",
          "init": {
            "repr": "MISSING_ATTACH_FILES",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "MISSING_ATTACH_FILES"
            }
          }
        },
        {
          "name": "MISSING_BAN_MEMBERS",
          "init": {
            "repr": "MISSING_BAN_MEMBERS",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "MISSING_BAN_MEMBERS"
            }
          }
        },
        {
          "name": "MISSING_CHANGE_NICKNAME",
          "init": {
            "repr": "MISSING_CHANGE_NICKNAME",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "MISSING_CHANGE_NICKNAME"
            }
          }
        },
        {
          "name": "MISSING_CONNECT",
          "init": {
            "repr": "MISSING_CONNECT",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "MISSING_CONNECT"
            }
          }
        },
        {
          "name": "MISSING_CREATE_INSTANT_INVITE",
          "init": {
            "repr": "MISSING_CREATE_INSTANT_INVITE",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "MISSING_CREATE_INSTANT_INVITE"
            }
          }
        },
        {
          "name": "MISSING_DEAFEN_MEMBERS",
          "init": {
            "repr": "MISSING_DEAFEN_MEMBERS",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "MISSING_DEAFEN_MEMBERS"
            }
          }
        },
        {
          "name": "MISSING_EMBED_LINKS",
          "init": {
            "repr": "MISSING_EMBED_LINKS",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "MISSING_EMBED_LINKS"
            }
          }
        },
        {
          "name": "MISSING_INTENT_GUILD_MEMBERS",
          "init": {
            "repr": "MISSING_INTENT_GUILD_MEMBERS",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "MISSING_INTENT_GUILD_MEMBERS"
            }
          }
        },
        {
          "name": "MISSING_KICK_MEMBERS",
          "init": {
            "repr": "MISSING_KICK_MEMBERS",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "MISSING_KICK_MEMBERS"
            }
          }
        },
        {
          "name": "MISSING_MANAGE_CHANNELS",
          "init": {
            "repr": "MISSING_MANAGE_CHANNELS",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "MISSING_MANAGE_CHANNELS"
            }
          }
        },
        {
          "name": "MISSING_MANAGE_EMOJIS",
          "init": {
            "repr": "MISSING_MANAGE_EMOJIS",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "MISSING_MANAGE_EMOJIS"
            }
          }
        },
        {
          "name": "MISSING_MANAGE_GUILD",
          "init": {
            "repr": "MISSING_MANAGE_GUILD",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "MISSING_MANAGE_GUILD"
            }
          }
        },
        {
          "name": "MISSING_MANAGE_MESSAGES",
          "init": {
            "repr": "MISSING_MANAGE_MESSAGES",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "MISSING_MANAGE_MESSAGES"
            }
          }
        },
        {
          "name": "MISSING_MANAGE_NICKNAMES",
          "init": {
            "repr": "MISSING_MANAGE_NICKNAMES",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "MISSING_MANAGE_NICKNAMES"
            }
          }
        },
        {
          "name": "MISSING_MANAGE_ROLES",
          "init": {
            "repr": "MISSING_MANAGE_ROLES",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "MISSING_MANAGE_ROLES"
            }
          }
        },
        {
          "name": "MISSING_MANAGE_WEBHOOKS",
          "init": {
            "repr": "MISSING_MANAGE_WEBHOOKS",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "MISSING_MANAGE_WEBHOOKS"
            }
          }
        },
        {
          "name": "MISSING_MENTION_EVERYONE",
          "init": {
            "repr": "MISSING_MENTION_EVERYONE",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "MISSING_MENTION_EVERYONE"
            }
          }
        },
        {
          "name": "MISSING_MOVE_MEMBERS",
          "init": {
            "repr": "MISSING_MOVE_MEMBERS",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "MISSING_MOVE_MEMBERS"
            }
          }
        },
        {
          "name": "MISSING_MUTE_MEMBERS",
          "init": {
            "repr": "MISSING_MUTE_MEMBERS",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "MISSING_MUTE_MEMBERS"
            }
          }
        },
        {
          "name": "MISSING_PRIORITY_SPEAKER",
          "init": {
            "repr": "MISSING_PRIORITY_SPEAKER",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "MISSING_PRIORITY_SPEAKER"
            }
          }
        },
        {
          "name": "MISSING_READ_MESSAGE_HISTORY",
          "init": {
            "repr": "MISSING_READ_MESSAGE_HISTORY",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "MISSING_READ_MESSAGE_HISTORY"
            }
          }
        },
        {
          "name": "MISSING_SEND_MESSAGES",
          "init": {
            "repr": "MISSING_SEND_MESSAGES",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "MISSING_SEND_MESSAGES"
            }
          }
        },
        {
          "name": "MISSING_SEND_TTS_MESSAGES",
          "init": {
            "repr": "MISSING_SEND_TTS_MESSAGES",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "MISSING_SEND_TTS_MESSAGES"
            }
          }
        },
        {
          "name": "MISSING_SPEAK",
          "init": {
            "repr": "MISSING_SPEAK",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "MISSING_SPEAK"
            }
          }
        },
        {
          "name": "MISSING_STREAM",
          "init": {
            "repr": "MISSING_STREAM",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "MISSING_STREAM"
            }
          }
        },
        {
          "name": "MISSING_USE_VAD",
          "init": {
            "repr": "MISSING_USE_VAD",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "MISSING_USE_VAD"
            }
          }
        },
        {
          "name": "MISSING_USE_EXTERNAL_EMOJIS",
          "init": {
            "repr": "MISSING_USE_EXTERNAL_EMOJIS",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "MISSING_USE_EXTERNAL_EMOJIS"
            }
          }
        },
        {
          "name": "MISSING_VIEW_AUDIT_LOG",
          "init": {
            "repr": "MISSING_VIEW_AUDIT_LOG",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "MISSING_VIEW_AUDIT_LOG"
            }
          }
        },
        {
          "name": "MISSING_VIEW_CHANNEL",
          "init": {
            "repr": "MISSING_VIEW_CHANNEL",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "MISSING_VIEW_CHANNEL"
            }
          }
        },
        {
          "name": "MISSING_VIEW_GUILD_INSIGHTS",
          "init": {
            "repr": "MISSING_VIEW_GUILD_INSIGHTS",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "MISSING_VIEW_GUILD_INSIGHTS"
            }
          }
        },
        {
          "name": "NICKNAMES_MAX_LENGTH",
          "init": {
            "repr": "NICKNAMES_MAX_LENGTH",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "NICKNAMES_MAX_LENGTH"
            }
          }
        },
        {
          "name": "USERNAME_INVALID_CHARACTER",
          "init": {
            "repr": "USERNAME_INVALID_CHARACTER",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "USERNAME_INVALID_CHARACTER"
            }
          }
        },
        {
          "name": "USERNAME_INVALID_USERNAME",
          "init": {
            "repr": "USERNAME_INVALID_USERNAME",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "USERNAME_INVALID_USERNAME"
            }
          }
        },
        {
          "name": "USERNAME_MAX_LENGTH",
          "init": {
            "repr": "USERNAME_MAX_LENGTH",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "USERNAME_MAX_LENGTH"
            }
          }
        },
        {
          "name": "USERNAME_MIN_LENGTH",
          "init": {
            "repr": "USERNAME_MIN_LENGTH",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "USERNAME_MIN_LENGTH"
            }
          }
        },
        {
          "name": "NONCE_TOO_LONG",
          "init": {
            "repr": "NONCE_TOO_LONG",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "NONCE_TOO_LONG"
            }
          }
        },
        {
          "name": "INVITE_MAX_AGE_INVALID",
          "init": {
            "repr": "INVITE_MAX_AGE_INVALID",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "INVITE_MAX_AGE_INVALID"
            }
          }
        },
        {
          "name": "INVITE_MAX_USES_INVALID",
          "init": {
            "repr": "INVITE_MAX_USES_INVALID",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "INVITE_MAX_USES_INVALID"
            }
          }
        },
        {
          "name": "RATE_LIMIT_RETRY_MAXED",
          "init": {
            "repr": "RATE_LIMIT_RETRY_MAXED",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "RATE_LIMIT_RETRY_MAXED"
            }
          }
        },
        {
          "name": "REQUEST_CLIENT_ERROR",
          "init": {
            "repr": "REQUEST_CLIENT_ERROR",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "REQUEST_CLIENT_ERROR"
            }
          }
        },
        {
          "name": "REQUEST_SERVER_ERROR",
          "init": {
            "repr": "REQUEST_SERVER_ERROR",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "REQUEST_SERVER_ERROR"
            }
          }
        },
        {
          "name": "REQUEST_UNKNOWN_ERROR",
          "init": {
            "repr": "REQUEST_UNKNOWN_ERROR",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "REQUEST_UNKNOWN_ERROR"
            }
          }
        },
        {
          "name": "TOO_MANY_COMPONENTS",
          "init": {
            "repr": "TOO_MANY_COMPONENTS",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "TOO_MANY_COMPONENTS"
            }
          }
        },
        {
          "name": "TOO_MANY_ACTION_ROWS",
          "init": {
            "repr": "TOO_MANY_ACTION_ROWS",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "TOO_MANY_ACTION_ROWS"
            }
          }
        },
        {
          "name": "LINK_BUTTON_CANNOT_HAVE_CUSTOM_ID",
          "init": {
            "repr": "LINK_BUTTON_CANNOT_HAVE_CUSTOM_ID",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "LINK_BUTTON_CANNOT_HAVE_CUSTOM_ID"
            }
          }
        },
        {
          "name": "COMPONENT_LABEL_TOO_BIG",
          "init": {
            "repr": "COMPONENT_LABEL_TOO_BIG",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "COMPONENT_LABEL_TOO_BIG"
            }
          }
        },
        {
          "name": "COMPONENT_CUSTOM_ID_TOO_BIG",
          "init": {
            "repr": "COMPONENT_CUSTOM_ID_TOO_BIG",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "COMPONENT_CUSTOM_ID_TOO_BIG"
            }
          }
        },
        {
          "name": "BUTTON_REQUIRES_CUSTOM_ID",
          "init": {
            "repr": "BUTTON_REQUIRES_CUSTOM_ID",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "BUTTON_REQUIRES_CUSTOM_ID"
            }
          }
        },
        {
          "name": "COMPONENT_SELECT_MUST_BE_ALONE",
          "init": {
            "repr": "COMPONENT_SELECT_MUST_BE_ALONE",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "COMPONENT_SELECT_MUST_BE_ALONE"
            }
          }
        },
        {
          "name": "COMPONENT_PLACEHOLDER_TOO_BIG",
          "init": {
            "repr": "COMPONENT_PLACEHOLDER_TOO_BIG",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "COMPONENT_PLACEHOLDER_TOO_BIG"
            }
          }
        },
        {
          "name": "COMPONENT_SELECT_MIN_VALUE_TOO_LOW",
          "init": {
            "repr": "COMPONENT_SELECT_MIN_VALUE_TOO_LOW",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "COMPONENT_SELECT_MIN_VALUE_TOO_LOW"
            }
          }
        },
        {
          "name": "COMPONENT_SELECT_MIN_VALUE_TOO_MANY",
          "init": {
            "repr": "COMPONENT_SELECT_MIN_VALUE_TOO_MANY",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "COMPONENT_SELECT_MIN_VALUE_TOO_MANY"
            }
          }
        },
        {
          "name": "COMPONENT_SELECT_MAX_VALUE_TOO_LOW",
          "init": {
            "repr": "COMPONENT_SELECT_MAX_VALUE_TOO_LOW",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "COMPONENT_SELECT_MAX_VALUE_TOO_LOW"
            }
          }
        },
        {
          "name": "COMPONENT_SELECT_MAX_VALUE_TOO_MANY",
          "init": {
            "repr": "COMPONENT_SELECT_MAX_VALUE_TOO_MANY",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "COMPONENT_SELECT_MAX_VALUE_TOO_MANY"
            }
          }
        },
        {
          "name": "COMPONENT_SELECT_OPTIONS_TOO_LOW",
          "init": {
            "repr": "COMPONENT_SELECT_OPTIONS_TOO_LOW",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "COMPONENT_SELECT_OPTIONS_TOO_LOW"
            }
          }
        },
        {
          "name": "COMPONENT_SELECT_OPTIONS_TOO_MANY",
          "init": {
            "repr": "COMPONENT_SELECT_OPTIONS_TOO_MANY",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "COMPONENT_SELECT_OPTIONS_TOO_MANY"
            }
          }
        },
        {
          "name": "SELECT_OPTION_LABEL_TOO_BIG",
          "init": {
            "repr": "SELECT_OPTION_LABEL_TOO_BIG",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "SELECT_OPTION_LABEL_TOO_BIG"
            }
          }
        },
        {
          "name": "SELECT_OPTION_VALUE_TOO_BIG",
          "init": {
            "repr": "SELECT_OPTION_VALUE_TOO_BIG",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "SELECT_OPTION_VALUE_TOO_BIG"
            }
          }
        },
        {
          "name": "SELECT_OPTION_TOO_MANY_DEFAULTS",
          "init": {
            "repr": "SELECT_OPTION_TOO_MANY_DEFAULTS",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "SELECT_OPTION_TOO_MANY_DEFAULTS"
            }
          }
        },
        {
          "name": "COMPONENT_SELECT_MIN_HIGHER_THAN_MAX",
          "init": {
            "repr": "COMPONENT_SELECT_MIN_HIGHER_THAN_MAX",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "COMPONENT_SELECT_MIN_HIGHER_THAN_MAX"
            }
          }
        },
        {
          "name": "CANNOT_ADD_USER_TO_ARCHIVED_THREADS",
          "init": {
            "repr": "CANNOT_ADD_USER_TO_ARCHIVED_THREADS",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "CANNOT_ADD_USER_TO_ARCHIVED_THREADS"
            }
          }
        },
        {
          "name": "CANNOT_LEAVE_ARCHIVED_THREAD",
          "init": {
            "repr": "CANNOT_LEAVE_ARCHIVED_THREAD",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "CANNOT_LEAVE_ARCHIVED_THREAD"
            }
          }
        },
        {
          "name": "CANNOT_REMOVE_FROM_ARCHIVED_THREAD",
          "init": {
            "repr": "CANNOT_REMOVE_FROM_ARCHIVED_THREAD",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "CANNOT_REMOVE_FROM_ARCHIVED_THREAD"
            }
          }
        },
        {
          "name": "YOU_CAN_NOT_DM_THE_BOT_ITSELF",
          "init": {
            "repr": "YOU_CAN_NOT_DM_THE_BOT_ITSELF",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "YOU_CAN_NOT_DM_THE_BOT_ITSELF"
            }
          }
        }
      ]
    }
  },
  {
    "kind": "enum",
    "name": "Locales",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/shared.ts",
      "line": 1169,
      "col": 0
    },
    "declarationKind": "export",
    "enumDef": {
      "members": [
        {
          "name": "Danish",
          "init": {
            "repr": "da",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "da"
            }
          }
        },
        {
          "name": "German",
          "init": {
            "repr": "de",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "de"
            }
          }
        },
        {
          "name": "EnglishUk",
          "init": {
            "repr": "en-GB",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "en-GB"
            }
          }
        },
        {
          "name": "EnglishUs",
          "init": {
            "repr": "en-US",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "en-US"
            }
          }
        },
        {
          "name": "Spanish",
          "init": {
            "repr": "es-ES",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "es-ES"
            }
          }
        },
        {
          "name": "French",
          "init": {
            "repr": "fr",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "fr"
            }
          }
        },
        {
          "name": "Croatian",
          "init": {
            "repr": "hr",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "hr"
            }
          }
        },
        {
          "name": "Italian",
          "init": {
            "repr": "it",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "it"
            }
          }
        },
        {
          "name": "Lithuanian",
          "init": {
            "repr": "lt",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "lt"
            }
          }
        },
        {
          "name": "Hungarian",
          "init": {
            "repr": "hu",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "hu"
            }
          }
        },
        {
          "name": "Dutch",
          "init": {
            "repr": "nl",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "nl"
            }
          }
        },
        {
          "name": "Norwegian",
          "init": {
            "repr": "no",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "no"
            }
          }
        },
        {
          "name": "Polish",
          "init": {
            "repr": "pl",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "pl"
            }
          }
        },
        {
          "name": "PortugueseBrazilian",
          "init": {
            "repr": "pt-BR",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "pt-BR"
            }
          }
        },
        {
          "name": "RomanianRomania",
          "init": {
            "repr": "ro",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "ro"
            }
          }
        },
        {
          "name": "Finnish",
          "init": {
            "repr": "fi",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "fi"
            }
          }
        },
        {
          "name": "Swedish",
          "init": {
            "repr": "sv-SE",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "sv-SE"
            }
          }
        },
        {
          "name": "Vietnamese",
          "init": {
            "repr": "vi",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "vi"
            }
          }
        },
        {
          "name": "Turkish",
          "init": {
            "repr": "tr",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "tr"
            }
          }
        },
        {
          "name": "Czech",
          "init": {
            "repr": "cs",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "cs"
            }
          }
        },
        {
          "name": "Greek",
          "init": {
            "repr": "el",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "el"
            }
          }
        },
        {
          "name": "Bulgarian",
          "init": {
            "repr": "bg",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "bg"
            }
          }
        },
        {
          "name": "Russian",
          "init": {
            "repr": "ru",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "ru"
            }
          }
        },
        {
          "name": "Ukrainian",
          "init": {
            "repr": "uk",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "uk"
            }
          }
        },
        {
          "name": "Hindi",
          "init": {
            "repr": "hi",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "hi"
            }
          }
        },
        {
          "name": "Thai",
          "init": {
            "repr": "th",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "th"
            }
          }
        },
        {
          "name": "ChineseChina",
          "init": {
            "repr": "zh-CN",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "zh-CN"
            }
          }
        },
        {
          "name": "Japanese",
          "init": {
            "repr": "ja",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "ja"
            }
          }
        },
        {
          "name": "ChineseTaiwan",
          "init": {
            "repr": "zh-TW",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "zh-TW"
            }
          }
        },
        {
          "name": "Korean",
          "init": {
            "repr": "ko",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "ko"
            }
          }
        }
      ]
    }
  },
  {
    "kind": "typeAlias",
    "name": "Localization",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/shared.ts",
      "line": 1202,
      "col": 0
    },
    "declarationKind": "export",
    "typeAliasDef": {
      "tsType": {
        "repr": "Partial",
        "kind": "typeRef",
        "typeRef": {
          "typeParams": [
            {
              "repr": "Record",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "Locales",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Locales"
                    }
                  },
                  {
                    "repr": "string",
                    "kind": "keyword",
                    "keyword": "string"
                  }
                ],
                "typeName": "Record"
              }
            }
          ],
          "typeName": "Partial"
        }
      },
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "FileContent",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/shared.ts",
      "line": 1204,
      "col": 0
    },
    "declarationKind": "export",
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "blob",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/shared.ts",
            "line": 1206,
            "col": 4
          },
          "jsDoc": {
            "doc": "The file blob"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "Blob",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Blob"
            }
          },
          "typeParams": []
        },
        {
          "name": "name",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/shared.ts",
            "line": 1208,
            "col": 4
          },
          "jsDoc": {
            "doc": "The name of the file"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "GatewayBot",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/shared.ts",
      "line": 1211,
      "col": 0
    },
    "declarationKind": "export",
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "url",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/shared.ts",
            "line": 1213,
            "col": 4
          },
          "jsDoc": {
            "doc": "The WSS URL that can be used for connecting to the gateway"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "shards",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/shared.ts",
            "line": 1215,
            "col": 4
          },
          "jsDoc": {
            "doc": "The recommended number of shards to use when connecting"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "sessionStartLimit",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/shared.ts",
            "line": 1217,
            "col": 4
          },
          "jsDoc": {
            "doc": "Information on the current session start limit"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "",
            "kind": "typeLiteral",
            "typeLiteral": {
              "methods": [],
              "properties": [
                {
                  "name": "total",
                  "params": [],
                  "computed": false,
                  "optional": false,
                  "tsType": {
                    "repr": "number",
                    "kind": "keyword",
                    "keyword": "number"
                  },
                  "typeParams": []
                },
                {
                  "name": "remaining",
                  "params": [],
                  "computed": false,
                  "optional": false,
                  "tsType": {
                    "repr": "number",
                    "kind": "keyword",
                    "keyword": "number"
                  },
                  "typeParams": []
                },
                {
                  "name": "resetAfter",
                  "params": [],
                  "computed": false,
                  "optional": false,
                  "tsType": {
                    "repr": "number",
                    "kind": "keyword",
                    "keyword": "number"
                  },
                  "typeParams": []
                },
                {
                  "name": "maxConcurrency",
                  "params": [],
                  "computed": false,
                  "optional": false,
                  "tsType": {
                    "repr": "number",
                    "kind": "keyword",
                    "keyword": "number"
                  },
                  "typeParams": []
                }
              ],
              "callSignatures": [],
              "indexSignatures": []
            }
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "typeAlias",
    "name": "AtLeastOne",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/shared.ts",
      "line": 1231,
      "col": 0
    },
    "declarationKind": "export",
    "typeAliasDef": {
      "tsType": {
        "repr": "",
        "kind": "intersection",
        "intersection": [
          {
            "repr": "Partial",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": [
                {
                  "repr": "T",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "T"
                  }
                }
              ],
              "typeName": "Partial"
            }
          },
          {
            "repr": "",
            "kind": "indexedAccess",
            "indexedAccess": {
              "readonly": false,
              "objType": {
                "repr": "U",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "U"
                }
              },
              "indexType": {
                "repr": "",
                "kind": "typeOperator",
                "typeOperator": {
                  "operator": "keyof",
                  "tsType": {
                    "repr": "U",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "U"
                    }
                  }
                }
              }
            }
          }
        ]
      },
      "typeParams": [
        {
          "name": "T"
        },
        {
          "name": "U",
          "default": {
            "repr": "",
            "kind": "mapped",
            "mappedType": {
              "typeParam": {
                "name": "K",
                "constraint": {
                  "repr": "",
                  "kind": "typeOperator",
                  "typeOperator": {
                    "operator": "keyof",
                    "tsType": {
                      "repr": "T",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "T"
                      }
                    }
                  }
                }
              },
              "tsType": {
                "repr": "Pick",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": [
                    {
                      "repr": "T",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "T"
                      }
                    },
                    {
                      "repr": "K",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "K"
                      }
                    }
                  ],
                  "typeName": "Pick"
                }
              }
            }
          }
        }
      ]
    }
  },
  {
    "kind": "typeAlias",
    "name": "MakeRequired",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/shared.ts",
      "line": 1232,
      "col": 0
    },
    "declarationKind": "export",
    "typeAliasDef": {
      "tsType": {
        "repr": "",
        "kind": "intersection",
        "intersection": [
          {
            "repr": "T",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "T"
            }
          },
          {
            "repr": "",
            "kind": "mapped",
            "mappedType": {
              "typeParam": {
                "name": "P",
                "constraint": {
                  "repr": "K",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "K"
                  }
                }
              },
              "optional": "-",
              "tsType": {
                "repr": "",
                "kind": "indexedAccess",
                "indexedAccess": {
                  "readonly": false,
                  "objType": {
                    "repr": "T",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "T"
                    }
                  },
                  "indexType": {
                    "repr": "P",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "P"
                    }
                  }
                }
              }
            }
          }
        ]
      },
      "typeParams": [
        {
          "name": "T"
        },
        {
          "name": "K",
          "constraint": {
            "repr": "",
            "kind": "typeOperator",
            "typeOperator": {
              "operator": "keyof",
              "tsType": {
                "repr": "T",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "T"
                }
              }
            }
          }
        }
      ]
    }
  },
  {
    "kind": "typeAlias",
    "name": "CamelCase",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/shared.ts",
      "line": 1235,
      "col": 0
    },
    "declarationKind": "export",
    "typeAliasDef": {
      "tsType": {
        "repr": "",
        "kind": "conditional",
        "conditionalType": {
          "checkType": {
            "repr": "S",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "S"
            }
          },
          "extendsType": {
            "repr": "${infer P1}_${infer P2}${infer P3}",
            "kind": "literal",
            "literal": {
              "kind": "template",
              "tsTypes": [
                {
                  "repr": "",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": ""
                  }
                },
                {
                  "repr": "",
                  "kind": "infer",
                  "infer": {
                    "typeParam": {
                      "name": "P1"
                    }
                  }
                },
                {
                  "repr": "_",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "_"
                  }
                },
                {
                  "repr": "",
                  "kind": "infer",
                  "infer": {
                    "typeParam": {
                      "name": "P2"
                    }
                  }
                },
                {
                  "repr": "",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": ""
                  }
                },
                {
                  "repr": "",
                  "kind": "infer",
                  "infer": {
                    "typeParam": {
                      "name": "P3"
                    }
                  }
                },
                {
                  "repr": "",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": ""
                  }
                }
              ]
            }
          },
          "trueType": {
            "repr": "${Lowercase<P1>}${Uppercase<P2>}${CamelCase<P3>}",
            "kind": "literal",
            "literal": {
              "kind": "template",
              "tsTypes": [
                {
                  "repr": "",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": ""
                  }
                },
                {
                  "repr": "Lowercase",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": [
                      {
                        "repr": "P1",
                        "kind": "typeRef",
                        "typeRef": {
                          "typeParams": null,
                          "typeName": "P1"
                        }
                      }
                    ],
                    "typeName": "Lowercase"
                  }
                },
                {
                  "repr": "",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": ""
                  }
                },
                {
                  "repr": "Uppercase",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": [
                      {
                        "repr": "P2",
                        "kind": "typeRef",
                        "typeRef": {
                          "typeParams": null,
                          "typeName": "P2"
                        }
                      }
                    ],
                    "typeName": "Uppercase"
                  }
                },
                {
                  "repr": "",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": ""
                  }
                },
                {
                  "repr": "CamelCase",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": [
                      {
                        "repr": "P3",
                        "kind": "typeRef",
                        "typeRef": {
                          "typeParams": null,
                          "typeName": "P3"
                        }
                      }
                    ],
                    "typeName": "CamelCase"
                  }
                },
                {
                  "repr": "",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": ""
                  }
                }
              ]
            }
          },
          "falseType": {
            "repr": "Lowercase",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": [
                {
                  "repr": "S",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "S"
                  }
                }
              ],
              "typeName": "Lowercase"
            }
          }
        }
      },
      "typeParams": [
        {
          "name": "S",
          "constraint": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          }
        }
      ]
    }
  },
  {
    "kind": "typeAlias",
    "name": "Camelize",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/shared.ts",
      "line": 1238,
      "col": 0
    },
    "declarationKind": "export",
    "typeAliasDef": {
      "tsType": {
        "repr": "",
        "kind": "mapped",
        "mappedType": {
          "typeParam": {
            "name": "K",
            "constraint": {
              "repr": "",
              "kind": "typeOperator",
              "typeOperator": {
                "operator": "keyof",
                "tsType": {
                  "repr": "T",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "T"
                  }
                }
              }
            }
          },
          "nameType": {
            "repr": "CamelCase",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": [
                {
                  "repr": "",
                  "kind": "intersection",
                  "intersection": [
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    {
                      "repr": "K",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "K"
                      }
                    }
                  ]
                }
              ],
              "typeName": "CamelCase"
            }
          },
          "tsType": {
            "repr": "",
            "kind": "conditional",
            "conditionalType": {
              "checkType": {
                "repr": "",
                "kind": "indexedAccess",
                "indexedAccess": {
                  "readonly": false,
                  "objType": {
                    "repr": "T",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "T"
                    }
                  },
                  "indexType": {
                    "repr": "K",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "K"
                    }
                  }
                }
              },
              "extendsType": {
                "repr": "Array",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": [
                    {
                      "repr": "",
                      "kind": "infer",
                      "infer": {
                        "typeParam": {
                          "name": "U"
                        }
                      }
                    }
                  ],
                  "typeName": "Array"
                }
              },
              "trueType": {
                "repr": "",
                "kind": "conditional",
                "conditionalType": {
                  "checkType": {
                    "repr": "U",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "U"
                    }
                  },
                  "extendsType": {
                    "repr": "",
                    "kind": "typeLiteral",
                    "typeLiteral": {
                      "methods": [],
                      "properties": [],
                      "callSignatures": [],
                      "indexSignatures": []
                    }
                  },
                  "trueType": {
                    "repr": "Array",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": [
                        {
                          "repr": "Camelize",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": [
                              {
                                "repr": "U",
                                "kind": "typeRef",
                                "typeRef": {
                                  "typeParams": null,
                                  "typeName": "U"
                                }
                              }
                            ],
                            "typeName": "Camelize"
                          }
                        }
                      ],
                      "typeName": "Array"
                    }
                  },
                  "falseType": {
                    "repr": "",
                    "kind": "indexedAccess",
                    "indexedAccess": {
                      "readonly": false,
                      "objType": {
                        "repr": "T",
                        "kind": "typeRef",
                        "typeRef": {
                          "typeParams": null,
                          "typeName": "T"
                        }
                      },
                      "indexType": {
                        "repr": "K",
                        "kind": "typeRef",
                        "typeRef": {
                          "typeParams": null,
                          "typeName": "K"
                        }
                      }
                    }
                  }
                }
              },
              "falseType": {
                "repr": "",
                "kind": "conditional",
                "conditionalType": {
                  "checkType": {
                    "repr": "",
                    "kind": "indexedAccess",
                    "indexedAccess": {
                      "readonly": false,
                      "objType": {
                        "repr": "T",
                        "kind": "typeRef",
                        "typeRef": {
                          "typeParams": null,
                          "typeName": "T"
                        }
                      },
                      "indexType": {
                        "repr": "K",
                        "kind": "typeRef",
                        "typeRef": {
                          "typeParams": null,
                          "typeName": "K"
                        }
                      }
                    }
                  },
                  "extendsType": {
                    "repr": "",
                    "kind": "typeLiteral",
                    "typeLiteral": {
                      "methods": [],
                      "properties": [],
                      "callSignatures": [],
                      "indexSignatures": []
                    }
                  },
                  "trueType": {
                    "repr": "Camelize",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": [
                        {
                          "repr": "",
                          "kind": "indexedAccess",
                          "indexedAccess": {
                            "readonly": false,
                            "objType": {
                              "repr": "T",
                              "kind": "typeRef",
                              "typeRef": {
                                "typeParams": null,
                                "typeName": "T"
                              }
                            },
                            "indexType": {
                              "repr": "K",
                              "kind": "typeRef",
                              "typeRef": {
                                "typeParams": null,
                                "typeName": "K"
                              }
                            }
                          }
                        }
                      ],
                      "typeName": "Camelize"
                    }
                  },
                  "falseType": {
                    "repr": "never",
                    "kind": "keyword",
                    "keyword": "never"
                  }
                }
              }
            }
          }
        }
      },
      "typeParams": [
        {
          "name": "T"
        }
      ]
    }
  },
  {
    "kind": "typeAlias",
    "name": "PickPartial",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/shared.ts",
      "line": 1245,
      "col": 0
    },
    "declarationKind": "export",
    "typeAliasDef": {
      "tsType": {
        "repr": "",
        "kind": "intersection",
        "intersection": [
          {
            "repr": "",
            "kind": "mapped",
            "mappedType": {
              "typeParam": {
                "name": "P",
                "constraint": {
                  "repr": "",
                  "kind": "typeOperator",
                  "typeOperator": {
                    "operator": "keyof",
                    "tsType": {
                      "repr": "T",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "T"
                      }
                    }
                  }
                }
              },
              "optional": true,
              "tsType": {
                "repr": "",
                "kind": "union",
                "union": [
                  {
                    "repr": "",
                    "kind": "indexedAccess",
                    "indexedAccess": {
                      "readonly": false,
                      "objType": {
                        "repr": "T",
                        "kind": "typeRef",
                        "typeRef": {
                          "typeParams": null,
                          "typeName": "T"
                        }
                      },
                      "indexType": {
                        "repr": "P",
                        "kind": "typeRef",
                        "typeRef": {
                          "typeParams": null,
                          "typeName": "P"
                        }
                      }
                    }
                  },
                  {
                    "repr": "undefined",
                    "kind": "keyword",
                    "keyword": "undefined"
                  }
                ]
              }
            }
          },
          {
            "repr": "",
            "kind": "mapped",
            "mappedType": {
              "typeParam": {
                "name": "P",
                "constraint": {
                  "repr": "K",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "K"
                  }
                }
              },
              "tsType": {
                "repr": "",
                "kind": "indexedAccess",
                "indexedAccess": {
                  "readonly": false,
                  "objType": {
                    "repr": "T",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "T"
                    }
                  },
                  "indexType": {
                    "repr": "P",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "P"
                    }
                  }
                }
              }
            }
          }
        ]
      },
      "typeParams": [
        {
          "name": "T"
        },
        {
          "name": "K",
          "constraint": {
            "repr": "",
            "kind": "typeOperator",
            "typeOperator": {
              "operator": "keyof",
              "tsType": {
                "repr": "T",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "T"
                }
              }
            }
          }
        }
      ]
    }
  },
  {
    "kind": "typeAlias",
    "name": "OmitFirstFnArg",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/types/shared.ts",
      "line": 1251,
      "col": 0
    },
    "declarationKind": "export",
    "typeAliasDef": {
      "tsType": {
        "repr": "",
        "kind": "conditional",
        "conditionalType": {
          "checkType": {
            "repr": "F",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "F"
            }
          },
          "extendsType": {
            "repr": "",
            "kind": "fnOrConstructor",
            "fnOrConstructor": {
              "constructor": false,
              "tsType": {
                "repr": "",
                "kind": "infer",
                "infer": {
                  "typeParam": {
                    "name": "R"
                  }
                }
              },
              "params": [
                {
                  "kind": "identifier",
                  "name": "x",
                  "optional": false,
                  "tsType": {
                    "repr": "any",
                    "kind": "keyword",
                    "keyword": "any"
                  }
                },
                {
                  "kind": "rest",
                  "arg": {
                    "kind": "identifier",
                    "name": "args",
                    "optional": false,
                    "tsType": null
                  },
                  "tsType": {
                    "repr": "",
                    "kind": "infer",
                    "infer": {
                      "typeParam": {
                        "name": "P"
                      }
                    }
                  }
                }
              ],
              "typeParams": []
            }
          },
          "trueType": {
            "repr": "",
            "kind": "fnOrConstructor",
            "fnOrConstructor": {
              "constructor": false,
              "tsType": {
                "repr": "R",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "R"
                }
              },
              "params": [
                {
                  "kind": "rest",
                  "arg": {
                    "kind": "identifier",
                    "name": "args",
                    "optional": false,
                    "tsType": null
                  },
                  "tsType": {
                    "repr": "P",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "P"
                    }
                  }
                }
              ],
              "typeParams": []
            }
          },
          "falseType": {
            "repr": "never",
            "kind": "keyword",
            "keyword": "never"
          }
        }
      },
      "typeParams": [
        {
          "name": "F"
        }
      ]
    }
  },
  {
    "kind": "interface",
    "name": "RestRequest",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/rest/rest.ts",
      "line": 1,
      "col": 0
    },
    "declarationKind": "export",
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "url",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/rest/rest.ts",
            "line": 2,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "method",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/rest/rest.ts",
            "line": 3,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "RequestMethod",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "RequestMethod"
            }
          },
          "typeParams": []
        },
        {
          "name": "respond",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/rest/rest.ts",
            "line": 4,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "",
            "kind": "fnOrConstructor",
            "fnOrConstructor": {
              "constructor": false,
              "tsType": {
                "repr": "unknown",
                "kind": "keyword",
                "keyword": "unknown"
              },
              "params": [
                {
                  "kind": "identifier",
                  "name": "payload",
                  "optional": false,
                  "tsType": {
                    "repr": "RestRequestResponse",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "RestRequestResponse"
                    }
                  }
                }
              ],
              "typeParams": []
            }
          },
          "typeParams": []
        },
        {
          "name": "reject",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/rest/rest.ts",
            "line": 5,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "",
            "kind": "fnOrConstructor",
            "fnOrConstructor": {
              "constructor": false,
              "tsType": {
                "repr": "unknown",
                "kind": "keyword",
                "keyword": "unknown"
              },
              "params": [
                {
                  "kind": "identifier",
                  "name": "payload",
                  "optional": false,
                  "tsType": {
                    "repr": "RestRequestRejection",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "RestRequestRejection"
                    }
                  }
                }
              ],
              "typeParams": []
            }
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "RestRequestResponse",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/rest/rest.ts",
      "line": 8,
      "col": 0
    },
    "declarationKind": "export",
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "ok",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/rest/rest.ts",
            "line": 9,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        },
        {
          "name": "status",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/rest/rest.ts",
            "line": 10,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "body",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/rest/rest.ts",
            "line": 11,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "RestRequestRejection",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/rest/rest.ts",
      "line": 14,
      "col": 0
    },
    "declarationKind": "export",
    "interfaceDef": {
      "extends": [
        {
          "repr": "RestRequestResponse",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "RestRequestResponse"
          }
        }
      ],
      "methods": [],
      "properties": [
        {
          "name": "error",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/rest/rest.ts",
            "line": 15,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "RestPayload",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/rest/rest.ts",
      "line": 18,
      "col": 0
    },
    "declarationKind": "export",
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "bucketId",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/rest/rest.ts",
            "line": 19,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "body",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/rest/rest.ts",
            "line": 20,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "Record",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": [
                {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                {
                  "repr": "unknown",
                  "kind": "keyword",
                  "keyword": "unknown"
                }
              ],
              "typeName": "Record"
            }
          },
          "typeParams": []
        },
        {
          "name": "retryCount",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/rest/rest.ts",
            "line": 21,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "headers",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/rest/rest.ts",
            "line": 22,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "Record",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": [
                {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              ],
              "typeName": "Record"
            }
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "RestRateLimitedPath",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/rest/rest.ts",
      "line": 25,
      "col": 0
    },
    "declarationKind": "export",
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "url",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/rest/rest.ts",
            "line": 26,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "resetTimestamp",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/rest/rest.ts",
            "line": 27,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "bucketId",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/rest/rest.ts",
            "line": 28,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "typeAlias",
    "name": "RequestMethod",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/rest/rest.ts",
      "line": 31,
      "col": 0
    },
    "declarationKind": "export",
    "typeAliasDef": {
      "tsType": {
        "repr": "",
        "kind": "union",
        "union": [
          {
            "repr": "GET",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "GET"
            }
          },
          {
            "repr": "POST",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "POST"
            }
          },
          {
            "repr": "PUT",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "PUT"
            }
          },
          {
            "repr": "DELETE",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "DELETE"
            }
          },
          {
            "repr": "PATCH",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "PATCH"
            }
          }
        ]
      },
      "typeParams": []
    }
  },
  {
    "kind": "function",
    "name": "runMethod",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/rest/runMethod.ts",
      "line": 5,
      "col": 0
    },
    "declarationKind": "export",
    "functionDef": {
      "params": [
        {
          "kind": "identifier",
          "name": "rest",
          "optional": false,
          "tsType": {
            "repr": "RestManager",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "RestManager"
            }
          }
        },
        {
          "kind": "identifier",
          "name": "method",
          "optional": false,
          "tsType": {
            "repr": "RequestMethod",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "RequestMethod"
            }
          }
        },
        {
          "kind": "identifier",
          "name": "route",
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          }
        },
        {
          "kind": "identifier",
          "name": "body",
          "optional": true,
          "tsType": {
            "repr": "unknown",
            "kind": "keyword",
            "keyword": "unknown"
          }
        },
        {
          "kind": "identifier",
          "name": "options",
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "typeLiteral",
            "typeLiteral": {
              "methods": [],
              "properties": [
                {
                  "name": "retryCount",
                  "params": [],
                  "computed": false,
                  "optional": true,
                  "tsType": {
                    "repr": "number",
                    "kind": "keyword",
                    "keyword": "number"
                  },
                  "typeParams": []
                },
                {
                  "name": "bucketId",
                  "params": [],
                  "computed": false,
                  "optional": true,
                  "tsType": {
                    "repr": "string",
                    "kind": "keyword",
                    "keyword": "string"
                  },
                  "typeParams": []
                },
                {
                  "name": "headers",
                  "params": [],
                  "computed": false,
                  "optional": true,
                  "tsType": {
                    "repr": "Record",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": [
                        {
                          "repr": "string",
                          "kind": "keyword",
                          "keyword": "string"
                        },
                        {
                          "repr": "string",
                          "kind": "keyword",
                          "keyword": "string"
                        }
                      ],
                      "typeName": "Record"
                    }
                  },
                  "typeParams": []
                }
              ],
              "callSignatures": [],
              "indexSignatures": []
            }
          }
        }
      ],
      "returnType": {
        "repr": "Promise",
        "kind": "typeRef",
        "typeRef": {
          "typeParams": [
            {
              "repr": "T",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "T"
              }
            }
          ],
          "typeName": "Promise"
        }
      },
      "isAsync": true,
      "isGenerator": false,
      "typeParams": [
        {
          "name": "T",
          "default": {
            "repr": "any",
            "kind": "keyword",
            "keyword": "any"
          }
        }
      ]
    }
  },
  {
    "kind": "import",
    "name": "RestManager",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/rest/runMethod.ts",
      "line": 1,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/rest/restManager.ts",
      "imported": "RestManager"
    }
  },
  {
    "kind": "import",
    "name": "API_VERSION",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/rest/runMethod.ts",
      "line": 2,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/util/constants.ts",
      "imported": "API_VERSION"
    }
  },
  {
    "kind": "import",
    "name": "BASE_URL",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/rest/runMethod.ts",
      "line": 2,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/util/constants.ts",
      "imported": "BASE_URL"
    }
  },
  {
    "kind": "import",
    "name": "baseEndpoints",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/rest/runMethod.ts",
      "line": 2,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/util/constants.ts",
      "imported": "baseEndpoints"
    }
  },
  {
    "kind": "import",
    "name": "RequestMethod",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/rest/runMethod.ts",
      "line": 3,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/rest/rest.ts",
      "imported": "RequestMethod"
    }
  },
  {
    "kind": "import",
    "name": "RestRequestRejection",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/rest/runMethod.ts",
      "line": 3,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/rest/rest.ts",
      "imported": "RestRequestRejection"
    }
  },
  {
    "kind": "import",
    "name": "RestRequestResponse",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/rest/runMethod.ts",
      "line": 3,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/rest/rest.ts",
      "imported": "RestRequestResponse"
    }
  },
  {
    "kind": "function",
    "name": "processRequest",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/rest/processRequest.ts",
      "line": 6,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "Processes a request and assigns it to a queue or creates a queue if none exists for it."
    },
    "functionDef": {
      "params": [
        {
          "kind": "identifier",
          "name": "rest",
          "optional": false,
          "tsType": {
            "repr": "RestManager",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "RestManager"
            }
          }
        },
        {
          "kind": "identifier",
          "name": "request",
          "optional": false,
          "tsType": {
            "repr": "RestRequest",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "RestRequest"
            }
          }
        },
        {
          "kind": "identifier",
          "name": "payload",
          "optional": false,
          "tsType": {
            "repr": "RestPayload",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "RestPayload"
            }
          }
        }
      ],
      "returnType": null,
      "isAsync": false,
      "isGenerator": false,
      "typeParams": []
    }
  },
  {
    "kind": "import",
    "name": "RestManager",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/rest/processRequest.ts",
      "line": 1,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/rest/restManager.ts",
      "imported": "RestManager"
    }
  },
  {
    "kind": "import",
    "name": "BASE_URL",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/rest/processRequest.ts",
      "line": 2,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/util/constants.ts",
      "imported": "BASE_URL"
    }
  },
  {
    "kind": "import",
    "name": "RestPayload",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/rest/processRequest.ts",
      "line": 3,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/rest/rest.ts",
      "imported": "RestPayload"
    }
  },
  {
    "kind": "import",
    "name": "RestRequest",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/rest/processRequest.ts",
      "line": 3,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/rest/rest.ts",
      "imported": "RestRequest"
    }
  },
  {
    "kind": "function",
    "name": "processQueue",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/rest/processQueue.ts",
      "line": 4,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "Processes the queue by looping over each path separately until the queues are empty."
    },
    "functionDef": {
      "params": [
        {
          "kind": "identifier",
          "name": "rest",
          "optional": false,
          "tsType": {
            "repr": "RestManager",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "RestManager"
            }
          }
        },
        {
          "kind": "identifier",
          "name": "id",
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          }
        }
      ],
      "returnType": null,
      "isAsync": false,
      "isGenerator": false,
      "typeParams": []
    }
  },
  {
    "kind": "import",
    "name": "RestManager",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/rest/processQueue.ts",
      "line": 1,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/rest/restManager.ts",
      "imported": "RestManager"
    }
  },
  {
    "kind": "function",
    "name": "processRateLimitedPaths",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/rest/processRateLimitedPaths.ts",
      "line": 4,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "This will create a infinite loop running in 1 seconds using tail recursion to keep rate limits clean. When a rate limit resets, this will remove it so the queue can proceed."
    },
    "functionDef": {
      "params": [
        {
          "kind": "identifier",
          "name": "rest",
          "optional": false,
          "tsType": {
            "repr": "RestManager",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "RestManager"
            }
          }
        }
      ],
      "returnType": null,
      "isAsync": false,
      "isGenerator": false,
      "typeParams": []
    }
  },
  {
    "kind": "import",
    "name": "RestManager",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/rest/processRateLimitedPaths.ts",
      "line": 1,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/rest/restManager.ts",
      "imported": "RestManager"
    }
  },
  {
    "kind": "function",
    "name": "createRequestBody",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/rest/createRequestBody.ts",
      "line": 8,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "Creates the request body and headers that are necessary to send a request. Will handle different types of methods and everything necessary for discord."
    },
    "functionDef": {
      "params": [
        {
          "kind": "identifier",
          "name": "rest",
          "optional": false,
          "tsType": {
            "repr": "RestManager",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "RestManager"
            }
          }
        },
        {
          "kind": "identifier",
          "name": "options",
          "optional": false,
          "tsType": {
            "repr": "CreateRequestBodyOptions",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "CreateRequestBodyOptions"
            }
          }
        }
      ],
      "returnType": null,
      "isAsync": false,
      "isGenerator": false,
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "CreateRequestBodyOptions",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/rest/createRequestBody.ts",
      "line": 62,
      "col": 0
    },
    "declarationKind": "export",
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "headers",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/rest/createRequestBody.ts",
            "line": 63,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "Record",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": [
                {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              ],
              "typeName": "Record"
            }
          },
          "typeParams": []
        },
        {
          "name": "method",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/rest/createRequestBody.ts",
            "line": 64,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "RequestMethod",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "RequestMethod"
            }
          },
          "typeParams": []
        },
        {
          "name": "body",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/rest/createRequestBody.ts",
            "line": 65,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "Record",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": [
                {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                {
                  "repr": "unknown",
                  "kind": "keyword",
                  "keyword": "unknown"
                }
              ],
              "typeName": "Record"
            }
          },
          "typeParams": []
        },
        {
          "name": "unauthorized",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/rest/createRequestBody.ts",
            "line": 66,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "import",
    "name": "RestManager",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/rest/createRequestBody.ts",
      "line": 1,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/rest/restManager.ts",
      "imported": "RestManager"
    }
  },
  {
    "kind": "import",
    "name": "FileContent",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/rest/createRequestBody.ts",
      "line": 2,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/types/shared.ts",
      "imported": "FileContent"
    }
  },
  {
    "kind": "import",
    "name": "USER_AGENT",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/rest/createRequestBody.ts",
      "line": 3,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/util/constants.ts",
      "imported": "USER_AGENT"
    }
  },
  {
    "kind": "import",
    "name": "RequestMethod",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/rest/createRequestBody.ts",
      "line": 4,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/rest/rest.ts",
      "imported": "RequestMethod"
    }
  },
  {
    "kind": "import",
    "name": "RestPayload",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/rest/createRequestBody.ts",
      "line": 4,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/rest/rest.ts",
      "imported": "RestPayload"
    }
  },
  {
    "kind": "import",
    "name": "RestRequest",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/rest/createRequestBody.ts",
      "line": 4,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/rest/rest.ts",
      "imported": "RestRequest"
    }
  },
  {
    "kind": "function",
    "name": "simplifyUrl",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/rest/simplifyUrl.ts",
      "line": 7,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "Split a url to separate rate limit buckets based on major/minor parameters."
    },
    "functionDef": {
      "params": [
        {
          "kind": "identifier",
          "name": "url",
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          }
        },
        {
          "kind": "identifier",
          "name": "method",
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          }
        }
      ],
      "returnType": null,
      "isAsync": false,
      "isGenerator": false,
      "typeParams": []
    }
  },
  {
    "kind": "function",
    "name": "cleanupQueues",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/rest/cleanupQueues.ts",
      "line": 4,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "Cleans up the queues by checking if there is nothing left and removing it."
    },
    "functionDef": {
      "params": [
        {
          "kind": "identifier",
          "name": "rest",
          "optional": false,
          "tsType": {
            "repr": "RestManager",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "RestManager"
            }
          }
        }
      ],
      "returnType": null,
      "isAsync": false,
      "isGenerator": false,
      "typeParams": []
    }
  },
  {
    "kind": "import",
    "name": "RestManager",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/rest/cleanupQueues.ts",
      "line": 1,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/rest/restManager.ts",
      "imported": "RestManager"
    }
  },
  {
    "kind": "function",
    "name": "processRequestHeaders",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/rest/processRequestHeaders.ts",
      "line": 4,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "Processes the rate limit headers and determines if it needs to be rate limited and returns the bucket id if available"
    },
    "functionDef": {
      "params": [
        {
          "kind": "identifier",
          "name": "rest",
          "optional": false,
          "tsType": {
            "repr": "RestManager",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "RestManager"
            }
          }
        },
        {
          "kind": "identifier",
          "name": "url",
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          }
        },
        {
          "kind": "identifier",
          "name": "headers",
          "optional": false,
          "tsType": {
            "repr": "Headers",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Headers"
            }
          }
        }
      ],
      "returnType": null,
      "isAsync": false,
      "isGenerator": false,
      "typeParams": []
    }
  },
  {
    "kind": "import",
    "name": "RestManager",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/rest/processRequestHeaders.ts",
      "line": 1,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/rest/restManager.ts",
      "imported": "RestManager"
    }
  },
  {
    "kind": "function",
    "name": "checkRateLimits",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/rest/checkRateLimits.ts",
      "line": 4,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "Check the rate limits for a url or a bucket."
    },
    "functionDef": {
      "params": [
        {
          "kind": "identifier",
          "name": "rest",
          "optional": false,
          "tsType": {
            "repr": "RestManager",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "RestManager"
            }
          }
        },
        {
          "kind": "identifier",
          "name": "url",
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          }
        }
      ],
      "returnType": null,
      "isAsync": false,
      "isGenerator": false,
      "typeParams": []
    }
  },
  {
    "kind": "import",
    "name": "RestManager",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/rest/checkRateLimits.ts",
      "line": 1,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/rest/restManager.ts",
      "imported": "RestManager"
    }
  },
  {
    "kind": "function",
    "name": "convertRestError",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/rest/convertRestError.ts",
      "line": 3,
      "col": 0
    },
    "declarationKind": "export",
    "functionDef": {
      "params": [
        {
          "kind": "identifier",
          "name": "errorStack",
          "optional": false,
          "tsType": {
            "repr": "Error",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Error"
            }
          }
        },
        {
          "kind": "identifier",
          "name": "data",
          "optional": false,
          "tsType": {
            "repr": "RestRequestRejection",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "RestRequestRejection"
            }
          }
        }
      ],
      "returnType": {
        "repr": "Error",
        "kind": "typeRef",
        "typeRef": {
          "typeParams": null,
          "typeName": "Error"
        }
      },
      "isAsync": false,
      "isGenerator": false,
      "typeParams": []
    }
  },
  {
    "kind": "import",
    "name": "RestRequestRejection",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/rest/convertRestError.ts",
      "line": 1,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/rest/rest.ts",
      "imported": "RestRequestRejection"
    }
  },
  {
    "kind": "function",
    "name": "createRestManager",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/rest/restManager.ts",
      "line": 18,
      "col": 0
    },
    "declarationKind": "export",
    "functionDef": {
      "params": [
        {
          "kind": "identifier",
          "name": "options",
          "optional": false,
          "tsType": {
            "repr": "CreateRestManagerOptions",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "CreateRestManagerOptions"
            }
          }
        }
      ],
      "returnType": null,
      "isAsync": false,
      "isGenerator": false,
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "CreateRestManagerOptions",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/rest/restManager.ts",
      "line": 81,
      "col": 0
    },
    "declarationKind": "export",
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "token",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/rest/restManager.ts",
            "line": 82,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "customUrl",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/rest/restManager.ts",
            "line": 83,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "maxRetryCount",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/rest/restManager.ts",
            "line": 84,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "version",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/rest/restManager.ts",
            "line": 85,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "secretKey",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/rest/restManager.ts",
            "line": 86,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "debug",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/rest/restManager.ts",
            "line": 87,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "fnOrConstructor",
            "fnOrConstructor": {
              "constructor": false,
              "tsType": {
                "repr": "unknown",
                "kind": "keyword",
                "keyword": "unknown"
              },
              "params": [
                {
                  "kind": "identifier",
                  "name": "text",
                  "optional": false,
                  "tsType": {
                    "repr": "string",
                    "kind": "keyword",
                    "keyword": "string"
                  }
                }
              ],
              "typeParams": []
            }
          },
          "typeParams": []
        },
        {
          "name": "checkRateLimits",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/rest/restManager.ts",
            "line": 88,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "checkRateLimits",
            "kind": "typeQuery",
            "typeQuery": "checkRateLimits"
          },
          "typeParams": []
        },
        {
          "name": "cleanupQueues",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/rest/restManager.ts",
            "line": 89,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "cleanupQueues",
            "kind": "typeQuery",
            "typeQuery": "cleanupQueues"
          },
          "typeParams": []
        },
        {
          "name": "processQueue",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/rest/restManager.ts",
            "line": 90,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "processQueue",
            "kind": "typeQuery",
            "typeQuery": "processQueue"
          },
          "typeParams": []
        },
        {
          "name": "processRateLimitedPaths",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/rest/restManager.ts",
            "line": 91,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "processRateLimitedPaths",
            "kind": "typeQuery",
            "typeQuery": "processRateLimitedPaths"
          },
          "typeParams": []
        },
        {
          "name": "processRequestHeaders",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/rest/restManager.ts",
            "line": 92,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "processRequestHeaders",
            "kind": "typeQuery",
            "typeQuery": "processRequestHeaders"
          },
          "typeParams": []
        },
        {
          "name": "processRequest",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/rest/restManager.ts",
            "line": 93,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "processRequest",
            "kind": "typeQuery",
            "typeQuery": "processRequest"
          },
          "typeParams": []
        },
        {
          "name": "createRequestBody",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/rest/restManager.ts",
            "line": 94,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "createRequestBody",
            "kind": "typeQuery",
            "typeQuery": "createRequestBody"
          },
          "typeParams": []
        },
        {
          "name": "runMethod",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/rest/restManager.ts",
            "line": 95,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "runMethod",
            "kind": "typeQuery",
            "typeQuery": "runMethod"
          },
          "typeParams": []
        },
        {
          "name": "simplifyUrl",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/rest/restManager.ts",
            "line": 96,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "simplifyUrl",
            "kind": "typeQuery",
            "typeQuery": "simplifyUrl"
          },
          "typeParams": []
        },
        {
          "name": "processGlobalQueue",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/rest/restManager.ts",
            "line": 97,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "processGlobalQueue",
            "kind": "typeQuery",
            "typeQuery": "processGlobalQueue"
          },
          "typeParams": []
        },
        {
          "name": "convertRestError",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/rest/restManager.ts",
            "line": 98,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "convertRestError",
            "kind": "typeQuery",
            "typeQuery": "convertRestError"
          },
          "typeParams": []
        },
        {
          "name": "sendRequest",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/rest/restManager.ts",
            "line": 99,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "sendRequest",
            "kind": "typeQuery",
            "typeQuery": "sendRequest"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "typeAlias",
    "name": "RestManager",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/rest/restManager.ts",
      "line": 102,
      "col": 0
    },
    "declarationKind": "export",
    "typeAliasDef": {
      "tsType": {
        "repr": "ReturnType",
        "kind": "typeRef",
        "typeRef": {
          "typeParams": [
            {
              "repr": "createRestManager",
              "kind": "typeQuery",
              "typeQuery": "createRestManager"
            }
          ],
          "typeName": "ReturnType"
        }
      },
      "typeParams": []
    }
  },
  {
    "kind": "import",
    "name": "checkRateLimits",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/rest/restManager.ts",
      "line": 1,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/rest/checkRateLimits.ts",
      "imported": "checkRateLimits"
    }
  },
  {
    "kind": "import",
    "name": "cleanupQueues",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/rest/restManager.ts",
      "line": 2,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/rest/cleanupQueues.ts",
      "imported": "cleanupQueues"
    }
  },
  {
    "kind": "import",
    "name": "createRequestBody",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/rest/restManager.ts",
      "line": 3,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/rest/createRequestBody.ts",
      "imported": "createRequestBody"
    }
  },
  {
    "kind": "import",
    "name": "processGlobalQueue",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/rest/restManager.ts",
      "line": 4,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/rest/processGlobalQueue.ts",
      "imported": "processGlobalQueue"
    }
  },
  {
    "kind": "import",
    "name": "processQueue",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/rest/restManager.ts",
      "line": 5,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/rest/processQueue.ts",
      "imported": "processQueue"
    }
  },
  {
    "kind": "import",
    "name": "processRateLimitedPaths",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/rest/restManager.ts",
      "line": 6,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/rest/processRateLimitedPaths.ts",
      "imported": "processRateLimitedPaths"
    }
  },
  {
    "kind": "import",
    "name": "processRequest",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/rest/restManager.ts",
      "line": 7,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/rest/processRequest.ts",
      "imported": "processRequest"
    }
  },
  {
    "kind": "import",
    "name": "processRequestHeaders",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/rest/restManager.ts",
      "line": 8,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/rest/processRequestHeaders.ts",
      "imported": "processRequestHeaders"
    }
  },
  {
    "kind": "import",
    "name": "convertRestError",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/rest/restManager.ts",
      "line": 9,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/rest/convertRestError.ts",
      "imported": "convertRestError"
    }
  },
  {
    "kind": "import",
    "name": "RestPayload",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/rest/restManager.ts",
      "line": 10,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/rest/rest.ts",
      "imported": "RestPayload"
    }
  },
  {
    "kind": "import",
    "name": "RestRateLimitedPath",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/rest/restManager.ts",
      "line": 10,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/rest/rest.ts",
      "imported": "RestRateLimitedPath"
    }
  },
  {
    "kind": "import",
    "name": "RestRequest",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/rest/restManager.ts",
      "line": 10,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/rest/rest.ts",
      "imported": "RestRequest"
    }
  },
  {
    "kind": "import",
    "name": "runMethod",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/rest/restManager.ts",
      "line": 11,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/rest/runMethod.ts",
      "imported": "runMethod"
    }
  },
  {
    "kind": "import",
    "name": "simplifyUrl",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/rest/restManager.ts",
      "line": 12,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/rest/simplifyUrl.ts",
      "imported": "simplifyUrl"
    }
  },
  {
    "kind": "import",
    "name": "baseEndpoints",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/rest/restManager.ts",
      "line": 13,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/util/constants.ts",
      "imported": "baseEndpoints"
    }
  },
  {
    "kind": "import",
    "name": "API_VERSION",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/rest/restManager.ts",
      "line": 14,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/util/constants.ts",
      "imported": "API_VERSION"
    }
  },
  {
    "kind": "import",
    "name": "removeTokenPrefix",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/rest/restManager.ts",
      "line": 15,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/util/token.ts",
      "imported": "removeTokenPrefix"
    }
  },
  {
    "kind": "import",
    "name": "sendRequest",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/rest/restManager.ts",
      "line": 16,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/rest/sendRequest.ts",
      "imported": "sendRequest"
    }
  },
  {
    "kind": "interface",
    "name": "RestSendRequestOptions",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/rest/sendRequest.ts",
      "line": 6,
      "col": 0
    },
    "declarationKind": "export",
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "url",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/rest/sendRequest.ts",
            "line": 7,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "method",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/rest/sendRequest.ts",
            "line": 8,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "RequestMethod",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "RequestMethod"
            }
          },
          "typeParams": []
        },
        {
          "name": "bucketId",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/rest/sendRequest.ts",
            "line": 9,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "reject",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/rest/sendRequest.ts",
            "line": 10,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "Function",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Function"
            }
          },
          "typeParams": []
        },
        {
          "name": "respond",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/rest/sendRequest.ts",
            "line": 11,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "Function",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Function"
            }
          },
          "typeParams": []
        },
        {
          "name": "retryCount",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/rest/sendRequest.ts",
            "line": 12,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "payload",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/rest/sendRequest.ts",
            "line": 13,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "typeLiteral",
            "typeLiteral": {
              "methods": [],
              "properties": [
                {
                  "name": "headers",
                  "params": [],
                  "computed": false,
                  "optional": false,
                  "tsType": {
                    "repr": "Record",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": [
                        {
                          "repr": "string",
                          "kind": "keyword",
                          "keyword": "string"
                        },
                        {
                          "repr": "string",
                          "kind": "keyword",
                          "keyword": "string"
                        }
                      ],
                      "typeName": "Record"
                    }
                  },
                  "typeParams": []
                },
                {
                  "name": "body",
                  "params": [],
                  "computed": false,
                  "optional": false,
                  "tsType": {
                    "repr": "",
                    "kind": "union",
                    "union": [
                      {
                        "repr": "string",
                        "kind": "keyword",
                        "keyword": "string"
                      },
                      {
                        "repr": "FormData",
                        "kind": "typeRef",
                        "typeRef": {
                          "typeParams": null,
                          "typeName": "FormData"
                        }
                      }
                    ]
                  },
                  "typeParams": []
                }
              ],
              "callSignatures": [],
              "indexSignatures": []
            }
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "function",
    "name": "sendRequest",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/rest/sendRequest.ts",
      "line": 19,
      "col": 0
    },
    "declarationKind": "export",
    "functionDef": {
      "params": [
        {
          "kind": "identifier",
          "name": "rest",
          "optional": false,
          "tsType": {
            "repr": "RestManager",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "RestManager"
            }
          }
        },
        {
          "kind": "identifier",
          "name": "options",
          "optional": false,
          "tsType": {
            "repr": "RestSendRequestOptions",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "RestSendRequestOptions"
            }
          }
        }
      ],
      "returnType": {
        "repr": "Promise",
        "kind": "typeRef",
        "typeRef": {
          "typeParams": [
            {
              "repr": "T",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "T"
              }
            }
          ],
          "typeName": "Promise"
        }
      },
      "isAsync": true,
      "isGenerator": false,
      "typeParams": [
        {
          "name": "T"
        }
      ]
    }
  },
  {
    "kind": "import",
    "name": "HTTPResponseCodes",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/rest/sendRequest.ts",
      "line": 1,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/types/shared.ts",
      "imported": "HTTPResponseCodes"
    }
  },
  {
    "kind": "import",
    "name": "BASE_URL",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/rest/sendRequest.ts",
      "line": 2,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/util/constants.ts",
      "imported": "BASE_URL"
    }
  },
  {
    "kind": "import",
    "name": "RequestMethod",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/rest/sendRequest.ts",
      "line": 3,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/rest/rest.ts",
      "imported": "RequestMethod"
    }
  },
  {
    "kind": "import",
    "name": "RestManager",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/rest/sendRequest.ts",
      "line": 4,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/rest/restManager.ts",
      "imported": "RestManager"
    }
  },
  {
    "kind": "function",
    "name": "processGlobalQueue",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/rest/processGlobalQueue.ts",
      "line": 4,
      "col": 0
    },
    "declarationKind": "export",
    "functionDef": {
      "params": [
        {
          "kind": "identifier",
          "name": "rest",
          "optional": false,
          "tsType": {
            "repr": "RestManager",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "RestManager"
            }
          }
        }
      ],
      "returnType": null,
      "isAsync": true,
      "isGenerator": false,
      "typeParams": []
    }
  },
  {
    "kind": "import",
    "name": "RestManager",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/rest/processGlobalQueue.ts",
      "line": 1,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/rest/restManager.ts",
      "imported": "RestManager"
    }
  },
  {
    "kind": "import",
    "name": "HTTPResponseCodes",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/rest/processGlobalQueue.ts",
      "line": 2,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/types/shared.ts",
      "imported": "HTTPResponseCodes"
    }
  },
  {
    "kind": "function",
    "name": "calculateWorkerId",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/manager/calculateWorkerId.ts",
      "line": 3,
      "col": 0
    },
    "declarationKind": "export",
    "functionDef": {
      "params": [
        {
          "kind": "identifier",
          "name": "manager",
          "optional": false,
          "tsType": {
            "repr": "GatewayManager",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "GatewayManager"
            }
          }
        },
        {
          "kind": "identifier",
          "name": "shardId",
          "optional": false,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          }
        }
      ],
      "returnType": null,
      "isAsync": false,
      "isGenerator": false,
      "typeParams": []
    }
  },
  {
    "kind": "import",
    "name": "GatewayManager",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/manager/calculateWorkerId.ts",
      "line": 1,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/gateway/manager/gatewayManager.ts",
      "imported": "GatewayManager"
    }
  },
  {
    "kind": "function",
    "name": "spawnShards",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/manager/spawnShards.ts",
      "line": 8,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "Begin spawning shards."
    },
    "functionDef": {
      "params": [
        {
          "kind": "identifier",
          "name": "gateway",
          "optional": false,
          "tsType": {
            "repr": "GatewayManager",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "GatewayManager"
            }
          }
        }
      ],
      "returnType": null,
      "isAsync": false,
      "isGenerator": false,
      "typeParams": []
    }
  },
  {
    "kind": "import",
    "name": "GatewayIntents",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/manager/spawnShards.ts",
      "line": 1,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/types/shared.ts",
      "imported": "GatewayIntents"
    }
  },
  {
    "kind": "import",
    "name": "createLeakyBucket",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/manager/spawnShards.ts",
      "line": 2,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/util/bucket.ts",
      "imported": "createLeakyBucket"
    }
  },
  {
    "kind": "import",
    "name": "createShard",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/manager/spawnShards.ts",
      "line": 3,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/createShard.ts",
      "imported": "createShard"
    }
  },
  {
    "kind": "import",
    "name": "Shard",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/manager/spawnShards.ts",
      "line": 4,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/types.ts",
      "imported": "Shard"
    }
  },
  {
    "kind": "import",
    "name": "createGatewayManager",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/manager/spawnShards.ts",
      "line": 5,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/gateway/manager/gatewayManager.ts",
      "imported": "createGatewayManager"
    }
  },
  {
    "kind": "import",
    "name": "GatewayManager",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/manager/spawnShards.ts",
      "line": 5,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/gateway/manager/gatewayManager.ts",
      "imported": "GatewayManager"
    }
  },
  {
    "kind": "function",
    "name": "calculateTotalShards",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/manager/calculateTotalShards.ts",
      "line": 4,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "Handler used to determine max number of shards to use based upon the max concurrency."
    },
    "functionDef": {
      "params": [
        {
          "kind": "identifier",
          "name": "gateway",
          "optional": false,
          "tsType": {
            "repr": "GatewayManager",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "GatewayManager"
            }
          }
        }
      ],
      "returnType": {
        "repr": "number",
        "kind": "keyword",
        "keyword": "number"
      },
      "isAsync": false,
      "isGenerator": false,
      "typeParams": []
    }
  },
  {
    "kind": "import",
    "name": "GatewayManager",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/manager/calculateTotalShards.ts",
      "line": 1,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/gateway/manager/gatewayManager.ts",
      "imported": "GatewayManager"
    }
  },
  {
    "kind": "function",
    "name": "prepareBuckets",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/manager/prepareBuckets.ts",
      "line": 4,
      "col": 0
    },
    "declarationKind": "export",
    "functionDef": {
      "params": [
        {
          "kind": "identifier",
          "name": "gateway",
          "optional": false,
          "tsType": {
            "repr": "GatewayManager",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "GatewayManager"
            }
          }
        }
      ],
      "returnType": null,
      "isAsync": false,
      "isGenerator": false,
      "typeParams": []
    }
  },
  {
    "kind": "import",
    "name": "createLeakyBucket",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/manager/prepareBuckets.ts",
      "line": 1,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/util/bucket.ts",
      "imported": "createLeakyBucket"
    }
  },
  {
    "kind": "import",
    "name": "GatewayManager",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/manager/prepareBuckets.ts",
      "line": 2,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/gateway/manager/gatewayManager.ts",
      "imported": "GatewayManager"
    }
  },
  {
    "kind": "function",
    "name": "stop",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/manager/stop.ts",
      "line": 4,
      "col": 0
    },
    "declarationKind": "export",
    "functionDef": {
      "params": [
        {
          "kind": "identifier",
          "name": "gateway",
          "optional": false,
          "tsType": {
            "repr": "GatewayManager",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "GatewayManager"
            }
          }
        },
        {
          "kind": "identifier",
          "name": "code",
          "optional": false,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          }
        },
        {
          "kind": "identifier",
          "name": "reason",
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          }
        }
      ],
      "returnType": null,
      "isAsync": true,
      "isGenerator": false,
      "typeParams": []
    }
  },
  {
    "kind": "import",
    "name": "delay",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/manager/stop.ts",
      "line": 1,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/util/delay.ts",
      "imported": "delay"
    }
  },
  {
    "kind": "import",
    "name": "GatewayManager",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/manager/stop.ts",
      "line": 2,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/gateway/manager/gatewayManager.ts",
      "imported": "GatewayManager"
    }
  },
  {
    "kind": "function",
    "name": "tellWorkerToIdentify",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/manager/tellWorkerToIdentify.ts",
      "line": 6,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "Allows users to hook in and change to communicate to different workers across different servers or anything they like. For example using redis pubsub to talk to other servers."
    },
    "functionDef": {
      "params": [
        {
          "kind": "identifier",
          "name": "gateway",
          "optional": false,
          "tsType": {
            "repr": "GatewayManager",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "GatewayManager"
            }
          }
        },
        {
          "kind": "identifier",
          "name": "_workerId",
          "optional": false,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          }
        },
        {
          "kind": "identifier",
          "name": "shardId",
          "optional": false,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          }
        },
        {
          "kind": "identifier",
          "name": "_bucketId",
          "optional": false,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          }
        }
      ],
      "returnType": {
        "repr": "Promise",
        "kind": "typeRef",
        "typeRef": {
          "typeParams": [
            {
              "repr": "void",
              "kind": "keyword",
              "keyword": "void"
            }
          ],
          "typeName": "Promise"
        }
      },
      "isAsync": true,
      "isGenerator": false,
      "typeParams": []
    }
  },
  {
    "kind": "import",
    "name": "GatewayIntents",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/manager/tellWorkerToIdentify.ts",
      "line": 1,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/types/shared.ts",
      "imported": "GatewayIntents"
    }
  },
  {
    "kind": "import",
    "name": "createShard",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/manager/tellWorkerToIdentify.ts",
      "line": 2,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/createShard.ts",
      "imported": "createShard"
    }
  },
  {
    "kind": "import",
    "name": "GatewayManager",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/manager/tellWorkerToIdentify.ts",
      "line": 3,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/gateway/manager/gatewayManager.ts",
      "imported": "GatewayManager"
    }
  },
  {
    "kind": "typeAlias",
    "name": "GatewayManager",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/manager/gatewayManager.ts",
      "line": 21,
      "col": 0
    },
    "declarationKind": "export",
    "typeAliasDef": {
      "tsType": {
        "repr": "ReturnType",
        "kind": "typeRef",
        "typeRef": {
          "typeParams": [
            {
              "repr": "createGatewayManager",
              "kind": "typeQuery",
              "typeQuery": "createGatewayManager"
            }
          ],
          "typeName": "ReturnType"
        }
      },
      "typeParams": []
    }
  },
  {
    "kind": "function",
    "name": "createGatewayManager",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/manager/gatewayManager.ts",
      "line": 29,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "Create a new Gateway Manager.\n",
      "tags": [
        {
          "kind": "param",
          "name": "options:",
          "doc": "Customize every bit of the manager. If something is not\nprovided, it will fallback to a default which should be suitable for most\nbots."
        }
      ]
    },
    "functionDef": {
      "params": [
        {
          "kind": "identifier",
          "name": "options",
          "optional": false,
          "tsType": {
            "repr": "PickPartial",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": [
                {
                  "repr": "CreateGatewayManager",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "CreateGatewayManager"
                  }
                },
                {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "handleDiscordPayload",
                      "kind": "literal",
                      "literal": {
                        "kind": "string",
                        "string": "handleDiscordPayload"
                      }
                    },
                    {
                      "repr": "gatewayBot",
                      "kind": "literal",
                      "literal": {
                        "kind": "string",
                        "string": "gatewayBot"
                      }
                    },
                    {
                      "repr": "gatewayConfig",
                      "kind": "literal",
                      "literal": {
                        "kind": "string",
                        "string": "gatewayConfig"
                      }
                    }
                  ]
                }
              ],
              "typeName": "PickPartial"
            }
          }
        }
      ],
      "returnType": null,
      "isAsync": false,
      "isGenerator": false,
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "CreateGatewayManager",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/manager/gatewayManager.ts",
      "line": 198,
      "col": 0
    },
    "declarationKind": "export",
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "spawnShardDelay",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/manager/gatewayManager.ts",
            "line": 200,
            "col": 4
          },
          "jsDoc": {
            "doc": "Delay in milliseconds to wait before spawning next shard. OPTIMAL IS ABOVE 5100. YOU DON'T WANT TO HIT THE RATE LIMIT!!!"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "totalShards",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/manager/gatewayManager.ts",
            "line": 202,
            "col": 4
          },
          "jsDoc": {
            "doc": "Total amount of shards your bot uses. Useful for zero-downtime updates or resharding."
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "shardsPerWorker",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/manager/gatewayManager.ts",
            "line": 204,
            "col": 4
          },
          "jsDoc": {
            "doc": "The amount of shards to load per worker."
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "totalWorkers",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/manager/gatewayManager.ts",
            "line": 206,
            "col": 4
          },
          "jsDoc": {
            "doc": "The total amount of workers to use for your bot."
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "firstShardId",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/manager/gatewayManager.ts",
            "line": 213,
            "col": 4
          },
          "jsDoc": {
            "doc": "Id of the first Shard which should get controlled by this manager.\n\nNOTE: This is intended for testing purposes\nif big bots want to test the gateway on smaller scale.\nThis is not recommended to be used in production."
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "lastShardId",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/manager/gatewayManager.ts",
            "line": 220,
            "col": 4
          },
          "jsDoc": {
            "doc": "Id of the last Shard which should get controlled by this manager.\n\nNOTE: This is intended for testing purposes\nif big bots want to test the gateway on smaller scale.\nThis is not recommended to be used in production."
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "gatewayBot",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/manager/gatewayManager.ts",
            "line": 223,
            "col": 4
          },
          "jsDoc": {
            "doc": "Important data which is used by the manager to connect shards to the gateway."
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "GatewayBot",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "GatewayBot"
            }
          },
          "typeParams": []
        },
        {
          "name": "gatewayConfig",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/manager/gatewayManager.ts",
            "line": 225,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "PickPartial",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": [
                {
                  "repr": "ShardGatewayConfig",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "ShardGatewayConfig"
                  }
                },
                {
                  "repr": "token",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "token"
                  }
                }
              ],
              "typeName": "PickPartial"
            }
          },
          "typeParams": []
        },
        {
          "name": "createShardOptions",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/manager/gatewayManager.ts",
            "line": 228,
            "col": 4
          },
          "jsDoc": {
            "doc": "Options which are used to create a new shard."
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "Omit",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": [
                {
                  "repr": "CreateShard",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "CreateShard"
                  }
                },
                {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "id",
                      "kind": "literal",
                      "literal": {
                        "kind": "string",
                        "string": "id"
                      }
                    },
                    {
                      "repr": "totalShards",
                      "kind": "literal",
                      "literal": {
                        "kind": "string",
                        "string": "totalShards"
                      }
                    },
                    {
                      "repr": "requestIdentify",
                      "kind": "literal",
                      "literal": {
                        "kind": "string",
                        "string": "requestIdentify"
                      }
                    },
                    {
                      "repr": "gatewayConfig",
                      "kind": "literal",
                      "literal": {
                        "kind": "string",
                        "string": "gatewayConfig"
                      }
                    }
                  ]
                }
              ],
              "typeName": "Omit"
            }
          },
          "typeParams": []
        },
        {
          "name": "buckets",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/manager/gatewayManager.ts",
            "line": 231,
            "col": 4
          },
          "jsDoc": {
            "doc": "Stored as bucketId: { workers: [workerId, [ShardIds]], createNextShard: boolean }"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "Map",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": [
                {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                },
                {
                  "repr": "",
                  "kind": "typeLiteral",
                  "typeLiteral": {
                    "methods": [],
                    "properties": [
                      {
                        "name": "workers",
                        "params": [],
                        "computed": false,
                        "optional": false,
                        "tsType": {
                          "repr": "",
                          "kind": "array",
                          "array": {
                            "repr": "",
                            "kind": "typeLiteral",
                            "typeLiteral": {
                              "methods": [],
                              "properties": [
                                {
                                  "name": "id",
                                  "params": [],
                                  "computed": false,
                                  "optional": false,
                                  "tsType": {
                                    "repr": "number",
                                    "kind": "keyword",
                                    "keyword": "number"
                                  },
                                  "typeParams": []
                                },
                                {
                                  "name": "queue",
                                  "params": [],
                                  "computed": false,
                                  "optional": false,
                                  "tsType": {
                                    "repr": "",
                                    "kind": "array",
                                    "array": {
                                      "repr": "number",
                                      "kind": "keyword",
                                      "keyword": "number"
                                    }
                                  },
                                  "typeParams": []
                                }
                              ],
                              "callSignatures": [],
                              "indexSignatures": []
                            }
                          }
                        },
                        "typeParams": []
                      },
                      {
                        "name": "leak",
                        "params": [],
                        "computed": false,
                        "optional": false,
                        "tsType": {
                          "repr": "LeakyBucket",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "LeakyBucket"
                          }
                        },
                        "typeParams": []
                      }
                    ],
                    "callSignatures": [],
                    "indexSignatures": []
                  }
                }
              ],
              "typeName": "Map"
            }
          },
          "typeParams": []
        },
        {
          "name": "prepareBuckets",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/manager/gatewayManager.ts",
            "line": 241,
            "col": 4
          },
          "jsDoc": {
            "doc": "Prepares the buckets for identifying"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "prepareBuckets",
            "kind": "typeQuery",
            "typeQuery": "prepareBuckets"
          },
          "typeParams": []
        },
        {
          "name": "spawnShards",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/manager/gatewayManager.ts",
            "line": 243,
            "col": 4
          },
          "jsDoc": {
            "doc": "The handler for spawning ALL the shards."
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "spawnShards",
            "kind": "typeQuery",
            "typeQuery": "spawnShards"
          },
          "typeParams": []
        },
        {
          "name": "stop",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/manager/gatewayManager.ts",
            "line": 245,
            "col": 4
          },
          "jsDoc": {
            "doc": "The handler to close all shards."
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "stop",
            "kind": "typeQuery",
            "typeQuery": "stop"
          },
          "typeParams": []
        },
        {
          "name": "handleDiscordPayload",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/manager/gatewayManager.ts",
            "line": 247,
            "col": 4
          },
          "jsDoc": {
            "doc": "Sends the discord payload to another server."
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "",
            "kind": "fnOrConstructor",
            "fnOrConstructor": {
              "constructor": false,
              "tsType": {
                "repr": "any",
                "kind": "keyword",
                "keyword": "any"
              },
              "params": [
                {
                  "kind": "identifier",
                  "name": "shard",
                  "optional": false,
                  "tsType": {
                    "repr": "Shard",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Shard"
                    }
                  }
                },
                {
                  "kind": "identifier",
                  "name": "data",
                  "optional": false,
                  "tsType": {
                    "repr": "DiscordGatewayPayload",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "DiscordGatewayPayload"
                    }
                  }
                }
              ],
              "typeParams": []
            }
          },
          "typeParams": []
        },
        {
          "name": "tellWorkerToIdentify",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/manager/gatewayManager.ts",
            "line": 249,
            "col": 4
          },
          "jsDoc": {
            "doc": "Tell the worker to begin identifying this shard"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "tellWorkerToIdentify",
            "kind": "typeQuery",
            "typeQuery": "tellWorkerToIdentify"
          },
          "typeParams": []
        },
        {
          "name": "debug",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/manager/gatewayManager.ts",
            "line": 251,
            "col": 4
          },
          "jsDoc": {
            "doc": "Handle the different logs. Used for debugging."
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "",
            "kind": "fnOrConstructor",
            "fnOrConstructor": {
              "constructor": false,
              "tsType": {
                "repr": "unknown",
                "kind": "keyword",
                "keyword": "unknown"
              },
              "params": [
                {
                  "kind": "identifier",
                  "name": "text",
                  "optional": false,
                  "tsType": {
                    "repr": "GatewayDebugEvents",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "GatewayDebugEvents"
                    }
                  }
                },
                {
                  "kind": "rest",
                  "arg": {
                    "kind": "identifier",
                    "name": "args",
                    "optional": false,
                    "tsType": null
                  },
                  "tsType": {
                    "repr": "",
                    "kind": "array",
                    "array": {
                      "repr": "any",
                      "kind": "keyword",
                      "keyword": "any"
                    }
                  }
                }
              ],
              "typeParams": []
            }
          },
          "typeParams": []
        },
        {
          "name": "calculateTotalShards",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/manager/gatewayManager.ts",
            "line": 272,
            "col": 4
          },
          "jsDoc": {
            "doc": "Calculates the number of shards to use based on the max concurrency"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "calculateTotalShards",
            "kind": "typeQuery",
            "typeQuery": "calculateTotalShards"
          },
          "typeParams": []
        },
        {
          "name": "calculateWorkerId",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/manager/gatewayManager.ts",
            "line": 275,
            "col": 4
          },
          "jsDoc": {
            "doc": "Calculate the id of the worker related ot this Shard."
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "calculateWorkerId",
            "kind": "typeQuery",
            "typeQuery": "calculateWorkerId"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "typeAlias",
    "name": "GatewayDebugEvents",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/manager/gatewayManager.ts",
      "line": 278,
      "col": 0
    },
    "declarationKind": "export",
    "typeAliasDef": {
      "tsType": {
        "repr": "",
        "kind": "union",
        "union": [
          {
            "repr": "GW ERROR",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "GW ERROR"
            }
          },
          {
            "repr": "GW CLOSED",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "GW CLOSED"
            }
          },
          {
            "repr": "GW CLOSED_RECONNECT",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "GW CLOSED_RECONNECT"
            }
          },
          {
            "repr": "GW RAW",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "GW RAW"
            }
          },
          {
            "repr": "GW RECONNECT",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "GW RECONNECT"
            }
          },
          {
            "repr": "GW INVALID_SESSION",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "GW INVALID_SESSION"
            }
          },
          {
            "repr": "GW RESUMED",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "GW RESUMED"
            }
          },
          {
            "repr": "GW RESUMING",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "GW RESUMING"
            }
          },
          {
            "repr": "GW IDENTIFYING",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "GW IDENTIFYING"
            }
          },
          {
            "repr": "GW RAW_SEND",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "GW RAW_SEND"
            }
          },
          {
            "repr": "GW MAX REQUESTS",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "GW MAX REQUESTS"
            }
          },
          {
            "repr": "GW DEBUG",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "GW DEBUG"
            }
          },
          {
            "repr": "GW HEARTBEATING",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "GW HEARTBEATING"
            }
          },
          {
            "repr": "GW HEARTBEATING_STARTED",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "GW HEARTBEATING_STARTED"
            }
          },
          {
            "repr": "GW HEARTBEATING_DETAILS",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "GW HEARTBEATING_DETAILS"
            }
          },
          {
            "repr": "GW HEARTBEATING_CLOSED",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "GW HEARTBEATING_CLOSED"
            }
          }
        ]
      },
      "typeParams": []
    }
  },
  {
    "kind": "import",
    "name": "DiscordGatewayPayload",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/manager/gatewayManager.ts",
      "line": 1,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "imported": "DiscordGatewayPayload"
    }
  },
  {
    "kind": "import",
    "name": "GatewayBot",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/manager/gatewayManager.ts",
      "line": 2,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/types/shared.ts",
      "imported": "GatewayBot"
    }
  },
  {
    "kind": "import",
    "name": "PickPartial",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/manager/gatewayManager.ts",
      "line": 2,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/types/shared.ts",
      "imported": "PickPartial"
    }
  },
  {
    "kind": "import",
    "name": "LeakyBucket",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/manager/gatewayManager.ts",
      "line": 3,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/util/bucket.ts",
      "imported": "LeakyBucket"
    }
  },
  {
    "kind": "import",
    "name": "CreateShard",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/manager/gatewayManager.ts",
      "line": 4,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/createShard.ts",
      "imported": "CreateShard"
    }
  },
  {
    "kind": "import",
    "name": "createShard",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/manager/gatewayManager.ts",
      "line": 4,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/createShard.ts",
      "imported": "createShard"
    }
  },
  {
    "kind": "import",
    "name": "Shard",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/manager/gatewayManager.ts",
      "line": 5,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/types.ts",
      "imported": "Shard"
    }
  },
  {
    "kind": "import",
    "name": "ShardGatewayConfig",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/manager/gatewayManager.ts",
      "line": 5,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/types.ts",
      "imported": "ShardGatewayConfig"
    }
  },
  {
    "kind": "import",
    "name": "calculateTotalShards",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/manager/gatewayManager.ts",
      "line": 6,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/gateway/manager/calculateTotalShards.ts",
      "imported": "calculateTotalShards"
    }
  },
  {
    "kind": "import",
    "name": "calculateWorkerId",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/manager/gatewayManager.ts",
      "line": 7,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/gateway/manager/calculateWorkerId.ts",
      "imported": "calculateWorkerId"
    }
  },
  {
    "kind": "import",
    "name": "spawnShards",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/manager/gatewayManager.ts",
      "line": 15,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/gateway/manager/spawnShards.ts",
      "imported": "spawnShards"
    }
  },
  {
    "kind": "import",
    "name": "prepareBuckets",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/manager/gatewayManager.ts",
      "line": 16,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/gateway/manager/prepareBuckets.ts",
      "imported": "prepareBuckets"
    }
  },
  {
    "kind": "import",
    "name": "tellWorkerToIdentify",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/manager/gatewayManager.ts",
      "line": 17,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/gateway/manager/tellWorkerToIdentify.ts",
      "imported": "tellWorkerToIdentify"
    }
  },
  {
    "kind": "import",
    "name": "createShardManager",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/manager/gatewayManager.ts",
      "line": 18,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/gateway/manager/shardManager.ts",
      "imported": "createShardManager"
    }
  },
  {
    "kind": "import",
    "name": "ShardManager",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/manager/gatewayManager.ts",
      "line": 18,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/gateway/manager/shardManager.ts",
      "imported": "ShardManager"
    }
  },
  {
    "kind": "import",
    "name": "stop",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/manager/gatewayManager.ts",
      "line": 19,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/gateway/manager/stop.ts",
      "imported": "stop"
    }
  },
  {
    "kind": "typeAlias",
    "name": "ShardManager",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/manager/shardManager.ts",
      "line": 12,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "This is a Shard manager.\nThis does not manage a specific range of Shard but the provided Shards on create or when an identify is requested.\nThe aim of this is to provide an easy to use manager which can be used by workers or any other kind of separate process."
    },
    "typeAliasDef": {
      "tsType": {
        "repr": "ReturnType",
        "kind": "typeRef",
        "typeRef": {
          "typeParams": [
            {
              "repr": "createShardManager",
              "kind": "typeQuery",
              "typeQuery": "createShardManager"
            }
          ],
          "typeName": "ReturnType"
        }
      },
      "typeParams": []
    }
  },
  {
    "kind": "function",
    "name": "createShardManager",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/manager/shardManager.ts",
      "line": 18,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "Create a new Shard manager.\nThis does not manage a specific range of Shard but the provided Shards on create or when an identify is requested.\nThe aim of this is to provide an easy to use manager which can be used by workers or any other kind of separate process."
    },
    "functionDef": {
      "params": [
        {
          "kind": "identifier",
          "name": "options",
          "optional": false,
          "tsType": {
            "repr": "CreateShardManager",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "CreateShardManager"
            }
          }
        }
      ],
      "returnType": null,
      "isAsync": false,
      "isGenerator": false,
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "CreateShardManager",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/manager/shardManager.ts",
      "line": 98,
      "col": 0
    },
    "declarationKind": "export",
    "interfaceDef": {
      "extends": [],
      "methods": [
        {
          "name": "handleMessage",
          "kind": "method",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/manager/shardManager.ts",
            "line": 116,
            "col": 4
          },
          "jsDoc": {
            "doc": "This function is used when a shard receives any message from Discord."
          },
          "optional": false,
          "params": [
            {
              "kind": "identifier",
              "name": "shard",
              "optional": false,
              "tsType": {
                "repr": "Shard",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Shard"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "message",
              "optional": false,
              "tsType": {
                "repr": "DiscordGatewayPayload",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "DiscordGatewayPayload"
                }
              }
            }
          ],
          "returnType": {
            "repr": "unknown",
            "kind": "keyword",
            "keyword": "unknown"
          },
          "typeParams": []
        },
        {
          "name": "requestIdentify",
          "kind": "method",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/manager/shardManager.ts",
            "line": 121,
            "col": 4
          },
          "jsDoc": {
            "doc": "This function communicates with the parent manager,\nin order to know whether this manager is allowed to identify a new shard. #"
          },
          "optional": false,
          "params": [
            {
              "kind": "identifier",
              "name": "shardId",
              "optional": false,
              "tsType": {
                "repr": "number",
                "kind": "keyword",
                "keyword": "number"
              }
            }
          ],
          "returnType": {
            "repr": "Promise",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": [
                {
                  "repr": "void",
                  "kind": "keyword",
                  "keyword": "void"
                }
              ],
              "typeName": "Promise"
            }
          },
          "typeParams": []
        }
      ],
      "properties": [
        {
          "name": "createShardOptions",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/manager/shardManager.ts",
            "line": 103,
            "col": 4
          },
          "jsDoc": {
            "doc": "Options which are used to create a new Shard."
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "Omit",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": [
                {
                  "repr": "CreateShard",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "CreateShard"
                  }
                },
                {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "id",
                      "kind": "literal",
                      "literal": {
                        "kind": "string",
                        "string": "id"
                      }
                    },
                    {
                      "repr": "totalShards",
                      "kind": "literal",
                      "literal": {
                        "kind": "string",
                        "string": "totalShards"
                      }
                    },
                    {
                      "repr": "requestIdentify",
                      "kind": "literal",
                      "literal": {
                        "kind": "string",
                        "string": "requestIdentify"
                      }
                    },
                    {
                      "repr": "gatewayConfig",
                      "kind": "literal",
                      "literal": {
                        "kind": "string",
                        "string": "gatewayConfig"
                      }
                    }
                  ]
                }
              ],
              "typeName": "Omit"
            }
          },
          "typeParams": []
        },
        {
          "name": "gatewayConfig",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/manager/shardManager.ts",
            "line": 105,
            "col": 4
          },
          "jsDoc": {
            "doc": "Gateway configuration which is used when creating a Shard."
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "PickPartial",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": [
                {
                  "repr": "ShardGatewayConfig",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "ShardGatewayConfig"
                  }
                },
                {
                  "repr": "token",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "token"
                  }
                }
              ],
              "typeName": "PickPartial"
            }
          },
          "typeParams": []
        },
        {
          "name": "shardIds",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/manager/shardManager.ts",
            "line": 107,
            "col": 4
          },
          "jsDoc": {
            "doc": "Ids of the Shards which should be managed."
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "number",
              "kind": "keyword",
              "keyword": "number"
            }
          },
          "typeParams": []
        },
        {
          "name": "totalShards",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/manager/shardManager.ts",
            "line": 109,
            "col": 4
          },
          "jsDoc": {
            "doc": "Total amount of Shard used by the bot."
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "import",
    "name": "DiscordGatewayPayload",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/manager/shardManager.ts",
      "line": 1,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "imported": "DiscordGatewayPayload"
    }
  },
  {
    "kind": "import",
    "name": "PickPartial",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/manager/shardManager.ts",
      "line": 2,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/types/shared.ts",
      "imported": "PickPartial"
    }
  },
  {
    "kind": "import",
    "name": "CreateShard",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/manager/shardManager.ts",
      "line": 3,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/createShard.ts",
      "imported": "CreateShard"
    }
  },
  {
    "kind": "import",
    "name": "createShard",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/manager/shardManager.ts",
      "line": 3,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/createShard.ts",
      "imported": "createShard"
    }
  },
  {
    "kind": "import",
    "name": "Shard",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/manager/shardManager.ts",
      "line": 4,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/types.ts",
      "imported": "Shard"
    }
  },
  {
    "kind": "import",
    "name": "ShardGatewayConfig",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/manager/shardManager.ts",
      "line": 4,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/types.ts",
      "imported": "ShardGatewayConfig"
    }
  },
  {
    "kind": "function",
    "name": "stopHeartbeating",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/stopHeartbeating.ts",
      "line": 3,
      "col": 0
    },
    "declarationKind": "export",
    "functionDef": {
      "params": [
        {
          "kind": "identifier",
          "name": "shard",
          "optional": false,
          "tsType": {
            "repr": "Shard",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Shard"
            }
          }
        }
      ],
      "returnType": {
        "repr": "void",
        "kind": "keyword",
        "keyword": "void"
      },
      "isAsync": false,
      "isGenerator": false,
      "typeParams": []
    }
  },
  {
    "kind": "import",
    "name": "Shard",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/stopHeartbeating.ts",
      "line": 1,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/types.ts",
      "imported": "Shard"
    }
  },
  {
    "kind": "variable",
    "name": "MAX_GATEWAY_REQUESTS_PER_INTERVAL",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/types.ts",
      "line": 7,
      "col": 0
    },
    "declarationKind": "export",
    "variableDef": {
      "tsType": {
        "repr": "120",
        "kind": "literal",
        "literal": {
          "kind": "number",
          "number": 120.0
        }
      },
      "kind": "const"
    }
  },
  {
    "kind": "variable",
    "name": "GATEWAY_RATE_LIMIT_RESET_INTERVAL",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/types.ts",
      "line": 8,
      "col": 0
    },
    "declarationKind": "export",
    "variableDef": {
      "tsType": {
        "repr": "60000",
        "kind": "literal",
        "literal": {
          "kind": "number",
          "number": 60000.0
        }
      },
      "kind": "const"
    }
  },
  {
    "kind": "variable",
    "name": "DEFAULT_HEARTBEAT_INTERVAL",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/types.ts",
      "line": 9,
      "col": 0
    },
    "declarationKind": "export",
    "variableDef": {
      "tsType": {
        "repr": "45000",
        "kind": "literal",
        "literal": {
          "kind": "number",
          "number": 45000.0
        }
      },
      "kind": "const"
    }
  },
  {
    "kind": "typeAlias",
    "name": "Shard",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/types.ts",
      "line": 11,
      "col": 0
    },
    "declarationKind": "export",
    "typeAliasDef": {
      "tsType": {
        "repr": "ReturnType",
        "kind": "typeRef",
        "typeRef": {
          "typeParams": [
            {
              "repr": "createShard",
              "kind": "typeQuery",
              "typeQuery": "createShard"
            }
          ],
          "typeName": "ReturnType"
        }
      },
      "typeParams": []
    }
  },
  {
    "kind": "enum",
    "name": "ShardState",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/types.ts",
      "line": 13,
      "col": 0
    },
    "declarationKind": "export",
    "enumDef": {
      "members": [
        {
          "name": "Connected",
          "init": {
            "repr": "0",
            "kind": "literal",
            "literal": {
              "kind": "number",
              "number": 0.0
            }
          },
          "jsDoc": {
            "doc": "Shard is fully connected to the gateway and receiving events from Discord."
          }
        },
        {
          "name": "Connecting",
          "init": {
            "repr": "1",
            "kind": "literal",
            "literal": {
              "kind": "number",
              "number": 1.0
            }
          },
          "jsDoc": {
            "doc": "Shard started to connect to the gateway.\nThis is only used if the shard is not currently trying to identify or resume."
          }
        },
        {
          "name": "Disconnected",
          "init": {
            "repr": "2",
            "kind": "literal",
            "literal": {
              "kind": "number",
              "number": 2.0
            }
          },
          "jsDoc": {
            "doc": "Shard got disconnected and reconnection actions have been started."
          }
        },
        {
          "name": "Unidentified",
          "init": {
            "repr": "3",
            "kind": "literal",
            "literal": {
              "kind": "number",
              "number": 3.0
            }
          },
          "jsDoc": {
            "doc": "The shard is connected to the gateway but only heartbeating.\nAt this state the shard has not been identified with discord."
          }
        },
        {
          "name": "Identifying",
          "init": {
            "repr": "4",
            "kind": "literal",
            "literal": {
              "kind": "number",
              "number": 4.0
            }
          },
          "jsDoc": {
            "doc": "Shard is trying to identify with the gateway to create a new session."
          }
        },
        {
          "name": "Resuming",
          "init": {
            "repr": "5",
            "kind": "literal",
            "literal": {
              "kind": "number",
              "number": 5.0
            }
          },
          "jsDoc": {
            "doc": "Shard is trying to resume a session with the gateway."
          }
        },
        {
          "name": "Offline",
          "init": {
            "repr": "6",
            "kind": "literal",
            "literal": {
              "kind": "number",
              "number": 6.0
            }
          },
          "jsDoc": {
            "doc": "Shard got shut down studied or due to a not (self) fixable error and may not attempt to reconnect on its own."
          }
        }
      ]
    }
  },
  {
    "kind": "interface",
    "name": "ShardGatewayConfig",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/types.ts",
      "line": 34,
      "col": 0
    },
    "declarationKind": "export",
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "compress",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/types.ts",
            "line": 39,
            "col": 4
          },
          "jsDoc": {
            "doc": "Whether incoming payloads are compressed using zlib.\n",
            "tags": [
              {
                "kind": "unsupported",
                "value": "@default false"
              }
            ]
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        },
        {
          "name": "intents",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/types.ts",
            "line": 44,
            "col": 4
          },
          "jsDoc": {
            "doc": "The calculated intent value of the events which the shard should receive.\n",
            "tags": [
              {
                "kind": "unsupported",
                "value": "@default 0"
              }
            ]
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "properties",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/types.ts",
            "line": 46,
            "col": 4
          },
          "jsDoc": {
            "doc": "Identify properties to use"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "",
            "kind": "typeLiteral",
            "typeLiteral": {
              "methods": [],
              "properties": [
                {
                  "name": "os",
                  "params": [],
                  "computed": false,
                  "optional": false,
                  "tsType": {
                    "repr": "string",
                    "kind": "keyword",
                    "keyword": "string"
                  },
                  "typeParams": []
                },
                {
                  "name": "browser",
                  "params": [],
                  "computed": false,
                  "optional": false,
                  "tsType": {
                    "repr": "string",
                    "kind": "keyword",
                    "keyword": "string"
                  },
                  "typeParams": []
                },
                {
                  "name": "device",
                  "params": [],
                  "computed": false,
                  "optional": false,
                  "tsType": {
                    "repr": "string",
                    "kind": "keyword",
                    "keyword": "string"
                  },
                  "typeParams": []
                }
              ],
              "callSignatures": [],
              "indexSignatures": []
            }
          },
          "typeParams": []
        },
        {
          "name": "token",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/types.ts",
            "line": 64,
            "col": 4
          },
          "jsDoc": {
            "doc": "Bot token which is used to connect to Discord"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "url",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/types.ts",
            "line": 69,
            "col": 4
          },
          "jsDoc": {
            "doc": "The URL of the gateway which should be connected to.\n",
            "tags": [
              {
                "kind": "unsupported",
                "value": "@default \"wss://gateway.discord.gg\""
              }
            ]
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "version",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/types.ts",
            "line": 74,
            "col": 4
          },
          "jsDoc": {
            "doc": "The gateway version which should be used.\n",
            "tags": [
              {
                "kind": "unsupported",
                "value": "@default 10"
              }
            ]
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "ShardHeart",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/types.ts",
      "line": 77,
      "col": 0
    },
    "declarationKind": "export",
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "acknowledged",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/types.ts",
            "line": 79,
            "col": 4
          },
          "jsDoc": {
            "doc": "Whether or not the heartbeat was acknowledged by Discord in time."
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        },
        {
          "name": "interval",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/types.ts",
            "line": 81,
            "col": 4
          },
          "jsDoc": {
            "doc": "Interval between heartbeats requested by Discord."
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "intervalId",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/types.ts",
            "line": 83,
            "col": 4
          },
          "jsDoc": {
            "doc": "Id of the interval, which is used for sending the heartbeats."
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "lastAck",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/types.ts",
            "line": 85,
            "col": 4
          },
          "jsDoc": {
            "doc": "Unix (in milliseconds) timestamp when the last heartbeat ACK was received from Discord."
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "lastBeat",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/types.ts",
            "line": 87,
            "col": 4
          },
          "jsDoc": {
            "doc": "Unix timestamp (in milliseconds) when the last heartbeat was sent."
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "rtt",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/types.ts",
            "line": 92,
            "col": 4
          },
          "jsDoc": {
            "doc": "Round trip time (in milliseconds) from Shard to Discord and back.\nCalculated using the heartbeat system.\nNote: this value is undefined until the first heartbeat to Discord has happened."
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "timeoutId",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/types.ts",
            "line": 94,
            "col": 4
          },
          "jsDoc": {
            "doc": "Id of the timeout which is used for sending the first heartbeat to Discord since it's \"special\"."
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "ShardEvents",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/types.ts",
      "line": 97,
      "col": 0
    },
    "declarationKind": "export",
    "interfaceDef": {
      "extends": [],
      "methods": [
        {
          "name": "heartbeat",
          "kind": "method",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/types.ts",
            "line": 99,
            "col": 4
          },
          "jsDoc": {
            "doc": "A heartbeat has been send."
          },
          "optional": true,
          "params": [
            {
              "kind": "identifier",
              "name": "shard",
              "optional": false,
              "tsType": {
                "repr": "Shard",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Shard"
                }
              }
            }
          ],
          "returnType": {
            "repr": "unknown",
            "kind": "keyword",
            "keyword": "unknown"
          },
          "typeParams": []
        },
        {
          "name": "heartbeatAck",
          "kind": "method",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/types.ts",
            "line": 101,
            "col": 4
          },
          "jsDoc": {
            "doc": "A heartbeat ACK was received."
          },
          "optional": true,
          "params": [
            {
              "kind": "identifier",
              "name": "shard",
              "optional": false,
              "tsType": {
                "repr": "Shard",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Shard"
                }
              }
            }
          ],
          "returnType": {
            "repr": "unknown",
            "kind": "keyword",
            "keyword": "unknown"
          },
          "typeParams": []
        },
        {
          "name": "hello",
          "kind": "method",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/types.ts",
            "line": 103,
            "col": 4
          },
          "jsDoc": {
            "doc": "Shard has received a Hello payload."
          },
          "optional": true,
          "params": [
            {
              "kind": "identifier",
              "name": "shard",
              "optional": false,
              "tsType": {
                "repr": "Shard",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Shard"
                }
              }
            }
          ],
          "returnType": {
            "repr": "unknown",
            "kind": "keyword",
            "keyword": "unknown"
          },
          "typeParams": []
        },
        {
          "name": "invalidSession",
          "kind": "method",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/types.ts",
            "line": 105,
            "col": 4
          },
          "jsDoc": {
            "doc": "The Shards session has been invalidated."
          },
          "optional": true,
          "params": [
            {
              "kind": "identifier",
              "name": "shard",
              "optional": false,
              "tsType": {
                "repr": "Shard",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Shard"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "resumable",
              "optional": false,
              "tsType": {
                "repr": "boolean",
                "kind": "keyword",
                "keyword": "boolean"
              }
            }
          ],
          "returnType": {
            "repr": "unknown",
            "kind": "keyword",
            "keyword": "unknown"
          },
          "typeParams": []
        },
        {
          "name": "resuming",
          "kind": "method",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/types.ts",
            "line": 107,
            "col": 4
          },
          "jsDoc": {
            "doc": "The shard has started a resume action."
          },
          "optional": true,
          "params": [
            {
              "kind": "identifier",
              "name": "shard",
              "optional": false,
              "tsType": {
                "repr": "Shard",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Shard"
                }
              }
            }
          ],
          "returnType": {
            "repr": "unknown",
            "kind": "keyword",
            "keyword": "unknown"
          },
          "typeParams": []
        },
        {
          "name": "resumed",
          "kind": "method",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/types.ts",
            "line": 109,
            "col": 4
          },
          "jsDoc": {
            "doc": "The shard has successfully resumed an old session."
          },
          "optional": true,
          "params": [
            {
              "kind": "identifier",
              "name": "shard",
              "optional": false,
              "tsType": {
                "repr": "Shard",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Shard"
                }
              }
            }
          ],
          "returnType": {
            "repr": "unknown",
            "kind": "keyword",
            "keyword": "unknown"
          },
          "typeParams": []
        },
        {
          "name": "requestedReconnect",
          "kind": "method",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/types.ts",
            "line": 111,
            "col": 4
          },
          "jsDoc": {
            "doc": "Discord has requested the Shard to reconnect."
          },
          "optional": true,
          "params": [
            {
              "kind": "identifier",
              "name": "shard",
              "optional": false,
              "tsType": {
                "repr": "Shard",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Shard"
                }
              }
            }
          ],
          "returnType": {
            "repr": "unknown",
            "kind": "keyword",
            "keyword": "unknown"
          },
          "typeParams": []
        },
        {
          "name": "connecting",
          "kind": "method",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/types.ts",
            "line": 113,
            "col": 4
          },
          "jsDoc": {
            "doc": "The shard started to connect to Discord's gateway."
          },
          "optional": true,
          "params": [
            {
              "kind": "identifier",
              "name": "shard",
              "optional": false,
              "tsType": {
                "repr": "Shard",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Shard"
                }
              }
            }
          ],
          "returnType": {
            "repr": "unknown",
            "kind": "keyword",
            "keyword": "unknown"
          },
          "typeParams": []
        },
        {
          "name": "connected",
          "kind": "method",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/types.ts",
            "line": 115,
            "col": 4
          },
          "jsDoc": {
            "doc": "The shard is connected with Discord's gateway."
          },
          "optional": true,
          "params": [
            {
              "kind": "identifier",
              "name": "shard",
              "optional": false,
              "tsType": {
                "repr": "Shard",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Shard"
                }
              }
            }
          ],
          "returnType": {
            "repr": "unknown",
            "kind": "keyword",
            "keyword": "unknown"
          },
          "typeParams": []
        },
        {
          "name": "disconnected",
          "kind": "method",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/types.ts",
            "line": 117,
            "col": 4
          },
          "jsDoc": {
            "doc": "The shard has been disconnected from Discord's gateway."
          },
          "optional": true,
          "params": [
            {
              "kind": "identifier",
              "name": "shard",
              "optional": false,
              "tsType": {
                "repr": "Shard",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Shard"
                }
              }
            }
          ],
          "returnType": {
            "repr": "unknown",
            "kind": "keyword",
            "keyword": "unknown"
          },
          "typeParams": []
        },
        {
          "name": "identifying",
          "kind": "method",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/types.ts",
            "line": 119,
            "col": 4
          },
          "jsDoc": {
            "doc": "The shard has started to identify itself to Discord."
          },
          "optional": true,
          "params": [
            {
              "kind": "identifier",
              "name": "shard",
              "optional": false,
              "tsType": {
                "repr": "Shard",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Shard"
                }
              }
            }
          ],
          "returnType": {
            "repr": "unknown",
            "kind": "keyword",
            "keyword": "unknown"
          },
          "typeParams": []
        },
        {
          "name": "identified",
          "kind": "method",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/types.ts",
            "line": 121,
            "col": 4
          },
          "jsDoc": {
            "doc": "The shard has successfully been identified itself with Discord."
          },
          "optional": true,
          "params": [
            {
              "kind": "identifier",
              "name": "shard",
              "optional": false,
              "tsType": {
                "repr": "Shard",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Shard"
                }
              }
            }
          ],
          "returnType": {
            "repr": "unknown",
            "kind": "keyword",
            "keyword": "unknown"
          },
          "typeParams": []
        },
        {
          "name": "message",
          "kind": "method",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/types.ts",
            "line": 123,
            "col": 4
          },
          "jsDoc": {
            "doc": "The shard has received a message from Discord."
          },
          "optional": true,
          "params": [
            {
              "kind": "identifier",
              "name": "shard",
              "optional": false,
              "tsType": {
                "repr": "Shard",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Shard"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "payload",
              "optional": false,
              "tsType": {
                "repr": "DiscordGatewayPayload",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "DiscordGatewayPayload"
                }
              }
            }
          ],
          "returnType": {
            "repr": "unknown",
            "kind": "keyword",
            "keyword": "unknown"
          },
          "typeParams": []
        }
      ],
      "properties": [],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "enum",
    "name": "ShardSocketCloseCodes",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/types.ts",
      "line": 126,
      "col": 0
    },
    "declarationKind": "export",
    "enumDef": {
      "members": [
        {
          "name": "Shutdown",
          "init": {
            "repr": "3000",
            "kind": "literal",
            "literal": {
              "kind": "number",
              "number": 3000.0
            }
          },
          "jsDoc": {
            "doc": "A regular Shard shutdown."
          }
        },
        {
          "name": "ResumeClosingOldConnection",
          "init": {
            "repr": "3024",
            "kind": "literal",
            "literal": {
              "kind": "number",
              "number": 3024.0
            }
          },
          "jsDoc": {
            "doc": "A resume has been requested and therefore the old connection needs to be closed."
          }
        },
        {
          "name": "ZombiedConnection",
          "init": {
            "repr": "3010",
            "kind": "literal",
            "literal": {
              "kind": "number",
              "number": 3010.0
            }
          },
          "jsDoc": {
            "doc": "Did not receive a heartbeat ACK in time.\nClosing the shard and creating a new session."
          }
        },
        {
          "name": "TestingFinished",
          "init": {
            "repr": "3064",
            "kind": "literal",
            "literal": {
              "kind": "number",
              "number": 3064.0
            }
          },
          "jsDoc": {
            "doc": "Discordeno's gateway tests hae been finished, therefore the Shard can be turned off."
          }
        },
        {
          "name": "Resharded",
          "init": {
            "repr": "3065",
            "kind": "literal",
            "literal": {
              "kind": "number",
              "number": 3065.0
            }
          },
          "jsDoc": {
            "doc": "Special close code reserved for Discordeno's zero-downtime resharding system."
          }
        },
        {
          "name": "ReIdentifying",
          "init": {
            "repr": "3066",
            "kind": "literal",
            "literal": {
              "kind": "number",
              "number": 3066.0
            }
          },
          "jsDoc": {
            "doc": "Shard is re-identifying therefore the old connection needs to be closed."
          }
        }
      ]
    }
  },
  {
    "kind": "interface",
    "name": "ShardSocketRequest",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/types.ts",
      "line": 143,
      "col": 0
    },
    "declarationKind": "export",
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "op",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/types.ts",
            "line": 145,
            "col": 4
          },
          "jsDoc": {
            "doc": "The OP-Code for the payload to send."
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "GatewayOpcodes",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "GatewayOpcodes"
            }
          },
          "typeParams": []
        },
        {
          "name": "d",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/types.ts",
            "line": 147,
            "col": 4
          },
          "jsDoc": {
            "doc": "Payload data."
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "unknown",
            "kind": "keyword",
            "keyword": "unknown"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "import",
    "name": "DiscordGatewayPayload",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/types.ts",
      "line": 1,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "imported": "DiscordGatewayPayload"
    }
  },
  {
    "kind": "import",
    "name": "GatewayOpcodes",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/types.ts",
      "line": 2,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/types/shared.ts",
      "imported": "GatewayOpcodes"
    }
  },
  {
    "kind": "import",
    "name": "createShard",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/types.ts",
      "line": 3,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/createShard.ts",
      "imported": "createShard"
    }
  },
  {
    "kind": "function",
    "name": "handleMessage",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/handleMessage.ts",
      "line": 10,
      "col": 0
    },
    "declarationKind": "export",
    "functionDef": {
      "params": [
        {
          "kind": "identifier",
          "name": "shard",
          "optional": false,
          "tsType": {
            "repr": "Shard",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Shard"
            }
          }
        },
        {
          "kind": "identifier",
          "name": "message_",
          "optional": false,
          "tsType": {
            "repr": "MessageEvent",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": [
                {
                  "repr": "any",
                  "kind": "keyword",
                  "keyword": "any"
                }
              ],
              "typeName": "MessageEvent"
            }
          }
        }
      ],
      "returnType": {
        "repr": "Promise",
        "kind": "typeRef",
        "typeRef": {
          "typeParams": [
            {
              "repr": "void",
              "kind": "keyword",
              "keyword": "void"
            }
          ],
          "typeName": "Promise"
        }
      },
      "isAsync": true,
      "isGenerator": false,
      "typeParams": []
    }
  },
  {
    "kind": "import",
    "name": "DiscordGatewayPayload",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/handleMessage.ts",
      "line": 1,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "imported": "DiscordGatewayPayload"
    }
  },
  {
    "kind": "import",
    "name": "DiscordHello",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/handleMessage.ts",
      "line": 1,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "imported": "DiscordHello"
    }
  },
  {
    "kind": "import",
    "name": "DiscordReady",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/handleMessage.ts",
      "line": 1,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "imported": "DiscordReady"
    }
  },
  {
    "kind": "import",
    "name": "GatewayOpcodes",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/handleMessage.ts",
      "line": 2,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/types/shared.ts",
      "imported": "GatewayOpcodes"
    }
  },
  {
    "kind": "import",
    "name": "createLeakyBucket",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/handleMessage.ts",
      "line": 3,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/util/bucket.ts",
      "imported": "createLeakyBucket"
    }
  },
  {
    "kind": "import",
    "name": "delay",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/handleMessage.ts",
      "line": 4,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/util/delay.ts",
      "imported": "delay"
    }
  },
  {
    "kind": "import",
    "name": "decompressWith",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/handleMessage.ts",
      "line": 5,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/deps.ts",
      "imported": "decompressWith"
    }
  },
  {
    "kind": "import",
    "name": "GATEWAY_RATE_LIMIT_RESET_INTERVAL",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/handleMessage.ts",
      "line": 6,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/types.ts",
      "imported": "GATEWAY_RATE_LIMIT_RESET_INTERVAL"
    }
  },
  {
    "kind": "import",
    "name": "Shard",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/handleMessage.ts",
      "line": 6,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/types.ts",
      "imported": "Shard"
    }
  },
  {
    "kind": "import",
    "name": "ShardState",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/handleMessage.ts",
      "line": 6,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/types.ts",
      "imported": "ShardState"
    }
  },
  {
    "kind": "function",
    "name": "calculateSafeRequests",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/calculateSafeRequests.ts",
      "line": 3,
      "col": 0
    },
    "declarationKind": "export",
    "functionDef": {
      "params": [
        {
          "kind": "identifier",
          "name": "shard",
          "optional": false,
          "tsType": {
            "repr": "Shard",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Shard"
            }
          }
        }
      ],
      "returnType": null,
      "isAsync": false,
      "isGenerator": false,
      "typeParams": []
    }
  },
  {
    "kind": "import",
    "name": "Shard",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/calculateSafeRequests.ts",
      "line": 1,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/types.ts",
      "imported": "Shard"
    }
  },
  {
    "kind": "function",
    "name": "close",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/close.ts",
      "line": 3,
      "col": 0
    },
    "declarationKind": "export",
    "functionDef": {
      "params": [
        {
          "kind": "identifier",
          "name": "shard",
          "optional": false,
          "tsType": {
            "repr": "Shard",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Shard"
            }
          }
        },
        {
          "kind": "identifier",
          "name": "code",
          "optional": false,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          }
        },
        {
          "kind": "identifier",
          "name": "reason",
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          }
        }
      ],
      "returnType": {
        "repr": "void",
        "kind": "keyword",
        "keyword": "void"
      },
      "isAsync": false,
      "isGenerator": false,
      "typeParams": []
    }
  },
  {
    "kind": "import",
    "name": "Shard",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/close.ts",
      "line": 1,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/types.ts",
      "imported": "Shard"
    }
  },
  {
    "kind": "function",
    "name": "createShard",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/createShard.ts",
      "line": 35,
      "col": 0
    },
    "declarationKind": "export",
    "functionDef": {
      "params": [
        {
          "kind": "identifier",
          "name": "options",
          "optional": false,
          "tsType": {
            "repr": "CreateShard",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "CreateShard"
            }
          }
        }
      ],
      "returnType": null,
      "isAsync": false,
      "isGenerator": false,
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "CreateShard",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/createShard.ts",
      "line": 226,
      "col": 0
    },
    "declarationKind": "export",
    "interfaceDef": {
      "extends": [],
      "methods": [
        {
          "name": "makePresence",
          "kind": "method",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/createShard.ts",
            "line": 277,
            "col": 4
          },
          "jsDoc": {
            "doc": "Function which can be overwritten in order to get the shards presence."
          },
          "optional": true,
          "params": [
            {
              "kind": "identifier",
              "name": "shardId",
              "optional": false,
              "tsType": {
                "repr": "number",
                "kind": "keyword",
                "keyword": "number"
              }
            }
          ],
          "returnType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "Promise",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": [
                    {
                      "repr": "DiscordStatusUpdate",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "DiscordStatusUpdate"
                      }
                    }
                  ],
                  "typeName": "Promise"
                }
              },
              {
                "repr": "DiscordStatusUpdate",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "DiscordStatusUpdate"
                }
              }
            ]
          },
          "typeParams": []
        }
      ],
      "properties": [
        {
          "name": "id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/createShard.ts",
            "line": 228,
            "col": 4
          },
          "jsDoc": {
            "doc": "Id of the shard which should be created."
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "gatewayConfig",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/createShard.ts",
            "line": 231,
            "col": 4
          },
          "jsDoc": {
            "doc": "Gateway configuration for the shard."
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "PickPartial",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": [
                {
                  "repr": "ShardGatewayConfig",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "ShardGatewayConfig"
                  }
                },
                {
                  "repr": "token",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "token"
                  }
                }
              ],
              "typeName": "PickPartial"
            }
          },
          "typeParams": []
        },
        {
          "name": "totalShards",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/createShard.ts",
            "line": 234,
            "col": 4
          },
          "jsDoc": {
            "doc": "The total amount of shards which are used to communicate with Discord."
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "requestIdentify",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/createShard.ts",
            "line": 239,
            "col": 4
          },
          "jsDoc": {
            "doc": "This function communicates with the management process, in order to know whether its free to identify.\nWhen this function resolves, this means that the shard is allowed to send an identify payload to discord."
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "",
            "kind": "fnOrConstructor",
            "fnOrConstructor": {
              "constructor": false,
              "tsType": {
                "repr": "Promise",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": [
                    {
                      "repr": "void",
                      "kind": "keyword",
                      "keyword": "void"
                    }
                  ],
                  "typeName": "Promise"
                }
              },
              "params": [
                {
                  "kind": "identifier",
                  "name": "shardId",
                  "optional": false,
                  "tsType": {
                    "repr": "number",
                    "kind": "keyword",
                    "keyword": "number"
                  }
                }
              ],
              "typeParams": []
            }
          },
          "typeParams": []
        },
        {
          "name": "calculateSafeRequests",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/createShard.ts",
            "line": 244,
            "col": 4
          },
          "jsDoc": {
            "doc": "Calculate the amount of requests which can safely be made per rate limit interval,\nbefore the gateway gets disconnected due to an exceeded rate limit."
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "calculateSafeRequests",
            "kind": "typeQuery",
            "typeQuery": "calculateSafeRequests"
          },
          "typeParams": []
        },
        {
          "name": "close",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/createShard.ts",
            "line": 247,
            "col": 4
          },
          "jsDoc": {
            "doc": "Close the socket connection to discord if present."
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "close",
            "kind": "typeQuery",
            "typeQuery": "close"
          },
          "typeParams": []
        },
        {
          "name": "connect",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/createShard.ts",
            "line": 252,
            "col": 4
          },
          "jsDoc": {
            "doc": "Connect the shard with the gateway and start heartbeating.\nThis will not identify the shard to the gateway."
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "connect",
            "kind": "typeQuery",
            "typeQuery": "connect"
          },
          "typeParams": []
        },
        {
          "name": "handleClose",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/createShard.ts",
            "line": 259,
            "col": 4
          },
          "jsDoc": {
            "tags": [
              {
                "kind": "private"
              }
            ]
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "handleClose",
            "kind": "typeQuery",
            "typeQuery": "handleClose"
          },
          "typeParams": []
        },
        {
          "name": "handleMessage",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/createShard.ts",
            "line": 266,
            "col": 4
          },
          "jsDoc": {
            "tags": [
              {
                "kind": "private"
              }
            ]
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "handleMessage",
            "kind": "typeQuery",
            "typeQuery": "handleMessage"
          },
          "typeParams": []
        },
        {
          "name": "identify",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/createShard.ts",
            "line": 271,
            "col": 4
          },
          "jsDoc": {
            "doc": "Identify the shard to the gateway.\nIf not connected, this will also connect the shard to the gateway."
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "identify",
            "kind": "typeQuery",
            "typeQuery": "identify"
          },
          "typeParams": []
        },
        {
          "name": "isOpen",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/createShard.ts",
            "line": 274,
            "col": 4
          },
          "jsDoc": {
            "doc": "Check whether the connection to Discord is currently open."
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "isOpen",
            "kind": "typeQuery",
            "typeQuery": "isOpen"
          },
          "typeParams": []
        },
        {
          "name": "maxRequestsPerRateLimitTick",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/createShard.ts",
            "line": 282,
            "col": 4
          },
          "jsDoc": {
            "doc": "The maximum of requests which can be send to discord per rate limit tick.\nTypically this value should not be changed."
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "previousSequenceNumber",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/createShard.ts",
            "line": 285,
            "col": 4
          },
          "jsDoc": {
            "doc": "The previous payload sequence number."
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "rateLimitResetInterval",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/createShard.ts",
            "line": 288,
            "col": 4
          },
          "jsDoc": {
            "doc": "In which interval (in milliseconds) the gateway resets it's rate limit."
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "resume",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/createShard.ts",
            "line": 291,
            "col": 4
          },
          "jsDoc": {
            "doc": "Attempt to resume the previous shards session with the gateway."
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "resume",
            "kind": "typeQuery",
            "typeQuery": "resume"
          },
          "typeParams": []
        },
        {
          "name": "send",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/createShard.ts",
            "line": 296,
            "col": 4
          },
          "jsDoc": {
            "doc": "Send a message to Discord.",
            "tags": [
              {
                "kind": "unsupported",
                "value": "@param {boolean} [highPriority=false] - Whether this message should be send asap."
              }
            ]
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "send",
            "kind": "typeQuery",
            "typeQuery": "send"
          },
          "typeParams": []
        },
        {
          "name": "shutdown",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/createShard.ts",
            "line": 302,
            "col": 4
          },
          "jsDoc": {
            "doc": "Shutdown the shard.\nForcefully disconnect the shard from Discord.\nThe shard may not attempt to reconnect with Discord."
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "shutdown",
            "kind": "typeQuery",
            "typeQuery": "shutdown"
          },
          "typeParams": []
        },
        {
          "name": "startHeartbeating",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/createShard.ts",
            "line": 309,
            "col": 4
          },
          "jsDoc": {
            "tags": [
              {
                "kind": "private"
              }
            ]
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "startHeartbeating",
            "kind": "typeQuery",
            "typeQuery": "startHeartbeating"
          },
          "typeParams": []
        },
        {
          "name": "state",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/createShard.ts",
            "line": 312,
            "col": 4
          },
          "jsDoc": {
            "doc": "Current internal state of the shard."
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "ShardState",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "ShardState"
            }
          },
          "typeParams": []
        },
        {
          "name": "stopHeartbeating",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/createShard.ts",
            "line": 319,
            "col": 4
          },
          "jsDoc": {
            "tags": [
              {
                "kind": "private"
              }
            ]
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "stopHeartbeating",
            "kind": "typeQuery",
            "typeQuery": "stopHeartbeating"
          },
          "typeParams": []
        },
        {
          "name": "events",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/createShard.ts",
            "line": 322,
            "col": 4
          },
          "jsDoc": {
            "doc": "The shard related event handlers."
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "ShardEvents",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "ShardEvents"
            }
          },
          "typeParams": []
        },
        {
          "name": "heart",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/createShard.ts",
            "line": 324,
            "col": 4
          },
          "jsDoc": {
            "doc": "This contains all the heartbeat information"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "ShardHeart",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "ShardHeart"
            }
          },
          "typeParams": []
        },
        {
          "name": "bucket",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/createShard.ts",
            "line": 326,
            "col": 4
          },
          "jsDoc": {
            "doc": "Bucket for handling shard request rate limits."
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "LeakyBucket",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "LeakyBucket"
            }
          },
          "typeParams": []
        },
        {
          "name": "offlineSendQueue",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/createShard.ts",
            "line": 328,
            "col": 4
          },
          "jsDoc": {
            "doc": "Cache for pending gateway requests which should have been send while the gateway went offline."
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "ShardSocketRequest",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "ShardSocketRequest"
              }
            }
          },
          "typeParams": []
        },
        {
          "name": "resolves",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/createShard.ts",
            "line": 332,
            "col": 4
          },
          "jsDoc": {
            "doc": "This is used to resolve internal waiting states.\nMapped by SelectedEvents => ResolveFunction"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "indexedAccess",
            "indexedAccess": {
              "readonly": false,
              "objType": {
                "repr": "Shard",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Shard"
                }
              },
              "indexType": {
                "repr": "resolves",
                "kind": "literal",
                "literal": {
                  "kind": "string",
                  "string": "resolves"
                }
              }
            }
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "import",
    "name": "identify",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/createShard.ts",
      "line": 1,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/identify.ts",
      "imported": "identify"
    }
  },
  {
    "kind": "import",
    "name": "handleMessage",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/createShard.ts",
      "line": 2,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/handleMessage.ts",
      "imported": "handleMessage"
    }
  },
  {
    "kind": "import",
    "name": "DEFAULT_HEARTBEAT_INTERVAL",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/createShard.ts",
      "line": 3,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/types.ts",
      "imported": "DEFAULT_HEARTBEAT_INTERVAL"
    }
  },
  {
    "kind": "import",
    "name": "GATEWAY_RATE_LIMIT_RESET_INTERVAL",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/createShard.ts",
      "line": 3,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/types.ts",
      "imported": "GATEWAY_RATE_LIMIT_RESET_INTERVAL"
    }
  },
  {
    "kind": "import",
    "name": "MAX_GATEWAY_REQUESTS_PER_INTERVAL",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/createShard.ts",
      "line": 3,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/types.ts",
      "imported": "MAX_GATEWAY_REQUESTS_PER_INTERVAL"
    }
  },
  {
    "kind": "import",
    "name": "Shard",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/createShard.ts",
      "line": 3,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/types.ts",
      "imported": "Shard"
    }
  },
  {
    "kind": "import",
    "name": "ShardEvents",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/createShard.ts",
      "line": 3,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/types.ts",
      "imported": "ShardEvents"
    }
  },
  {
    "kind": "import",
    "name": "ShardGatewayConfig",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/createShard.ts",
      "line": 3,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/types.ts",
      "imported": "ShardGatewayConfig"
    }
  },
  {
    "kind": "import",
    "name": "ShardHeart",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/createShard.ts",
      "line": 3,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/types.ts",
      "imported": "ShardHeart"
    }
  },
  {
    "kind": "import",
    "name": "ShardSocketCloseCodes",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/createShard.ts",
      "line": 3,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/types.ts",
      "imported": "ShardSocketCloseCodes"
    }
  },
  {
    "kind": "import",
    "name": "ShardSocketRequest",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/createShard.ts",
      "line": 3,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/types.ts",
      "imported": "ShardSocketRequest"
    }
  },
  {
    "kind": "import",
    "name": "ShardState",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/createShard.ts",
      "line": 3,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/types.ts",
      "imported": "ShardState"
    }
  },
  {
    "kind": "import",
    "name": "startHeartbeating",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/createShard.ts",
      "line": 15,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/startHeartbeating.ts",
      "imported": "startHeartbeating"
    }
  },
  {
    "kind": "import",
    "name": "stopHeartbeating",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/createShard.ts",
      "line": 16,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/stopHeartbeating.ts",
      "imported": "stopHeartbeating"
    }
  },
  {
    "kind": "import",
    "name": "resume",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/createShard.ts",
      "line": 17,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/resume.ts",
      "imported": "resume"
    }
  },
  {
    "kind": "import",
    "name": "createLeakyBucket",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/createShard.ts",
      "line": 18,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/util/bucket.ts",
      "imported": "createLeakyBucket"
    }
  },
  {
    "kind": "import",
    "name": "LeakyBucket",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/createShard.ts",
      "line": 18,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/util/bucket.ts",
      "imported": "LeakyBucket"
    }
  },
  {
    "kind": "import",
    "name": "calculateSafeRequests",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/createShard.ts",
      "line": 19,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/calculateSafeRequests.ts",
      "imported": "calculateSafeRequests"
    }
  },
  {
    "kind": "import",
    "name": "send",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/createShard.ts",
      "line": 20,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/send.ts",
      "imported": "send"
    }
  },
  {
    "kind": "import",
    "name": "handleClose",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/createShard.ts",
      "line": 21,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/handleClose.ts",
      "imported": "handleClose"
    }
  },
  {
    "kind": "import",
    "name": "connect",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/createShard.ts",
      "line": 22,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/connect.ts",
      "imported": "connect"
    }
  },
  {
    "kind": "import",
    "name": "close",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/createShard.ts",
      "line": 23,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/close.ts",
      "imported": "close"
    }
  },
  {
    "kind": "import",
    "name": "shutdown",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/createShard.ts",
      "line": 24,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/shutdown.ts",
      "imported": "shutdown"
    }
  },
  {
    "kind": "import",
    "name": "isOpen",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/createShard.ts",
      "line": 25,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/isOpen.ts",
      "imported": "isOpen"
    }
  },
  {
    "kind": "import",
    "name": "DiscordGatewayPayload",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/createShard.ts",
      "line": 26,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "imported": "DiscordGatewayPayload"
    }
  },
  {
    "kind": "import",
    "name": "DiscordStatusUpdate",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/createShard.ts",
      "line": 26,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/types/discord.ts",
      "imported": "DiscordStatusUpdate"
    }
  },
  {
    "kind": "import",
    "name": "GatewayIntents",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/createShard.ts",
      "line": 27,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/types/shared.ts",
      "imported": "GatewayIntents"
    }
  },
  {
    "kind": "import",
    "name": "PickPartial",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/createShard.ts",
      "line": 27,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/types/shared.ts",
      "imported": "PickPartial"
    }
  },
  {
    "kind": "import",
    "name": "API_VERSION",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/createShard.ts",
      "line": 28,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/util/constants.ts",
      "imported": "API_VERSION"
    }
  },
  {
    "kind": "function",
    "name": "connect",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/connect.ts",
      "line": 6,
      "col": 0
    },
    "declarationKind": "export",
    "functionDef": {
      "params": [
        {
          "kind": "identifier",
          "name": "shard",
          "optional": false,
          "tsType": {
            "repr": "Shard",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Shard"
            }
          }
        }
      ],
      "returnType": {
        "repr": "Promise",
        "kind": "typeRef",
        "typeRef": {
          "typeParams": [
            {
              "repr": "void",
              "kind": "keyword",
              "keyword": "void"
            }
          ],
          "typeName": "Promise"
        }
      },
      "isAsync": true,
      "isGenerator": false,
      "typeParams": []
    }
  },
  {
    "kind": "import",
    "name": "Shard",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/connect.ts",
      "line": 1,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/types.ts",
      "imported": "Shard"
    }
  },
  {
    "kind": "import",
    "name": "ShardState",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/connect.ts",
      "line": 1,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/types.ts",
      "imported": "ShardState"
    }
  },
  {
    "kind": "function",
    "name": "isOpen",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/isOpen.ts",
      "line": 3,
      "col": 0
    },
    "declarationKind": "export",
    "functionDef": {
      "params": [
        {
          "kind": "identifier",
          "name": "shard",
          "optional": false,
          "tsType": {
            "repr": "Shard",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Shard"
            }
          }
        }
      ],
      "returnType": {
        "repr": "boolean",
        "kind": "keyword",
        "keyword": "boolean"
      },
      "isAsync": false,
      "isGenerator": false,
      "typeParams": []
    }
  },
  {
    "kind": "import",
    "name": "Shard",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/isOpen.ts",
      "line": 1,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/types.ts",
      "imported": "Shard"
    }
  },
  {
    "kind": "function",
    "name": "resume",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/resume.ts",
      "line": 4,
      "col": 0
    },
    "declarationKind": "export",
    "functionDef": {
      "params": [
        {
          "kind": "identifier",
          "name": "shard",
          "optional": false,
          "tsType": {
            "repr": "Shard",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Shard"
            }
          }
        }
      ],
      "returnType": {
        "repr": "Promise",
        "kind": "typeRef",
        "typeRef": {
          "typeParams": [
            {
              "repr": "void",
              "kind": "keyword",
              "keyword": "void"
            }
          ],
          "typeName": "Promise"
        }
      },
      "isAsync": true,
      "isGenerator": false,
      "typeParams": []
    }
  },
  {
    "kind": "import",
    "name": "GatewayOpcodes",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/resume.ts",
      "line": 1,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/types/shared.ts",
      "imported": "GatewayOpcodes"
    }
  },
  {
    "kind": "import",
    "name": "Shard",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/resume.ts",
      "line": 2,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/types.ts",
      "imported": "Shard"
    }
  },
  {
    "kind": "import",
    "name": "ShardSocketCloseCodes",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/resume.ts",
      "line": 2,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/types.ts",
      "imported": "ShardSocketCloseCodes"
    }
  },
  {
    "kind": "import",
    "name": "ShardState",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/resume.ts",
      "line": 2,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/types.ts",
      "imported": "ShardState"
    }
  },
  {
    "kind": "function",
    "name": "handleClose",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/handleClose.ts",
      "line": 4,
      "col": 0
    },
    "declarationKind": "export",
    "functionDef": {
      "params": [
        {
          "kind": "identifier",
          "name": "shard",
          "optional": false,
          "tsType": {
            "repr": "Shard",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Shard"
            }
          }
        },
        {
          "kind": "identifier",
          "name": "close",
          "optional": false,
          "tsType": {
            "repr": "CloseEvent",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "CloseEvent"
            }
          }
        }
      ],
      "returnType": {
        "repr": "Promise",
        "kind": "typeRef",
        "typeRef": {
          "typeParams": [
            {
              "repr": "void",
              "kind": "keyword",
              "keyword": "void"
            }
          ],
          "typeName": "Promise"
        }
      },
      "isAsync": true,
      "isGenerator": false,
      "typeParams": []
    }
  },
  {
    "kind": "import",
    "name": "GatewayCloseEventCodes",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/handleClose.ts",
      "line": 1,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/types/shared.ts",
      "imported": "GatewayCloseEventCodes"
    }
  },
  {
    "kind": "import",
    "name": "Shard",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/handleClose.ts",
      "line": 2,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/types.ts",
      "imported": "Shard"
    }
  },
  {
    "kind": "import",
    "name": "ShardSocketCloseCodes",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/handleClose.ts",
      "line": 2,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/types.ts",
      "imported": "ShardSocketCloseCodes"
    }
  },
  {
    "kind": "import",
    "name": "ShardState",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/handleClose.ts",
      "line": 2,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/types.ts",
      "imported": "ShardState"
    }
  },
  {
    "kind": "function",
    "name": "identify",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/identify.ts",
      "line": 4,
      "col": 0
    },
    "declarationKind": "export",
    "functionDef": {
      "params": [
        {
          "kind": "identifier",
          "name": "shard",
          "optional": false,
          "tsType": {
            "repr": "Shard",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Shard"
            }
          }
        }
      ],
      "returnType": {
        "repr": "Promise",
        "kind": "typeRef",
        "typeRef": {
          "typeParams": [
            {
              "repr": "void",
              "kind": "keyword",
              "keyword": "void"
            }
          ],
          "typeName": "Promise"
        }
      },
      "isAsync": true,
      "isGenerator": false,
      "typeParams": []
    }
  },
  {
    "kind": "import",
    "name": "GatewayOpcodes",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/identify.ts",
      "line": 1,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/types/shared.ts",
      "imported": "GatewayOpcodes"
    }
  },
  {
    "kind": "import",
    "name": "Shard",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/identify.ts",
      "line": 2,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/types.ts",
      "imported": "Shard"
    }
  },
  {
    "kind": "import",
    "name": "ShardSocketCloseCodes",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/identify.ts",
      "line": 2,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/types.ts",
      "imported": "ShardSocketCloseCodes"
    }
  },
  {
    "kind": "import",
    "name": "ShardState",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/identify.ts",
      "line": 2,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/types.ts",
      "imported": "ShardState"
    }
  },
  {
    "kind": "function",
    "name": "shutdown",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/shutdown.ts",
      "line": 3,
      "col": 0
    },
    "declarationKind": "export",
    "functionDef": {
      "params": [
        {
          "kind": "identifier",
          "name": "shard",
          "optional": false,
          "tsType": {
            "repr": "Shard",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Shard"
            }
          }
        }
      ],
      "returnType": {
        "repr": "Promise",
        "kind": "typeRef",
        "typeRef": {
          "typeParams": [
            {
              "repr": "void",
              "kind": "keyword",
              "keyword": "void"
            }
          ],
          "typeName": "Promise"
        }
      },
      "isAsync": true,
      "isGenerator": false,
      "typeParams": []
    }
  },
  {
    "kind": "import",
    "name": "Shard",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/shutdown.ts",
      "line": 1,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/types.ts",
      "imported": "Shard"
    }
  },
  {
    "kind": "import",
    "name": "ShardSocketCloseCodes",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/shutdown.ts",
      "line": 1,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/types.ts",
      "imported": "ShardSocketCloseCodes"
    }
  },
  {
    "kind": "import",
    "name": "ShardState",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/shutdown.ts",
      "line": 1,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/types.ts",
      "imported": "ShardState"
    }
  },
  {
    "kind": "function",
    "name": "send",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/send.ts",
      "line": 16,
      "col": 0
    },
    "declarationKind": "export",
    "functionDef": {
      "params": [
        {
          "kind": "identifier",
          "name": "shard",
          "optional": false,
          "tsType": {
            "repr": "Shard",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Shard"
            }
          }
        },
        {
          "kind": "identifier",
          "name": "message",
          "optional": false,
          "tsType": {
            "repr": "ShardSocketRequest",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "ShardSocketRequest"
            }
          }
        },
        {
          "kind": "identifier",
          "name": "highPriority",
          "optional": false,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          }
        }
      ],
      "returnType": {
        "repr": "Promise",
        "kind": "typeRef",
        "typeRef": {
          "typeParams": [
            {
              "repr": "void",
              "kind": "keyword",
              "keyword": "void"
            }
          ],
          "typeName": "Promise"
        }
      },
      "isAsync": true,
      "isGenerator": false,
      "typeParams": []
    }
  },
  {
    "kind": "import",
    "name": "Shard",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/send.ts",
      "line": 1,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/types.ts",
      "imported": "Shard"
    }
  },
  {
    "kind": "import",
    "name": "ShardSocketRequest",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/send.ts",
      "line": 1,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/types.ts",
      "imported": "ShardSocketRequest"
    }
  },
  {
    "kind": "function",
    "name": "startHeartbeating",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/startHeartbeating.ts",
      "line": 4,
      "col": 0
    },
    "declarationKind": "export",
    "functionDef": {
      "params": [
        {
          "kind": "identifier",
          "name": "shard",
          "optional": false,
          "tsType": {
            "repr": "Shard",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Shard"
            }
          }
        },
        {
          "kind": "identifier",
          "name": "interval",
          "optional": false,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          }
        }
      ],
      "returnType": null,
      "isAsync": false,
      "isGenerator": false,
      "typeParams": []
    }
  },
  {
    "kind": "import",
    "name": "GatewayOpcodes",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/startHeartbeating.ts",
      "line": 1,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/types/shared.ts",
      "imported": "GatewayOpcodes"
    }
  },
  {
    "kind": "import",
    "name": "Shard",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/startHeartbeating.ts",
      "line": 2,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/types.ts",
      "imported": "Shard"
    }
  },
  {
    "kind": "import",
    "name": "ShardSocketCloseCodes",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/startHeartbeating.ts",
      "line": 2,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/types.ts",
      "imported": "ShardSocketCloseCodes"
    }
  },
  {
    "kind": "import",
    "name": "ShardState",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/startHeartbeating.ts",
      "line": 2,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/gateway/shard/types.ts",
      "imported": "ShardState"
    }
  },
  {
    "kind": "variable",
    "name": "BASE_URL",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/util/constants.ts",
      "line": 2,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "https://discord.com/developers/docs/reference#api-reference-base-url"
    },
    "variableDef": {
      "tsType": {
        "repr": "https://discord.com/api",
        "kind": "literal",
        "literal": {
          "kind": "string",
          "string": "https://discord.com/api"
        }
      },
      "kind": "const"
    }
  },
  {
    "kind": "variable",
    "name": "API_VERSION",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/util/constants.ts",
      "line": 5,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "https://discord.com/developers/docs/reference#api-versioning-api-versions"
    },
    "variableDef": {
      "tsType": {
        "repr": "10",
        "kind": "literal",
        "literal": {
          "kind": "number",
          "number": 10.0
        }
      },
      "kind": "const"
    }
  },
  {
    "kind": "variable",
    "name": "DISCORDENO_VERSION",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/util/constants.ts",
      "line": 9,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "https://github.com/discordeno/discordeno/releases"
    },
    "variableDef": {
      "tsType": {
        "repr": "13.0.0-rc45",
        "kind": "literal",
        "literal": {
          "kind": "string",
          "string": "13.0.0-rc45"
        }
      },
      "kind": "const"
    }
  },
  {
    "kind": "variable",
    "name": "USER_AGENT",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/util/constants.ts",
      "line": 12,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "https://discord.com/developers/docs/reference#user-agent"
    },
    "variableDef": {
      "tsType": {
        "repr": "string",
        "kind": "keyword",
        "keyword": "string"
      },
      "kind": "const"
    }
  },
  {
    "kind": "variable",
    "name": "IMAGE_BASE_URL",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/util/constants.ts",
      "line": 15,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "https://discord.com/developers/docs/reference#image-formatting-image-base-url"
    },
    "variableDef": {
      "tsType": {
        "repr": "https://cdn.discordapp.com",
        "kind": "literal",
        "literal": {
          "kind": "string",
          "string": "https://cdn.discordapp.com"
        }
      },
      "kind": "const"
    }
  },
  {
    "kind": "variable",
    "name": "baseEndpoints",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/util/constants.ts",
      "line": 18,
      "col": 0
    },
    "declarationKind": "export",
    "variableDef": {
      "tsType": null,
      "kind": "const"
    }
  },
  {
    "kind": "variable",
    "name": "SLASH_COMMANDS_NAME_REGEX",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/util/constants.ts",
      "line": 23,
      "col": 0
    },
    "declarationKind": "export",
    "variableDef": {
      "tsType": {
        "repr": "^[-_\\p{L}\\p{N}\\p{sc=Deva}\\p{sc=Thai}]{1,32}$",
        "kind": "typeRef",
        "typeRef": {
          "typeParams": null,
          "typeName": "RegExp"
        }
      },
      "kind": "const"
    }
  },
  {
    "kind": "variable",
    "name": "CONTEXT_MENU_COMMANDS_NAME_REGEX",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/util/constants.ts",
      "line": 24,
      "col": 0
    },
    "declarationKind": "export",
    "variableDef": {
      "tsType": {
        "repr": "^[\\w-\\s]{1,32}$",
        "kind": "typeRef",
        "typeRef": {
          "typeParams": null,
          "typeName": "RegExp"
        }
      },
      "kind": "const"
    }
  },
  {
    "kind": "variable",
    "name": "CHANNEL_MENTION_REGEX",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/util/constants.ts",
      "line": 25,
      "col": 0
    },
    "declarationKind": "export",
    "variableDef": {
      "tsType": {
        "repr": "<#[0-9]+>",
        "kind": "typeRef",
        "typeRef": {
          "typeParams": null,
          "typeName": "RegExp"
        }
      },
      "kind": "const"
    }
  },
  {
    "kind": "variable",
    "name": "DISCORD_SNOWFLAKE_REGEX",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/util/constants.ts",
      "line": 26,
      "col": 0
    },
    "declarationKind": "export",
    "variableDef": {
      "tsType": {
        "repr": "^(?<id>\\d{17,19})$",
        "kind": "typeRef",
        "typeRef": {
          "typeParams": null,
          "typeName": "RegExp"
        }
      },
      "kind": "const"
    }
  },
  {
    "kind": "function",
    "name": "removeTokenPrefix",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/util/token.ts",
      "line": 2,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "Removes the Bot before the token."
    },
    "functionDef": {
      "params": [
        {
          "kind": "identifier",
          "name": "token",
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          }
        },
        {
          "kind": "assign",
          "left": {
            "kind": "identifier",
            "name": "type",
            "optional": false,
            "tsType": {
              "repr": "",
              "kind": "union",
              "union": [
                {
                  "repr": "GATEWAY",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "GATEWAY"
                  }
                },
                {
                  "repr": "REST",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "REST"
                  }
                }
              ]
            }
          },
          "right": "[UNSUPPORTED]",
          "tsType": null
        }
      ],
      "returnType": {
        "repr": "string",
        "kind": "keyword",
        "keyword": "string"
      },
      "isAsync": false,
      "isGenerator": false,
      "typeParams": []
    }
  },
  {
    "kind": "function",
    "name": "getBotIdFromToken",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/discordeno/util/token.ts",
      "line": 12,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "Get the bot id from the bot token. WARNING: Discord staff has mentioned this may not be stable forever. Use at your own risk. However, note for over 5 years this has never broken."
    },
    "functionDef": {
      "params": [
        {
          "kind": "identifier",
          "name": "token",
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          }
        }
      ],
      "returnType": null,
      "isAsync": false,
      "isGenerator": false,
      "typeParams": []
    }
  },
  {
    "kind": "class",
    "name": "Role",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Role.ts",
      "line": 9,
      "col": 0
    },
    "declarationKind": "export",
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "session",
              "optional": false,
              "tsType": {
                "repr": "Session",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Session"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "data",
              "optional": false,
              "tsType": {
                "repr": "DiscordRole",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "DiscordRole"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "guildId",
              "optional": false,
              "tsType": {
                "repr": "Snowflake",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Snowflake"
                }
              }
            }
          ],
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Role.ts",
            "line": 10,
            "col": 4
          }
        }
      ],
      "properties": [
        {
          "tsType": {
            "repr": "Session",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Session"
            }
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "session",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Role.ts",
            "line": 24,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "Snowflake",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Snowflake"
            }
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Role.ts",
            "line": 25,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "Snowflake",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Snowflake"
            }
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "guildId",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Role.ts",
            "line": 27,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "hoist",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Role.ts",
            "line": 29,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "bigint",
            "kind": "keyword",
            "keyword": "bigint"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "iconHash",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Role.ts",
            "line": 30,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "color",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Role.ts",
            "line": 31,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "name",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Role.ts",
            "line": 32,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "unicodeEmoji",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Role.ts",
            "line": 33,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "mentionable",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Role.ts",
            "line": 34,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "managed",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Role.ts",
            "line": 35,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "Permissions",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Permissions"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "permissions",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Role.ts",
            "line": 36,
            "col": 4
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "createdTimestamp",
          "kind": "getter",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "number",
              "kind": "keyword",
              "keyword": "number"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Role.ts",
            "line": 38,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "createdAt",
          "kind": "getter",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "Date",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "Date"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Role.ts",
            "line": 42,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "hexColor",
          "kind": "getter",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Role.ts",
            "line": 46,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "delete",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "void",
                    "kind": "keyword",
                    "keyword": "void"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Role.ts",
            "line": 50,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "edit",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "options",
                "optional": false,
                "tsType": {
                  "repr": "ModifyGuildRole",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "ModifyGuildRole"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "Role",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Role"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Role.ts",
            "line": 54,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "add",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "memberId",
                "optional": false,
                "tsType": {
                  "repr": "Snowflake",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Snowflake"
                  }
                }
              },
              {
                "kind": "assign",
                "left": {
                  "kind": "identifier",
                  "name": "options",
                  "optional": false,
                  "tsType": {
                    "repr": "",
                    "kind": "typeLiteral",
                    "typeLiteral": {
                      "methods": [],
                      "properties": [
                        {
                          "name": "reason",
                          "params": [],
                          "computed": false,
                          "optional": true,
                          "tsType": {
                            "repr": "string",
                            "kind": "keyword",
                            "keyword": "string"
                          },
                          "typeParams": []
                        }
                      ],
                      "callSignatures": [],
                      "indexSignatures": []
                    }
                  }
                },
                "right": "[UNSUPPORTED]",
                "tsType": null
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "void",
                    "kind": "keyword",
                    "keyword": "void"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Role.ts",
            "line": 59,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "remove",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "memberId",
                "optional": false,
                "tsType": {
                  "repr": "Snowflake",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Snowflake"
                  }
                }
              },
              {
                "kind": "assign",
                "left": {
                  "kind": "identifier",
                  "name": "options",
                  "optional": false,
                  "tsType": {
                    "repr": "",
                    "kind": "typeLiteral",
                    "typeLiteral": {
                      "methods": [],
                      "properties": [
                        {
                          "name": "reason",
                          "params": [],
                          "computed": false,
                          "optional": true,
                          "tsType": {
                            "repr": "string",
                            "kind": "keyword",
                            "keyword": "string"
                          },
                          "typeParams": []
                        }
                      ],
                      "callSignatures": [],
                      "indexSignatures": []
                    }
                  }
                },
                "right": "[UNSUPPORTED]",
                "tsType": null
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "void",
                    "kind": "keyword",
                    "keyword": "void"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Role.ts",
            "line": 63,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "toString",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Role.ts",
            "line": 67,
            "col": 4
          }
        }
      ],
      "extends": null,
      "implements": [
        {
          "repr": "Model",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "Model"
          }
        }
      ],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "class",
    "name": "default",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Role.ts",
      "line": 9,
      "col": 0
    },
    "declarationKind": "export",
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "session",
              "optional": false,
              "tsType": {
                "repr": "Session",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Session"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "data",
              "optional": false,
              "tsType": {
                "repr": "DiscordRole",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "DiscordRole"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "guildId",
              "optional": false,
              "tsType": {
                "repr": "Snowflake",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Snowflake"
                }
              }
            }
          ],
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Role.ts",
            "line": 10,
            "col": 4
          }
        }
      ],
      "properties": [
        {
          "tsType": {
            "repr": "Session",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Session"
            }
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "session",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Role.ts",
            "line": 24,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "Snowflake",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Snowflake"
            }
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Role.ts",
            "line": 25,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "Snowflake",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Snowflake"
            }
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "guildId",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Role.ts",
            "line": 27,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "hoist",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Role.ts",
            "line": 29,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "bigint",
            "kind": "keyword",
            "keyword": "bigint"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "iconHash",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Role.ts",
            "line": 30,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "color",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Role.ts",
            "line": 31,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "name",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Role.ts",
            "line": 32,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "unicodeEmoji",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Role.ts",
            "line": 33,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "mentionable",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Role.ts",
            "line": 34,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "managed",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Role.ts",
            "line": 35,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "Permissions",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Permissions"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "permissions",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Role.ts",
            "line": 36,
            "col": 4
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "createdTimestamp",
          "kind": "getter",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "number",
              "kind": "keyword",
              "keyword": "number"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Role.ts",
            "line": 38,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "createdAt",
          "kind": "getter",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "Date",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "Date"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Role.ts",
            "line": 42,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "hexColor",
          "kind": "getter",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Role.ts",
            "line": 46,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "delete",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "void",
                    "kind": "keyword",
                    "keyword": "void"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Role.ts",
            "line": 50,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "edit",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "options",
                "optional": false,
                "tsType": {
                  "repr": "ModifyGuildRole",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "ModifyGuildRole"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "Role",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Role"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Role.ts",
            "line": 54,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "add",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "memberId",
                "optional": false,
                "tsType": {
                  "repr": "Snowflake",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Snowflake"
                  }
                }
              },
              {
                "kind": "assign",
                "left": {
                  "kind": "identifier",
                  "name": "options",
                  "optional": false,
                  "tsType": {
                    "repr": "",
                    "kind": "typeLiteral",
                    "typeLiteral": {
                      "methods": [],
                      "properties": [
                        {
                          "name": "reason",
                          "params": [],
                          "computed": false,
                          "optional": true,
                          "tsType": {
                            "repr": "string",
                            "kind": "keyword",
                            "keyword": "string"
                          },
                          "typeParams": []
                        }
                      ],
                      "callSignatures": [],
                      "indexSignatures": []
                    }
                  }
                },
                "right": "[UNSUPPORTED]",
                "tsType": null
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "void",
                    "kind": "keyword",
                    "keyword": "void"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Role.ts",
            "line": 59,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "remove",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "memberId",
                "optional": false,
                "tsType": {
                  "repr": "Snowflake",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Snowflake"
                  }
                }
              },
              {
                "kind": "assign",
                "left": {
                  "kind": "identifier",
                  "name": "options",
                  "optional": false,
                  "tsType": {
                    "repr": "",
                    "kind": "typeLiteral",
                    "typeLiteral": {
                      "methods": [],
                      "properties": [
                        {
                          "name": "reason",
                          "params": [],
                          "computed": false,
                          "optional": true,
                          "tsType": {
                            "repr": "string",
                            "kind": "keyword",
                            "keyword": "string"
                          },
                          "typeParams": []
                        }
                      ],
                      "callSignatures": [],
                      "indexSignatures": []
                    }
                  }
                },
                "right": "[UNSUPPORTED]",
                "tsType": null
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "void",
                    "kind": "keyword",
                    "keyword": "void"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Role.ts",
            "line": 63,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "toString",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Role.ts",
            "line": 67,
            "col": 4
          }
        }
      ],
      "extends": null,
      "implements": [
        {
          "repr": "Model",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "Model"
          }
        }
      ],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "import",
    "name": "Model",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Role.ts",
      "line": 1,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/structures/Base.ts",
      "imported": "Model"
    }
  },
  {
    "kind": "import",
    "name": "DiscordRole",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Role.ts",
      "line": 2,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
      "imported": "DiscordRole"
    }
  },
  {
    "kind": "import",
    "name": "Session",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Role.ts",
      "line": 3,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/Session.ts",
      "imported": "Session"
    }
  },
  {
    "kind": "import",
    "name": "Snowflake",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Role.ts",
      "line": 4,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/Snowflake.ts",
      "imported": "Snowflake"
    }
  },
  {
    "kind": "import",
    "name": "Guild",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Role.ts",
      "line": 5,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
      "imported": "Guild"
    }
  },
  {
    "kind": "import",
    "name": "ModifyGuildRole",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Role.ts",
      "line": 5,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
      "imported": "ModifyGuildRole"
    }
  },
  {
    "kind": "import",
    "name": "Permissions",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Role.ts",
      "line": 6,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/structures/Permissions.ts",
      "imported": "default"
    }
  },
  {
    "kind": "import",
    "name": "Util",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Role.ts",
      "line": 7,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/Util.ts",
      "imported": "default"
    }
  },
  {
    "kind": "class",
    "name": "ThreadMember",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/ThreadMember.ts",
      "line": 11,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "A member that comes from a thread",
      "tags": [
        {
          "kind": "unsupported",
          "value": "@link https://discord.com/developers/docs/resources/channel#thread-member-object\n*"
        }
      ]
    },
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "session",
              "optional": false,
              "tsType": {
                "repr": "Session",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Session"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "data",
              "optional": false,
              "tsType": {
                "repr": "DiscordThreadMember",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "DiscordThreadMember"
                }
              }
            }
          ],
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/ThreadMember.ts",
            "line": 12,
            "col": 4
          }
        }
      ],
      "properties": [
        {
          "tsType": {
            "repr": "Session",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Session"
            }
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "session",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/ThreadMember.ts",
            "line": 19,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "Snowflake",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Snowflake"
            }
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/ThreadMember.ts",
            "line": 20,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "flags",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/ThreadMember.ts",
            "line": 21,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "timestamp",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/ThreadMember.ts",
            "line": 22,
            "col": 4
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "threadId",
          "kind": "getter",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "Snowflake",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "Snowflake"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/ThreadMember.ts",
            "line": 24,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "quitThread",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "assign",
                "left": {
                  "kind": "identifier",
                  "name": "memberId",
                  "optional": false,
                  "tsType": {
                    "repr": "Snowflake",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Snowflake"
                    }
                  }
                },
                "right": "[UNSUPPORTED]",
                "tsType": null
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "void",
                    "kind": "keyword",
                    "keyword": "void"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/ThreadMember.ts",
            "line": 28,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "fetchMember",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "assign",
                "left": {
                  "kind": "identifier",
                  "name": "memberId",
                  "optional": false,
                  "tsType": {
                    "repr": "Snowflake",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Snowflake"
                    }
                  }
                },
                "right": "[UNSUPPORTED]",
                "tsType": null
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "ThreadMember",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "ThreadMember"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/ThreadMember.ts",
            "line": 36,
            "col": 4
          }
        }
      ],
      "extends": null,
      "implements": [
        {
          "repr": "Model",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "Model"
          }
        }
      ],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "class",
    "name": "default",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/ThreadMember.ts",
      "line": 11,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "A member that comes from a thread",
      "tags": [
        {
          "kind": "unsupported",
          "value": "@link https://discord.com/developers/docs/resources/channel#thread-member-object\n*"
        }
      ]
    },
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "session",
              "optional": false,
              "tsType": {
                "repr": "Session",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Session"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "data",
              "optional": false,
              "tsType": {
                "repr": "DiscordThreadMember",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "DiscordThreadMember"
                }
              }
            }
          ],
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/ThreadMember.ts",
            "line": 12,
            "col": 4
          }
        }
      ],
      "properties": [
        {
          "tsType": {
            "repr": "Session",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Session"
            }
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "session",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/ThreadMember.ts",
            "line": 19,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "Snowflake",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Snowflake"
            }
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/ThreadMember.ts",
            "line": 20,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "flags",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/ThreadMember.ts",
            "line": 21,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "timestamp",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/ThreadMember.ts",
            "line": 22,
            "col": 4
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "threadId",
          "kind": "getter",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "Snowflake",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "Snowflake"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/ThreadMember.ts",
            "line": 24,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "quitThread",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "assign",
                "left": {
                  "kind": "identifier",
                  "name": "memberId",
                  "optional": false,
                  "tsType": {
                    "repr": "Snowflake",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Snowflake"
                    }
                  }
                },
                "right": "[UNSUPPORTED]",
                "tsType": null
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "void",
                    "kind": "keyword",
                    "keyword": "void"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/ThreadMember.ts",
            "line": 28,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "fetchMember",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "assign",
                "left": {
                  "kind": "identifier",
                  "name": "memberId",
                  "optional": false,
                  "tsType": {
                    "repr": "Snowflake",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Snowflake"
                    }
                  }
                },
                "right": "[UNSUPPORTED]",
                "tsType": null
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "ThreadMember",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "ThreadMember"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/ThreadMember.ts",
            "line": 36,
            "col": 4
          }
        }
      ],
      "extends": null,
      "implements": [
        {
          "repr": "Model",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "Model"
          }
        }
      ],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "import",
    "name": "Model",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/ThreadMember.ts",
      "line": 1,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/structures/Base.ts",
      "imported": "Model"
    }
  },
  {
    "kind": "import",
    "name": "Session",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/ThreadMember.ts",
      "line": 2,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/Session.ts",
      "imported": "Session"
    }
  },
  {
    "kind": "import",
    "name": "Snowflake",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/ThreadMember.ts",
      "line": 3,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/Snowflake.ts",
      "imported": "Snowflake"
    }
  },
  {
    "kind": "import",
    "name": "DiscordThreadMember",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/ThreadMember.ts",
      "line": 4,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
      "imported": "DiscordThreadMember"
    }
  },
  {
    "kind": "import",
    "name": "Routes",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/ThreadMember.ts",
      "line": 5,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/Routes.ts",
      "imported": null
    }
  },
  {
    "kind": "class",
    "name": "SelectMenuBuilder",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/components/MessageSelectMenu.ts",
      "line": 4,
      "col": 0
    },
    "declarationKind": "export",
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "accessibility": null,
          "name": "constructor",
          "params": [],
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/components/MessageSelectMenu.ts",
            "line": 5,
            "col": 4
          }
        }
      ],
      "properties": [
        {
          "tsType": {
            "repr": "MessageComponentTypes.SelectMenu",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "MessageComponentTypes.SelectMenu"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "type",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/components/MessageSelectMenu.ts",
            "line": 11,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "SelectMenuOptionBuilder",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "SelectMenuOptionBuilder"
              }
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "options",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/components/MessageSelectMenu.ts",
            "line": 12,
            "col": 4
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setPlaceholder",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "placeholder",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "this",
              "kind": "this",
              "this": true
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/components/MessageSelectMenu.ts",
            "line": 14,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setValues",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "max",
                "optional": true,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                }
              },
              {
                "kind": "identifier",
                "name": "min",
                "optional": true,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                }
              }
            ],
            "returnType": {
              "repr": "this",
              "kind": "this",
              "this": true
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/components/MessageSelectMenu.ts",
            "line": 19,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setDisabled",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "assign",
                "left": {
                  "kind": "identifier",
                  "name": "disabled",
                  "optional": false,
                  "tsType": null
                },
                "right": "[UNSUPPORTED]",
                "tsType": null
              }
            ],
            "returnType": {
              "repr": "this",
              "kind": "this",
              "this": true
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/components/MessageSelectMenu.ts",
            "line": 25,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setCustomId",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "id",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "this",
              "kind": "this",
              "this": true
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/components/MessageSelectMenu.ts",
            "line": 30,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setOptions",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "rest",
                "arg": {
                  "kind": "identifier",
                  "name": "options",
                  "optional": false,
                  "tsType": null
                },
                "tsType": {
                  "repr": "",
                  "kind": "array",
                  "array": {
                    "repr": "SelectMenuOptionBuilder",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "SelectMenuOptionBuilder"
                    }
                  }
                }
              }
            ],
            "returnType": {
              "repr": "this",
              "kind": "this",
              "this": true
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/components/MessageSelectMenu.ts",
            "line": 35,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "addOptions",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "rest",
                "arg": {
                  "kind": "identifier",
                  "name": "options",
                  "optional": false,
                  "tsType": null
                },
                "tsType": {
                  "repr": "",
                  "kind": "array",
                  "array": {
                    "repr": "SelectMenuOptionBuilder",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "SelectMenuOptionBuilder"
                    }
                  }
                }
              }
            ],
            "returnType": {
              "repr": "this",
              "kind": "this",
              "this": true
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/components/MessageSelectMenu.ts",
            "line": 44,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "toJSON",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "DiscordSelectMenuComponent",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "DiscordSelectMenuComponent"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/components/MessageSelectMenu.ts",
            "line": 51,
            "col": 4
          }
        }
      ],
      "extends": null,
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "import",
    "name": "DiscordSelectMenuComponent",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/components/MessageSelectMenu.ts",
      "line": 1,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
      "imported": "DiscordSelectMenuComponent"
    }
  },
  {
    "kind": "import",
    "name": "MessageComponentTypes",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/components/MessageSelectMenu.ts",
      "line": 1,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
      "imported": "MessageComponentTypes"
    }
  },
  {
    "kind": "import",
    "name": "SelectMenuOptionBuilder",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/components/MessageSelectMenu.ts",
      "line": 2,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/components/SelectMenuOptionBuilder.ts",
      "imported": "SelectMenuOptionBuilder"
    }
  },
  {
    "kind": "class",
    "name": "ModalSubmitInteraction",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/ModalSubmitInteraction.ts",
      "line": 13,
      "col": 0
    },
    "declarationKind": "export",
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "session",
              "optional": false,
              "tsType": {
                "repr": "Session",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Session"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "data",
              "optional": false,
              "tsType": {
                "repr": "DiscordInteraction",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "DiscordInteraction"
                }
              }
            }
          ],
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/ModalSubmitInteraction.ts",
            "line": 14,
            "col": 4
          }
        }
      ],
      "properties": [
        {
          "tsType": {
            "repr": "InteractionTypes.MessageComponent",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "InteractionTypes.MessageComponent"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "type",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/ModalSubmitInteraction.ts",
            "line": 29,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "MessageComponentTypes",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "MessageComponentTypes"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "componentType",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/ModalSubmitInteraction.ts",
            "line": 30,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "customId",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/ModalSubmitInteraction.ts",
            "line": 31,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "Snowflake",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Snowflake"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "targetId",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/ModalSubmitInteraction.ts",
            "line": 32,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "values",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/ModalSubmitInteraction.ts",
            "line": 33,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "Message",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Message"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "message",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/ModalSubmitInteraction.ts",
            "line": 34,
            "col": 4
          }
        },
        {
          "tsType": null,
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "components",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/ModalSubmitInteraction.ts",
            "line": 35,
            "col": 4
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": true,
          "name": "transformComponent",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "component",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "indexedAccess",
                  "indexedAccess": {
                    "readonly": false,
                    "objType": {
                      "repr": "DiscordMessageComponents",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "DiscordMessageComponents"
                      }
                    },
                    "indexType": {
                      "repr": "number",
                      "kind": "keyword",
                      "keyword": "number"
                    }
                  }
                }
              }
            ],
            "returnType": null,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/ModalSubmitInteraction.ts",
            "line": 37,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "inMessage",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "this is ModalSubmitInteraction & { message: Message; }",
              "kind": "typePredicate",
              "typePredicate": {
                "asserts": false,
                "param": {
                  "type": "this"
                },
                "type": {
                  "repr": "",
                  "kind": "intersection",
                  "intersection": [
                    {
                      "repr": "ModalSubmitInteraction",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "ModalSubmitInteraction"
                      }
                    },
                    {
                      "repr": "",
                      "kind": "typeLiteral",
                      "typeLiteral": {
                        "methods": [],
                        "properties": [
                          {
                            "name": "message",
                            "params": [],
                            "computed": false,
                            "optional": false,
                            "tsType": {
                              "repr": "Message",
                              "kind": "typeRef",
                              "typeRef": {
                                "typeParams": null,
                                "typeName": "Message"
                              }
                            },
                            "typeParams": []
                          }
                        ],
                        "callSignatures": [],
                        "indexSignatures": []
                      }
                    }
                  ]
                }
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/ModalSubmitInteraction.ts",
            "line": 49,
            "col": 4
          }
        }
      ],
      "extends": "BaseInteraction",
      "implements": [
        {
          "repr": "Model",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "Model"
          }
        }
      ],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "class",
    "name": "default",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/ModalSubmitInteraction.ts",
      "line": 13,
      "col": 0
    },
    "declarationKind": "export",
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "session",
              "optional": false,
              "tsType": {
                "repr": "Session",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Session"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "data",
              "optional": false,
              "tsType": {
                "repr": "DiscordInteraction",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "DiscordInteraction"
                }
              }
            }
          ],
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/ModalSubmitInteraction.ts",
            "line": 14,
            "col": 4
          }
        }
      ],
      "properties": [
        {
          "tsType": {
            "repr": "InteractionTypes.MessageComponent",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "InteractionTypes.MessageComponent"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "type",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/ModalSubmitInteraction.ts",
            "line": 29,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "MessageComponentTypes",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "MessageComponentTypes"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "componentType",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/ModalSubmitInteraction.ts",
            "line": 30,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "customId",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/ModalSubmitInteraction.ts",
            "line": 31,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "Snowflake",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Snowflake"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "targetId",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/ModalSubmitInteraction.ts",
            "line": 32,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "values",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/ModalSubmitInteraction.ts",
            "line": 33,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "Message",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Message"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "message",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/ModalSubmitInteraction.ts",
            "line": 34,
            "col": 4
          }
        },
        {
          "tsType": null,
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "components",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/ModalSubmitInteraction.ts",
            "line": 35,
            "col": 4
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": true,
          "name": "transformComponent",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "component",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "indexedAccess",
                  "indexedAccess": {
                    "readonly": false,
                    "objType": {
                      "repr": "DiscordMessageComponents",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "DiscordMessageComponents"
                      }
                    },
                    "indexType": {
                      "repr": "number",
                      "kind": "keyword",
                      "keyword": "number"
                    }
                  }
                }
              }
            ],
            "returnType": null,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/ModalSubmitInteraction.ts",
            "line": 37,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "inMessage",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "this is ModalSubmitInteraction & { message: Message; }",
              "kind": "typePredicate",
              "typePredicate": {
                "asserts": false,
                "param": {
                  "type": "this"
                },
                "type": {
                  "repr": "",
                  "kind": "intersection",
                  "intersection": [
                    {
                      "repr": "ModalSubmitInteraction",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "ModalSubmitInteraction"
                      }
                    },
                    {
                      "repr": "",
                      "kind": "typeLiteral",
                      "typeLiteral": {
                        "methods": [],
                        "properties": [
                          {
                            "name": "message",
                            "params": [],
                            "computed": false,
                            "optional": false,
                            "tsType": {
                              "repr": "Message",
                              "kind": "typeRef",
                              "typeRef": {
                                "typeParams": null,
                                "typeName": "Message"
                              }
                            },
                            "typeParams": []
                          }
                        ],
                        "callSignatures": [],
                        "indexSignatures": []
                      }
                    }
                  ]
                }
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/ModalSubmitInteraction.ts",
            "line": 49,
            "col": 4
          }
        }
      ],
      "extends": "BaseInteraction",
      "implements": [
        {
          "repr": "Model",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "Model"
          }
        }
      ],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "import",
    "name": "Model",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/ModalSubmitInteraction.ts",
      "line": 1,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/structures/Base.ts",
      "imported": "Model"
    }
  },
  {
    "kind": "import",
    "name": "Snowflake",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/ModalSubmitInteraction.ts",
      "line": 2,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/Snowflake.ts",
      "imported": "Snowflake"
    }
  },
  {
    "kind": "import",
    "name": "Session",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/ModalSubmitInteraction.ts",
      "line": 3,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/Session.ts",
      "imported": "Session"
    }
  },
  {
    "kind": "import",
    "name": "DiscordInteraction",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/ModalSubmitInteraction.ts",
      "line": 4,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
      "imported": "DiscordInteraction"
    }
  },
  {
    "kind": "import",
    "name": "DiscordMessageComponents",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/ModalSubmitInteraction.ts",
      "line": 4,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
      "imported": "DiscordMessageComponents"
    }
  },
  {
    "kind": "import",
    "name": "InteractionTypes",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/ModalSubmitInteraction.ts",
      "line": 4,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
      "imported": "InteractionTypes"
    }
  },
  {
    "kind": "import",
    "name": "MessageComponentTypes",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/ModalSubmitInteraction.ts",
      "line": 4,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
      "imported": "MessageComponentTypes"
    }
  },
  {
    "kind": "import",
    "name": "BaseInteraction",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/ModalSubmitInteraction.ts",
      "line": 10,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/BaseInteraction.ts",
      "imported": "default"
    }
  },
  {
    "kind": "import",
    "name": "Message",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/ModalSubmitInteraction.ts",
      "line": 11,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/structures/Message.ts",
      "imported": "default"
    }
  },
  {
    "kind": "class",
    "name": "Button",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/ButtonComponent.ts",
      "line": 8,
      "col": 0
    },
    "declarationKind": "export",
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "session",
              "optional": false,
              "tsType": {
                "repr": "Session",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Session"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "data",
              "optional": false,
              "tsType": {
                "repr": "DiscordComponent",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "DiscordComponent"
                }
              }
            }
          ],
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/ButtonComponent.ts",
            "line": 9,
            "col": 4
          }
        }
      ],
      "properties": [
        {
          "tsType": {
            "repr": "Session",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Session"
            }
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "session",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/ButtonComponent.ts",
            "line": 24,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "MessageComponentTypes.Button",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "MessageComponentTypes.Button"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "type",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/ButtonComponent.ts",
            "line": 25,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "customId",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/ButtonComponent.ts",
            "line": 26,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "label",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/ButtonComponent.ts",
            "line": 27,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "ButtonStyles.Primary",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "ButtonStyles.Primary"
                }
              },
              {
                "repr": "ButtonStyles.Secondary",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "ButtonStyles.Secondary"
                }
              },
              {
                "repr": "ButtonStyles.Success",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "ButtonStyles.Success"
                }
              },
              {
                "repr": "ButtonStyles.Danger",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "ButtonStyles.Danger"
                }
              }
            ]
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "style",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/ButtonComponent.ts",
            "line": 28,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "disabled",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/ButtonComponent.ts",
            "line": 29,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "Emoji",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Emoji"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "emoji",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/ButtonComponent.ts",
            "line": 30,
            "col": 4
          }
        }
      ],
      "indexSignatures": [],
      "methods": [],
      "extends": "BaseComponent",
      "implements": [
        {
          "repr": "ButtonComponent",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "ButtonComponent"
          }
        }
      ],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "class",
    "name": "default",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/ButtonComponent.ts",
      "line": 8,
      "col": 0
    },
    "declarationKind": "export",
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "session",
              "optional": false,
              "tsType": {
                "repr": "Session",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Session"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "data",
              "optional": false,
              "tsType": {
                "repr": "DiscordComponent",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "DiscordComponent"
                }
              }
            }
          ],
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/ButtonComponent.ts",
            "line": 9,
            "col": 4
          }
        }
      ],
      "properties": [
        {
          "tsType": {
            "repr": "Session",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Session"
            }
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "session",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/ButtonComponent.ts",
            "line": 24,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "MessageComponentTypes.Button",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "MessageComponentTypes.Button"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "type",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/ButtonComponent.ts",
            "line": 25,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "customId",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/ButtonComponent.ts",
            "line": 26,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "label",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/ButtonComponent.ts",
            "line": 27,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "ButtonStyles.Primary",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "ButtonStyles.Primary"
                }
              },
              {
                "repr": "ButtonStyles.Secondary",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "ButtonStyles.Secondary"
                }
              },
              {
                "repr": "ButtonStyles.Success",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "ButtonStyles.Success"
                }
              },
              {
                "repr": "ButtonStyles.Danger",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "ButtonStyles.Danger"
                }
              }
            ]
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "style",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/ButtonComponent.ts",
            "line": 28,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "disabled",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/ButtonComponent.ts",
            "line": 29,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "Emoji",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Emoji"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "emoji",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/ButtonComponent.ts",
            "line": 30,
            "col": 4
          }
        }
      ],
      "indexSignatures": [],
      "methods": [],
      "extends": "BaseComponent",
      "implements": [
        {
          "repr": "ButtonComponent",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "ButtonComponent"
          }
        }
      ],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "import",
    "name": "Session",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/ButtonComponent.ts",
      "line": 1,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/Session.ts",
      "imported": "Session"
    }
  },
  {
    "kind": "import",
    "name": "ButtonStyles",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/ButtonComponent.ts",
      "line": 2,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
      "imported": "ButtonStyles"
    }
  },
  {
    "kind": "import",
    "name": "DiscordComponent",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/ButtonComponent.ts",
      "line": 2,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
      "imported": "DiscordComponent"
    }
  },
  {
    "kind": "import",
    "name": "ButtonComponent",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/ButtonComponent.ts",
      "line": 3,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/Component.ts",
      "imported": "ButtonComponent"
    }
  },
  {
    "kind": "import",
    "name": "MessageComponentTypes",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/ButtonComponent.ts",
      "line": 4,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
      "imported": "MessageComponentTypes"
    }
  },
  {
    "kind": "import",
    "name": "BaseComponent",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/ButtonComponent.ts",
      "line": 5,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/Component.ts",
      "imported": "default"
    }
  },
  {
    "kind": "import",
    "name": "Emoji",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/ButtonComponent.ts",
      "line": 6,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/structures/Emoji.ts",
      "imported": "default"
    }
  },
  {
    "kind": "class",
    "name": "ScheduledEvent",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/GuildScheduledEvent.ts",
      "line": 13,
      "col": 0
    },
    "declarationKind": "export",
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "session",
              "optional": false,
              "tsType": {
                "repr": "Session",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Session"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "data",
              "optional": false,
              "tsType": {
                "repr": "DiscordScheduledEvent",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "DiscordScheduledEvent"
                }
              }
            }
          ],
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/GuildScheduledEvent.ts",
            "line": 14,
            "col": 4
          }
        }
      ],
      "properties": [
        {
          "tsType": {
            "repr": "Session",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Session"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "session",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/GuildScheduledEvent.ts",
            "line": 32,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "Snowflake",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Snowflake"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/GuildScheduledEvent.ts",
            "line": 33,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "Snowflake",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Snowflake"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "guildId",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/GuildScheduledEvent.ts",
            "line": 34,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "Snowflake",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Snowflake"
                }
              },
              {
                "repr": "null",
                "kind": "keyword",
                "keyword": "null"
              }
            ]
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "channelId",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/GuildScheduledEvent.ts",
            "line": 35,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "Snowflake",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Snowflake"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "creatorId",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/GuildScheduledEvent.ts",
            "line": 36,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "name",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/GuildScheduledEvent.ts",
            "line": 37,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "description",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/GuildScheduledEvent.ts",
            "line": 38,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "scheduledStartTime",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/GuildScheduledEvent.ts",
            "line": 39,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              },
              {
                "repr": "null",
                "kind": "keyword",
                "keyword": "null"
              }
            ]
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "scheduledEndTime",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/GuildScheduledEvent.ts",
            "line": 40,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "PrivacyLevels",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "PrivacyLevels"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "privacyLevel",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/GuildScheduledEvent.ts",
            "line": 41,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "ScheduledEventStatus",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "ScheduledEventStatus"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "status",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/GuildScheduledEvent.ts",
            "line": 42,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "ScheduledEventEntityType",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "ScheduledEventEntityType"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "entityType",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/GuildScheduledEvent.ts",
            "line": 43,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "DiscordScheduledEventEntityMetadata",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "DiscordScheduledEventEntityMetadata"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "entityMetadata",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/GuildScheduledEvent.ts",
            "line": 44,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "User",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "User"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "creator",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/GuildScheduledEvent.ts",
            "line": 45,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "userCount",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/GuildScheduledEvent.ts",
            "line": 46,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "image",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/GuildScheduledEvent.ts",
            "line": 47,
            "col": 4
          }
        }
      ],
      "indexSignatures": [],
      "methods": [],
      "extends": null,
      "implements": [
        {
          "repr": "Model",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "Model"
          }
        }
      ],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "import",
    "name": "Model",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/GuildScheduledEvent.ts",
      "line": 1,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/structures/Base.ts",
      "imported": "Model"
    }
  },
  {
    "kind": "import",
    "name": "Snowflake",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/GuildScheduledEvent.ts",
      "line": 2,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/Snowflake.ts",
      "imported": "Snowflake"
    }
  },
  {
    "kind": "import",
    "name": "Session",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/GuildScheduledEvent.ts",
      "line": 3,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/Session.ts",
      "imported": "Session"
    }
  },
  {
    "kind": "import",
    "name": "PrivacyLevels",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/GuildScheduledEvent.ts",
      "line": 4,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/structures/StageInstance.ts",
      "imported": "PrivacyLevels"
    }
  },
  {
    "kind": "import",
    "name": "DiscordScheduledEvent",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/GuildScheduledEvent.ts",
      "line": 5,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
      "imported": "DiscordScheduledEvent"
    }
  },
  {
    "kind": "import",
    "name": "DiscordScheduledEventEntityMetadata",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/GuildScheduledEvent.ts",
      "line": 5,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
      "imported": "DiscordScheduledEventEntityMetadata"
    }
  },
  {
    "kind": "import",
    "name": "ScheduledEventEntityType",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/GuildScheduledEvent.ts",
      "line": 5,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
      "imported": "ScheduledEventEntityType"
    }
  },
  {
    "kind": "import",
    "name": "ScheduledEventStatus",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/GuildScheduledEvent.ts",
      "line": 5,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
      "imported": "ScheduledEventStatus"
    }
  },
  {
    "kind": "import",
    "name": "User",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/GuildScheduledEvent.ts",
      "line": 11,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/structures/User.ts",
      "imported": "default"
    }
  },
  {
    "kind": "interface",
    "name": "IntegrationAccount",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Integration.ts",
      "line": 7,
      "col": 0
    },
    "declarationKind": "export",
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Integration.ts",
            "line": 8,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "Snowflake",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Snowflake"
            }
          },
          "typeParams": []
        },
        {
          "name": "name",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Integration.ts",
            "line": 9,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "IntegrationApplication",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Integration.ts",
      "line": 12,
      "col": 0
    },
    "declarationKind": "export",
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Integration.ts",
            "line": 13,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "Snowflake",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Snowflake"
            }
          },
          "typeParams": []
        },
        {
          "name": "name",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Integration.ts",
            "line": 14,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "icon",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Integration.ts",
            "line": 15,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "description",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Integration.ts",
            "line": 16,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "bot",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Integration.ts",
            "line": 17,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "User",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "User"
            }
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "class",
    "name": "Integration",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Integration.ts",
      "line": 20,
      "col": 0
    },
    "declarationKind": "export",
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "session",
              "optional": false,
              "tsType": {
                "repr": "Session",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Session"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "data",
              "optional": false,
              "tsType": {
                "repr": "",
                "kind": "intersection",
                "intersection": [
                  {
                    "repr": "DiscordIntegration",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "DiscordIntegration"
                    }
                  },
                  {
                    "repr": "",
                    "kind": "typeLiteral",
                    "typeLiteral": {
                      "methods": [],
                      "properties": [
                        {
                          "name": "guild_id",
                          "params": [],
                          "computed": false,
                          "optional": true,
                          "tsType": {
                            "repr": "Snowflake",
                            "kind": "typeRef",
                            "typeRef": {
                              "typeParams": null,
                              "typeName": "Snowflake"
                            }
                          },
                          "typeParams": []
                        }
                      ],
                      "callSignatures": [],
                      "indexSignatures": []
                    }
                  }
                ]
              }
            }
          ],
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Integration.ts",
            "line": 21,
            "col": 4
          }
        }
      ],
      "properties": [
        {
          "tsType": {
            "repr": "Session",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Session"
            }
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "session",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Integration.ts",
            "line": 56,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "Snowflake",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Snowflake"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Integration.ts",
            "line": 57,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "Snowflake",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Snowflake"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "guildId",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Integration.ts",
            "line": 58,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "name",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Integration.ts",
            "line": 60,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "twitch",
                "kind": "literal",
                "literal": {
                  "kind": "string",
                  "string": "twitch"
                }
              },
              {
                "repr": "youtube",
                "kind": "literal",
                "literal": {
                  "kind": "string",
                  "string": "youtube"
                }
              },
              {
                "repr": "discord",
                "kind": "literal",
                "literal": {
                  "kind": "string",
                  "string": "discord"
                }
              }
            ]
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "type",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Integration.ts",
            "line": 61,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "enabled",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Integration.ts",
            "line": 62,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "syncing",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Integration.ts",
            "line": 63,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "roleId",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Integration.ts",
            "line": 64,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "enableEmoticons",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Integration.ts",
            "line": 65,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "IntegrationExpireBehaviors",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "IntegrationExpireBehaviors"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "expireBehavior",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Integration.ts",
            "line": 66,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "expireGracePeriod",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Integration.ts",
            "line": 67,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "syncedAt",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Integration.ts",
            "line": 68,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "subscriberCount",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Integration.ts",
            "line": 69,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "revoked",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Integration.ts",
            "line": 70,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "User",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "User"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "user",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Integration.ts",
            "line": 72,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "IntegrationAccount",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "IntegrationAccount"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "account",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Integration.ts",
            "line": 73,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "IntegrationApplication",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "IntegrationApplication"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "application",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Integration.ts",
            "line": 74,
            "col": 4
          }
        }
      ],
      "indexSignatures": [],
      "methods": [],
      "extends": null,
      "implements": [
        {
          "repr": "Model",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "Model"
          }
        }
      ],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "class",
    "name": "default",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Integration.ts",
      "line": 20,
      "col": 0
    },
    "declarationKind": "export",
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "session",
              "optional": false,
              "tsType": {
                "repr": "Session",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Session"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "data",
              "optional": false,
              "tsType": {
                "repr": "",
                "kind": "intersection",
                "intersection": [
                  {
                    "repr": "DiscordIntegration",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "DiscordIntegration"
                    }
                  },
                  {
                    "repr": "",
                    "kind": "typeLiteral",
                    "typeLiteral": {
                      "methods": [],
                      "properties": [
                        {
                          "name": "guild_id",
                          "params": [],
                          "computed": false,
                          "optional": true,
                          "tsType": {
                            "repr": "Snowflake",
                            "kind": "typeRef",
                            "typeRef": {
                              "typeParams": null,
                              "typeName": "Snowflake"
                            }
                          },
                          "typeParams": []
                        }
                      ],
                      "callSignatures": [],
                      "indexSignatures": []
                    }
                  }
                ]
              }
            }
          ],
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Integration.ts",
            "line": 21,
            "col": 4
          }
        }
      ],
      "properties": [
        {
          "tsType": {
            "repr": "Session",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Session"
            }
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "session",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Integration.ts",
            "line": 56,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "Snowflake",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Snowflake"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Integration.ts",
            "line": 57,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "Snowflake",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Snowflake"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "guildId",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Integration.ts",
            "line": 58,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "name",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Integration.ts",
            "line": 60,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "twitch",
                "kind": "literal",
                "literal": {
                  "kind": "string",
                  "string": "twitch"
                }
              },
              {
                "repr": "youtube",
                "kind": "literal",
                "literal": {
                  "kind": "string",
                  "string": "youtube"
                }
              },
              {
                "repr": "discord",
                "kind": "literal",
                "literal": {
                  "kind": "string",
                  "string": "discord"
                }
              }
            ]
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "type",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Integration.ts",
            "line": 61,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "enabled",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Integration.ts",
            "line": 62,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "syncing",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Integration.ts",
            "line": 63,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "roleId",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Integration.ts",
            "line": 64,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "enableEmoticons",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Integration.ts",
            "line": 65,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "IntegrationExpireBehaviors",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "IntegrationExpireBehaviors"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "expireBehavior",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Integration.ts",
            "line": 66,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "expireGracePeriod",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Integration.ts",
            "line": 67,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "syncedAt",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Integration.ts",
            "line": 68,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "subscriberCount",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Integration.ts",
            "line": 69,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "revoked",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Integration.ts",
            "line": 70,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "User",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "User"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "user",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Integration.ts",
            "line": 72,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "IntegrationAccount",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "IntegrationAccount"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "account",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Integration.ts",
            "line": 73,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "IntegrationApplication",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "IntegrationApplication"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "application",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Integration.ts",
            "line": 74,
            "col": 4
          }
        }
      ],
      "indexSignatures": [],
      "methods": [],
      "extends": null,
      "implements": [
        {
          "repr": "Model",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "Model"
          }
        }
      ],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "import",
    "name": "Model",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Integration.ts",
      "line": 1,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/structures/Base.ts",
      "imported": "Model"
    }
  },
  {
    "kind": "import",
    "name": "Snowflake",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Integration.ts",
      "line": 2,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/Snowflake.ts",
      "imported": "Snowflake"
    }
  },
  {
    "kind": "import",
    "name": "Session",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Integration.ts",
      "line": 3,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/Session.ts",
      "imported": "Session"
    }
  },
  {
    "kind": "import",
    "name": "DiscordIntegration",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Integration.ts",
      "line": 4,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
      "imported": "DiscordIntegration"
    }
  },
  {
    "kind": "import",
    "name": "IntegrationExpireBehaviors",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Integration.ts",
      "line": 4,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
      "imported": "IntegrationExpireBehaviors"
    }
  },
  {
    "kind": "import",
    "name": "User",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Integration.ts",
      "line": 5,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/structures/User.ts",
      "imported": "default"
    }
  },
  {
    "kind": "interface",
    "name": "EditWebhookMessage",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Webhook.ts",
      "line": 23,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "tags": [
        {
          "kind": "unsupported",
          "value": "@link https://discord.com/developers/docs/resources/webhook#edit-webhook-message-jsonform-params"
        }
      ]
    },
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "content",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Webhook.ts",
            "line": 24,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "embeds",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Webhook.ts",
            "line": 25,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "DiscordEmbed",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "DiscordEmbed"
              }
            }
          },
          "typeParams": []
        },
        {
          "name": "files",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Webhook.ts",
            "line": 26,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "FileContent",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "FileContent"
              }
            }
          },
          "typeParams": []
        },
        {
          "name": "allowedMentions",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Webhook.ts",
            "line": 27,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "AllowedMentions",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "AllowedMentions"
            }
          },
          "typeParams": []
        },
        {
          "name": "attachments",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Webhook.ts",
            "line": 28,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "Attachment",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "Attachment"
              }
            }
          },
          "typeParams": []
        },
        {
          "name": "components",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Webhook.ts",
            "line": 29,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "DiscordMessageComponents",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "DiscordMessageComponents"
            }
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "class",
    "name": "Webhook",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Webhook.ts",
      "line": 32,
      "col": 0
    },
    "declarationKind": "export",
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "session",
              "optional": false,
              "tsType": {
                "repr": "Session",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Session"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "data",
              "optional": false,
              "tsType": {
                "repr": "DiscordWebhook",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "DiscordWebhook"
                }
              }
            }
          ],
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Webhook.ts",
            "line": 33,
            "col": 4
          }
        }
      ],
      "properties": [
        {
          "tsType": {
            "repr": "Session",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Session"
            }
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "session",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Webhook.ts",
            "line": 60,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "Snowflake",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Snowflake"
            }
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Webhook.ts",
            "line": 61,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "WebhookTypes",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "WebhookTypes"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "type",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Webhook.ts",
            "line": 62,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "token",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Webhook.ts",
            "line": 63,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "bigint",
            "kind": "keyword",
            "keyword": "bigint"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "avatar",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Webhook.ts",
            "line": 64,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "Snowflake",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Snowflake"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "applicationId",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Webhook.ts",
            "line": 65,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "Snowflake",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Snowflake"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "channelId",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Webhook.ts",
            "line": 66,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "Snowflake",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Snowflake"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "guildId",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Webhook.ts",
            "line": 67,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "User",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "User"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "user",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Webhook.ts",
            "line": 68,
            "col": 4
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "execute",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "options",
                "optional": true,
                "tsType": {
                  "repr": "",
                  "kind": "intersection",
                  "intersection": [
                    {
                      "repr": "WebhookOptions",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "WebhookOptions"
                      }
                    },
                    {
                      "repr": "CreateMessage",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "CreateMessage"
                      }
                    },
                    {
                      "repr": "",
                      "kind": "typeLiteral",
                      "typeLiteral": {
                        "methods": [],
                        "properties": [
                          {
                            "name": "avatarUrl",
                            "params": [],
                            "computed": false,
                            "optional": true,
                            "tsType": {
                              "repr": "string",
                              "kind": "keyword",
                              "keyword": "string"
                            },
                            "typeParams": []
                          },
                          {
                            "name": "username",
                            "params": [],
                            "computed": false,
                            "optional": true,
                            "tsType": {
                              "repr": "string",
                              "kind": "keyword",
                              "keyword": "string"
                            },
                            "typeParams": []
                          }
                        ],
                        "callSignatures": [],
                        "indexSignatures": []
                      }
                    }
                  ]
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "",
                    "kind": "parenthesized",
                    "parenthesized": {
                      "repr": "",
                      "kind": "union",
                      "union": [
                        {
                          "repr": "Message",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "Message"
                          }
                        },
                        {
                          "repr": "undefined",
                          "kind": "keyword",
                          "keyword": "undefined"
                        }
                      ]
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Webhook.ts",
            "line": 70,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "fetch",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "Webhook",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Webhook"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Webhook.ts",
            "line": 103,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "fetchMessage",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "messageId",
                "optional": false,
                "tsType": {
                  "repr": "Snowflake",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Snowflake"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "options",
                "optional": true,
                "tsType": {
                  "repr": "",
                  "kind": "typeLiteral",
                  "typeLiteral": {
                    "methods": [],
                    "properties": [
                      {
                        "name": "threadId",
                        "params": [],
                        "computed": false,
                        "optional": true,
                        "tsType": {
                          "repr": "Snowflake",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "Snowflake"
                          }
                        },
                        "typeParams": []
                      }
                    ],
                    "callSignatures": [],
                    "indexSignatures": []
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "",
                    "kind": "union",
                    "union": [
                      {
                        "repr": "Message",
                        "kind": "typeRef",
                        "typeRef": {
                          "typeParams": null,
                          "typeName": "Message"
                        }
                      },
                      {
                        "repr": "undefined",
                        "kind": "keyword",
                        "keyword": "undefined"
                      }
                    ]
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Webhook.ts",
            "line": 113,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "deleteMessage",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "messageId",
                "optional": false,
                "tsType": {
                  "repr": "Snowflake",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Snowflake"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "options",
                "optional": true,
                "tsType": {
                  "repr": "",
                  "kind": "typeLiteral",
                  "typeLiteral": {
                    "methods": [],
                    "properties": [
                      {
                        "name": "threadId",
                        "params": [],
                        "computed": false,
                        "optional": true,
                        "tsType": {
                          "repr": "Snowflake",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "Snowflake"
                          }
                        },
                        "typeParams": []
                      }
                    ],
                    "callSignatures": [],
                    "indexSignatures": []
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "void",
                    "kind": "keyword",
                    "keyword": "void"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Webhook.ts",
            "line": 127,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "editMessage",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "messageId",
                "optional": true,
                "tsType": {
                  "repr": "Snowflake",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Snowflake"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "options",
                "optional": true,
                "tsType": {
                  "repr": "",
                  "kind": "intersection",
                  "intersection": [
                    {
                      "repr": "EditWebhookMessage",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "EditWebhookMessage"
                      }
                    },
                    {
                      "repr": "",
                      "kind": "typeLiteral",
                      "typeLiteral": {
                        "methods": [],
                        "properties": [
                          {
                            "name": "threadId",
                            "params": [],
                            "computed": false,
                            "optional": true,
                            "tsType": {
                              "repr": "Snowflake",
                              "kind": "typeRef",
                              "typeRef": {
                                "typeParams": null,
                                "typeName": "Snowflake"
                              }
                            },
                            "typeParams": []
                          }
                        ],
                        "callSignatures": [],
                        "indexSignatures": []
                      }
                    }
                  ]
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "Message",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Message"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Webhook.ts",
            "line": 139,
            "col": 4
          }
        }
      ],
      "extends": null,
      "implements": [
        {
          "repr": "Model",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "Model"
          }
        }
      ],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "class",
    "name": "default",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Webhook.ts",
      "line": 32,
      "col": 0
    },
    "declarationKind": "export",
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "session",
              "optional": false,
              "tsType": {
                "repr": "Session",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Session"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "data",
              "optional": false,
              "tsType": {
                "repr": "DiscordWebhook",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "DiscordWebhook"
                }
              }
            }
          ],
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Webhook.ts",
            "line": 33,
            "col": 4
          }
        }
      ],
      "properties": [
        {
          "tsType": {
            "repr": "Session",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Session"
            }
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "session",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Webhook.ts",
            "line": 60,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "Snowflake",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Snowflake"
            }
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Webhook.ts",
            "line": 61,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "WebhookTypes",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "WebhookTypes"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "type",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Webhook.ts",
            "line": 62,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "token",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Webhook.ts",
            "line": 63,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "bigint",
            "kind": "keyword",
            "keyword": "bigint"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "avatar",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Webhook.ts",
            "line": 64,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "Snowflake",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Snowflake"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "applicationId",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Webhook.ts",
            "line": 65,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "Snowflake",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Snowflake"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "channelId",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Webhook.ts",
            "line": 66,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "Snowflake",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Snowflake"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "guildId",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Webhook.ts",
            "line": 67,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "User",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "User"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "user",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Webhook.ts",
            "line": 68,
            "col": 4
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "execute",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "options",
                "optional": true,
                "tsType": {
                  "repr": "",
                  "kind": "intersection",
                  "intersection": [
                    {
                      "repr": "WebhookOptions",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "WebhookOptions"
                      }
                    },
                    {
                      "repr": "CreateMessage",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "CreateMessage"
                      }
                    },
                    {
                      "repr": "",
                      "kind": "typeLiteral",
                      "typeLiteral": {
                        "methods": [],
                        "properties": [
                          {
                            "name": "avatarUrl",
                            "params": [],
                            "computed": false,
                            "optional": true,
                            "tsType": {
                              "repr": "string",
                              "kind": "keyword",
                              "keyword": "string"
                            },
                            "typeParams": []
                          },
                          {
                            "name": "username",
                            "params": [],
                            "computed": false,
                            "optional": true,
                            "tsType": {
                              "repr": "string",
                              "kind": "keyword",
                              "keyword": "string"
                            },
                            "typeParams": []
                          }
                        ],
                        "callSignatures": [],
                        "indexSignatures": []
                      }
                    }
                  ]
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "",
                    "kind": "parenthesized",
                    "parenthesized": {
                      "repr": "",
                      "kind": "union",
                      "union": [
                        {
                          "repr": "Message",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "Message"
                          }
                        },
                        {
                          "repr": "undefined",
                          "kind": "keyword",
                          "keyword": "undefined"
                        }
                      ]
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Webhook.ts",
            "line": 70,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "fetch",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "Webhook",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Webhook"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Webhook.ts",
            "line": 103,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "fetchMessage",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "messageId",
                "optional": false,
                "tsType": {
                  "repr": "Snowflake",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Snowflake"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "options",
                "optional": true,
                "tsType": {
                  "repr": "",
                  "kind": "typeLiteral",
                  "typeLiteral": {
                    "methods": [],
                    "properties": [
                      {
                        "name": "threadId",
                        "params": [],
                        "computed": false,
                        "optional": true,
                        "tsType": {
                          "repr": "Snowflake",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "Snowflake"
                          }
                        },
                        "typeParams": []
                      }
                    ],
                    "callSignatures": [],
                    "indexSignatures": []
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "",
                    "kind": "union",
                    "union": [
                      {
                        "repr": "Message",
                        "kind": "typeRef",
                        "typeRef": {
                          "typeParams": null,
                          "typeName": "Message"
                        }
                      },
                      {
                        "repr": "undefined",
                        "kind": "keyword",
                        "keyword": "undefined"
                      }
                    ]
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Webhook.ts",
            "line": 113,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "deleteMessage",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "messageId",
                "optional": false,
                "tsType": {
                  "repr": "Snowflake",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Snowflake"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "options",
                "optional": true,
                "tsType": {
                  "repr": "",
                  "kind": "typeLiteral",
                  "typeLiteral": {
                    "methods": [],
                    "properties": [
                      {
                        "name": "threadId",
                        "params": [],
                        "computed": false,
                        "optional": true,
                        "tsType": {
                          "repr": "Snowflake",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "Snowflake"
                          }
                        },
                        "typeParams": []
                      }
                    ],
                    "callSignatures": [],
                    "indexSignatures": []
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "void",
                    "kind": "keyword",
                    "keyword": "void"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Webhook.ts",
            "line": 127,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "editMessage",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "messageId",
                "optional": true,
                "tsType": {
                  "repr": "Snowflake",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Snowflake"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "options",
                "optional": true,
                "tsType": {
                  "repr": "",
                  "kind": "intersection",
                  "intersection": [
                    {
                      "repr": "EditWebhookMessage",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "EditWebhookMessage"
                      }
                    },
                    {
                      "repr": "",
                      "kind": "typeLiteral",
                      "typeLiteral": {
                        "methods": [],
                        "properties": [
                          {
                            "name": "threadId",
                            "params": [],
                            "computed": false,
                            "optional": true,
                            "tsType": {
                              "repr": "Snowflake",
                              "kind": "typeRef",
                              "typeRef": {
                                "typeParams": null,
                                "typeName": "Snowflake"
                              }
                            },
                            "typeParams": []
                          }
                        ],
                        "callSignatures": [],
                        "indexSignatures": []
                      }
                    }
                  ]
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "Message",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Message"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Webhook.ts",
            "line": 139,
            "col": 4
          }
        }
      ],
      "extends": null,
      "implements": [
        {
          "repr": "Model",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "Model"
          }
        }
      ],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "import",
    "name": "Model",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Webhook.ts",
      "line": 1,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/structures/Base.ts",
      "imported": "Model"
    }
  },
  {
    "kind": "import",
    "name": "Session",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Webhook.ts",
      "line": 2,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/Session.ts",
      "imported": "Session"
    }
  },
  {
    "kind": "import",
    "name": "Snowflake",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Webhook.ts",
      "line": 3,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/Snowflake.ts",
      "imported": "Snowflake"
    }
  },
  {
    "kind": "import",
    "name": "DiscordEmbed",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Webhook.ts",
      "line": 4,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
      "imported": "DiscordEmbed"
    }
  },
  {
    "kind": "import",
    "name": "DiscordMessage",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Webhook.ts",
      "line": 4,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
      "imported": "DiscordMessage"
    }
  },
  {
    "kind": "import",
    "name": "DiscordMessageComponents",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Webhook.ts",
      "line": 4,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
      "imported": "DiscordMessageComponents"
    }
  },
  {
    "kind": "import",
    "name": "DiscordWebhook",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Webhook.ts",
      "line": 4,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
      "imported": "DiscordWebhook"
    }
  },
  {
    "kind": "import",
    "name": "FileContent",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Webhook.ts",
      "line": 4,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
      "imported": "FileContent"
    }
  },
  {
    "kind": "import",
    "name": "WebhookTypes",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Webhook.ts",
      "line": 4,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
      "imported": "WebhookTypes"
    }
  },
  {
    "kind": "import",
    "name": "WebhookOptions",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Webhook.ts",
      "line": 12,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/Routes.ts",
      "imported": "WebhookOptions"
    }
  },
  {
    "kind": "import",
    "name": "Attachment",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Webhook.ts",
      "line": 13,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/structures/Attachment.ts",
      "imported": "Attachment"
    }
  },
  {
    "kind": "import",
    "name": "AllowedMentions",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Webhook.ts",
      "line": 14,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/structures/Message.ts",
      "imported": "AllowedMentions"
    }
  },
  {
    "kind": "import",
    "name": "CreateMessage",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Webhook.ts",
      "line": 14,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/structures/Message.ts",
      "imported": "CreateMessage"
    }
  },
  {
    "kind": "import",
    "name": "Util",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Webhook.ts",
      "line": 15,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/Util.ts",
      "imported": "default"
    }
  },
  {
    "kind": "import",
    "name": "User",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Webhook.ts",
      "line": 16,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/structures/User.ts",
      "imported": "default"
    }
  },
  {
    "kind": "import",
    "name": "Message",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Webhook.ts",
      "line": 17,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/structures/Message.ts",
      "imported": "default"
    }
  },
  {
    "kind": "import",
    "name": "Routes",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Webhook.ts",
      "line": 18,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/Routes.ts",
      "imported": null
    }
  },
  {
    "kind": "class",
    "name": "BaseChannel",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
      "line": 37,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "Abstract class that represents the base for creating a new channel."
    },
    "classDef": {
      "isAbstract": true,
      "constructors": [
        {
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "session",
              "optional": false,
              "tsType": {
                "repr": "Session",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Session"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "data",
              "optional": false,
              "tsType": {
                "repr": "DiscordChannel",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "DiscordChannel"
                }
              }
            }
          ],
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
            "line": 38,
            "col": 4
          }
        }
      ],
      "properties": [
        {
          "jsDoc": {
            "doc": "id's refers to the identification of the channel"
          },
          "tsType": {
            "repr": "Snowflake",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Snowflake"
            }
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
            "line": 46,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "The session that instantiated the channel"
          },
          "tsType": {
            "repr": "Session",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Session"
            }
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "session",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
            "line": 49,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "Channel name defined by the entity"
          },
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "name",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
            "line": 52,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "Refers to the possible channel type implemented (Guild, DM, Voice, News, etc...)"
          },
          "tsType": {
            "repr": "ChannelTypes",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "ChannelTypes"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "type",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
            "line": 55,
            "col": 4
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "jsDoc": {
            "doc": "If the channel is a TextChannel"
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "isText",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "this is TextChannel",
              "kind": "typePredicate",
              "typePredicate": {
                "asserts": false,
                "param": {
                  "type": "this"
                },
                "type": {
                  "repr": "TextChannel",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "TextChannel"
                  }
                }
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
            "line": 58,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "If the channel is a VoiceChannel"
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "isVoice",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "this is VoiceChannel",
              "kind": "typePredicate",
              "typePredicate": {
                "asserts": false,
                "param": {
                  "type": "this"
                },
                "type": {
                  "repr": "VoiceChannel",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "VoiceChannel"
                  }
                }
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
            "line": 63,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "If the channel is a DMChannel"
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "isDM",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "this is DMChannel",
              "kind": "typePredicate",
              "typePredicate": {
                "asserts": false,
                "param": {
                  "type": "this"
                },
                "type": {
                  "repr": "DMChannel",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "DMChannel"
                  }
                }
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
            "line": 68,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "If the channel is a NewChannel"
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "isNews",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "this is NewsChannel",
              "kind": "typePredicate",
              "typePredicate": {
                "asserts": false,
                "param": {
                  "type": "this"
                },
                "type": {
                  "repr": "NewsChannel",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "NewsChannel"
                  }
                }
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
            "line": 73,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "If the channel is a ThreadChannel"
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "isThread",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "this is ThreadChannel",
              "kind": "typePredicate",
              "typePredicate": {
                "asserts": false,
                "param": {
                  "type": "this"
                },
                "type": {
                  "repr": "ThreadChannel",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "ThreadChannel"
                  }
                }
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
            "line": 78,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "If the channel is a StageChannel"
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "isStage",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "this is StageChannel",
              "kind": "typePredicate",
              "typePredicate": {
                "asserts": false,
                "param": {
                  "type": "this"
                },
                "type": {
                  "repr": "StageChannel",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "StageChannel"
                  }
                }
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
            "line": 83,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "toString",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
            "line": 87,
            "col": 4
          }
        }
      ],
      "extends": null,
      "implements": [
        {
          "repr": "Model",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "Model"
          }
        }
      ],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "DiscordInviteOptions",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
      "line": 97,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "tags": [
        {
          "kind": "unsupported",
          "value": "@link https://discord.com/developers/docs/resources/channel#create-channel-invite-json-params\nRepresents the options object to create an invitation"
        }
      ]
    },
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "maxAge",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
            "line": 99,
            "col": 4
          },
          "jsDoc": {
            "doc": "duration of invite in seconds before expiry, or 0 for never. between 0 and 604800 (7 days)"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "maxUses",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
            "line": 101,
            "col": 4
          },
          "jsDoc": {
            "doc": "max number of uses or 0 for unlimited. between 0 and 100"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "unique",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
            "line": 103,
            "col": 4
          },
          "jsDoc": {
            "doc": "if the invitation is unique. If it's true, don't try to reuse a similar invite (useful for creating many unique one time use invites)"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        },
        {
          "name": "temporary",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
            "line": 105,
            "col": 4
          },
          "jsDoc": {
            "doc": "whether this invite only grants temporary membership"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        },
        {
          "name": "reason",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
            "line": 106,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "targetType",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
            "line": 108,
            "col": 4
          },
          "jsDoc": {
            "doc": "the type of target for this voice channel invite"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "TargetTypes",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "TargetTypes"
            }
          },
          "typeParams": []
        },
        {
          "name": "targetUserId",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
            "line": 110,
            "col": 4
          },
          "jsDoc": {
            "doc": "the id of the user whose stream to display for this invite, required if targetType is 1, the user must be streaming in the channel"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "Snowflake",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Snowflake"
            }
          },
          "typeParams": []
        },
        {
          "name": "targetApplicationId",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
            "line": 112,
            "col": 4
          },
          "jsDoc": {
            "doc": "the id of the embedded application to open for this invite, required if targetType is 2, the application must have the EMBEDDED flag"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "Snowflake",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Snowflake"
            }
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "CreateWebhook",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
      "line": 116,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "Webhook create object"
    },
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "name",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
            "line": 118,
            "col": 4
          },
          "jsDoc": {
            "doc": "name of the webhook (1-80 characters)"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "avatar",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
            "line": 120,
            "col": 4
          },
          "jsDoc": {
            "doc": "image for the default webhook avatar"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "reason",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
            "line": 121,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "variable",
    "name": "textBasedChannels",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
      "line": 125,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "Available text-channel-types list"
    },
    "variableDef": {
      "tsType": {
        "repr": "",
        "kind": "array",
        "array": {
          "repr": "ChannelTypes",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "ChannelTypes"
          }
        }
      },
      "kind": "const"
    }
  },
  {
    "kind": "typeAlias",
    "name": "TextBasedChannels",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
      "line": 136,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "Available text-channel-types"
    },
    "typeAliasDef": {
      "tsType": {
        "repr": "",
        "kind": "union",
        "union": [
          {
            "repr": "ChannelTypes.DM",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "ChannelTypes.DM"
            }
          },
          {
            "repr": "ChannelTypes.GroupDm",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "ChannelTypes.GroupDm"
            }
          },
          {
            "repr": "ChannelTypes.GuildPrivateThread",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "ChannelTypes.GuildPrivateThread"
            }
          },
          {
            "repr": "ChannelTypes.GuildPublicThread",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "ChannelTypes.GuildPublicThread"
            }
          },
          {
            "repr": "ChannelTypes.GuildNews",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "ChannelTypes.GuildNews"
            }
          },
          {
            "repr": "ChannelTypes.GuildVoice",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "ChannelTypes.GuildVoice"
            }
          },
          {
            "repr": "ChannelTypes.GuildText",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "ChannelTypes.GuildText"
            }
          }
        ]
      },
      "typeParams": []
    }
  },
  {
    "kind": "class",
    "name": "TextChannel",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
      "line": 148,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "Represents a text channel."
    },
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "jsDoc": {
            "tags": [
              {
                "kind": "param",
                "name": "session",
                "doc": "{Session} - The session that instantiated the channel"
              },
              {
                "kind": "param",
                "name": "data",
                "doc": "{DiscordChannel} - Required information to create the channel"
              }
            ]
          },
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "session",
              "optional": false,
              "tsType": {
                "repr": "Session",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Session"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "data",
              "optional": false,
              "tsType": {
                "repr": "DiscordChannel",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "DiscordChannel"
                }
              }
            }
          ],
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
            "line": 154,
            "col": 4
          }
        }
      ],
      "properties": [
        {
          "jsDoc": {
            "doc": "The session that instantiated the channel"
          },
          "tsType": {
            "repr": "Session",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Session"
            }
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "session",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
            "line": 172,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "id's refers to the identification of the channel"
          },
          "tsType": {
            "repr": "Snowflake",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Snowflake"
            }
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
            "line": 174,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "Current channel name"
          },
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "name",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
            "line": 176,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "The type of the channel"
          },
          "tsType": {
            "repr": "TextBasedChannels",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "TextBasedChannels"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "type",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
            "line": 178,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "The id of the last message sent in this channel (or thread for GUILD_FORUM channels) (may not point to an existing or valid message or thread)"
          },
          "tsType": {
            "repr": "Snowflake",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Snowflake"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "lastMessageId",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
            "line": 180,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "When the last pinned message was pinned. This may be undefined in events such as GUILD_CREATE when a message is not pinned."
          },
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "lastPinTimestamp",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
            "line": 182,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "Amount of seconds a user has to wait before sending another message (0-21600); bots, as well as users with the permission manage_messages or manage_channel, are unaffected"
          },
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "rateLimitPerUser",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
            "line": 184,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "If the channel is NSFW (Not-Safe-For-Work content)"
          },
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "nsfw",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
            "line": 186,
            "col": 4
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "jsDoc": {
            "doc": "Mixin"
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": true,
          "name": "applyTo",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "klass",
                "optional": false,
                "tsType": {
                  "repr": "Function",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Function"
                  }
                }
              },
              {
                "kind": "assign",
                "left": {
                  "kind": "identifier",
                  "name": "ignore",
                  "optional": false,
                  "tsType": {
                    "repr": "Array",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": [
                        {
                          "repr": "",
                          "kind": "typeOperator",
                          "typeOperator": {
                            "operator": "keyof",
                            "tsType": {
                              "repr": "TextChannel",
                              "kind": "typeRef",
                              "typeRef": {
                                "typeParams": null,
                                "typeName": "TextChannel"
                              }
                            }
                          }
                        }
                      ],
                      "typeName": "Array"
                    }
                  }
                },
                "right": "[UNSUPPORTED]",
                "tsType": null
              }
            ],
            "returnType": {
              "repr": "void",
              "kind": "keyword",
              "keyword": "void"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
            "line": 192,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "fetchPins makes an asynchronous request and gets the current channel pins.",
            "tags": [
              {
                "kind": "return",
                "type": "Promise<Message[] | []>",
                "doc": "- A promise that resolves with an array of Message objects."
              }
            ]
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "fetchPins",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "",
                    "kind": "union",
                    "union": [
                      {
                        "repr": "",
                        "kind": "array",
                        "array": {
                          "repr": "Message",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "Message"
                          }
                        }
                      },
                      {
                        "repr": "",
                        "kind": "tuple",
                        "tuple": []
                      }
                    ]
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
            "line": 220,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "createInvite makes an asynchronous request to create a new invitation.",
            "tags": [
              {
                "kind": "param",
                "name": "options",
                "type": "DiscordInviteOptions",
                "doc": "- The options to create the invitation"
              },
              {
                "kind": "return",
                "type": "Promise<Invite>",
                "doc": "- The created invite"
              }
            ]
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "createInvite",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "options",
                "optional": true,
                "tsType": {
                  "repr": "DiscordInviteOptions",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "DiscordInviteOptions"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "Invite",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Invite"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
            "line": 234,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "fetchMessages makes an asynchronous request and gets the channel messages",
            "tags": [
              {
                "kind": "param",
                "name": "options",
                "type": "Routes.GetMessagesOptions",
                "doc": "- The options to get the messages"
              },
              {
                "kind": "return",
                "type": "Promise<Message[] | []>",
                "doc": "- The messages"
              }
            ]
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "fetchMessages",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "options",
                "optional": true,
                "tsType": {
                  "repr": "Routes.GetMessagesOptions",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Routes.GetMessagesOptions"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "",
                    "kind": "union",
                    "union": [
                      {
                        "repr": "",
                        "kind": "array",
                        "array": {
                          "repr": "Message",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "Message"
                          }
                        }
                      },
                      {
                        "repr": "",
                        "kind": "tuple",
                        "tuple": []
                      }
                    ]
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
            "line": 260,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "sendTyping sends a typing POST request"
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "sendTyping",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "void",
                    "kind": "keyword",
                    "keyword": "void"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
            "line": 271,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "pinMessage pins a channel message.\nSame as Message.pin().",
            "tags": [
              {
                "kind": "param",
                "name": "messageId",
                "type": "Snowflake",
                "doc": "- The id of the message to pin"
              },
              {
                "kind": "return",
                "type": "Promise<void>",
                "doc": "The promise that resolves when the request is complete"
              }
            ]
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "pinMessage",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "messageId",
                "optional": false,
                "tsType": {
                  "repr": "Snowflake",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Snowflake"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "void",
                    "kind": "keyword",
                    "keyword": "void"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
            "line": 285,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "unpinMessage unpin a channel message.\nSame as Message.unpin()",
            "tags": [
              {
                "kind": "param",
                "name": "messageId",
                "type": "Snowflake",
                "doc": "- The id of the message to unpin"
              },
              {
                "kind": "return",
                "type": "Promise<void>",
                "doc": "The promise of the request"
              }
            ]
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "unpinMessage",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "messageId",
                "optional": false,
                "tsType": {
                  "repr": "Snowflake",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Snowflake"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "void",
                    "kind": "keyword",
                    "keyword": "void"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
            "line": 295,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "addReaction adds a reaction to the message.\nSame as Message.addReaction().",
            "tags": [
              {
                "kind": "param",
                "name": "messageId",
                "type": "Snowflake",
                "doc": "- The message to add the reaction to"
              },
              {
                "kind": "param",
                "name": "reaction",
                "type": "EmojiResolvable",
                "doc": "- The reaction to add"
              },
              {
                "kind": "return",
                "type": "Promise<void>",
                "doc": "The promise of the request"
              }
            ]
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "addReaction",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "messageId",
                "optional": false,
                "tsType": {
                  "repr": "Snowflake",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Snowflake"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "reaction",
                "optional": false,
                "tsType": {
                  "repr": "EmojiResolvable",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "EmojiResolvable"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "void",
                    "kind": "keyword",
                    "keyword": "void"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
            "line": 306,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "removeReaction removes a reaction from the message.\nSame as Message.removeReaction().",
            "tags": [
              {
                "kind": "param",
                "name": "messageId",
                "type": "Snowflake",
                "doc": "- The id of the message to remove the reaction from"
              },
              {
                "kind": "param",
                "name": "reaction",
                "type": "EmojiResolvable",
                "doc": "- The reaction to remove"
              },
              {
                "kind": "param",
                "name": "options",
                "type": "userId: Snowflake",
                "doc": "- The user to remove the reaction from"
              }
            ]
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "removeReaction",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "messageId",
                "optional": false,
                "tsType": {
                  "repr": "Snowflake",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Snowflake"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "reaction",
                "optional": false,
                "tsType": {
                  "repr": "EmojiResolvable",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "EmojiResolvable"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "options",
                "optional": true,
                "tsType": {
                  "repr": "",
                  "kind": "typeLiteral",
                  "typeLiteral": {
                    "methods": [],
                    "properties": [
                      {
                        "name": "userId",
                        "params": [],
                        "computed": false,
                        "optional": false,
                        "tsType": {
                          "repr": "Snowflake",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "Snowflake"
                          }
                        },
                        "typeParams": []
                      }
                    ],
                    "callSignatures": [],
                    "indexSignatures": []
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "void",
                    "kind": "keyword",
                    "keyword": "void"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
            "line": 320,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "removeReactionEmoji removes an emoji reaction from the messageId provided.\nSame as Message.removeReactionEmoji().",
            "tags": [
              {
                "kind": "param",
                "name": "messageId",
                "type": "Snowflake",
                "doc": "- The message id to remove the reaction from."
              },
              {
                "kind": "param",
                "name": "emoji",
                "type": "EmojiResolvable",
                "doc": "- The emoji to remove."
              },
              {
                "kind": "param",
                "name": "userId",
                "type": "Snowflake",
                "doc": "- The user id to remove the reaction from."
              }
            ]
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "removeReactionEmoji",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "messageId",
                "optional": false,
                "tsType": {
                  "repr": "Snowflake",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Snowflake"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "reaction",
                "optional": false,
                "tsType": {
                  "repr": "EmojiResolvable",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "EmojiResolvable"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "void",
                    "kind": "keyword",
                    "keyword": "void"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
            "line": 339,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "nukeReactions nukes every reaction on the message.\nSame as Message.nukeReactions().",
            "tags": [
              {
                "kind": "param",
                "name": "messageId",
                "doc": "The message id to nuke reactions from."
              },
              {
                "kind": "return",
                "type": "Promise<void>",
                "doc": "A promise that resolves when the reactions are nuked."
              }
            ]
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "nukeReactions",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "messageId",
                "optional": false,
                "tsType": {
                  "repr": "Snowflake",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Snowflake"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "void",
                    "kind": "keyword",
                    "keyword": "void"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
            "line": 351,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "fetchReactions gets the users who reacted with this emoji on the message.\nSame as Message.fetchReactions().",
            "tags": [
              {
                "kind": "param",
                "name": "messageId",
                "type": "Snowflake",
                "doc": "- The message id to get the reactions from."
              },
              {
                "kind": "param",
                "name": "reaction",
                "type": "EmojiResolvable",
                "doc": "- The emoji to get the reactions from."
              },
              {
                "kind": "param",
                "name": "options",
                "type": "Routes.GetReactionsOptions",
                "doc": "- The options to get the reactions with."
              },
              {
                "kind": "return",
                "type": "Promise<User[]>",
                "doc": "- The users who reacted with this emoji on the message."
              }
            ]
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "fetchReactions",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "messageId",
                "optional": false,
                "tsType": {
                  "repr": "Snowflake",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Snowflake"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "reaction",
                "optional": false,
                "tsType": {
                  "repr": "EmojiResolvable",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "EmojiResolvable"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "options",
                "optional": true,
                "tsType": {
                  "repr": "Routes.GetReactions",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Routes.GetReactions"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "",
                    "kind": "array",
                    "array": {
                      "repr": "User",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "User"
                      }
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
            "line": 363,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "sendMessage sends a message to the channel.\nSame as Message.reply().",
            "tags": [
              {
                "kind": "param",
                "name": "options",
                "type": "CreateMessage",
                "doc": "- Options for a new message."
              },
              {
                "kind": "return",
                "type": "Promise<Message>",
                "doc": "The sent message."
              }
            ]
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "sendMessage",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "options",
                "optional": false,
                "tsType": {
                  "repr": "CreateMessage",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "CreateMessage"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "Message",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Message"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
            "line": 383,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "editMessage edits a message.\nSame as Message.edit().",
            "tags": [
              {
                "kind": "param",
                "name": "messageId",
                "type": "Snowflake",
                "doc": "- Message ID."
              },
              {
                "kind": "param",
                "name": "options",
                "type": "CreateMessage",
                "doc": "- Options for edit a message."
              },
              {
                "kind": "return",
                "type": "Promise<Message>",
                "doc": "The edited message."
              }
            ]
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "editMessage",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "messageId",
                "optional": false,
                "tsType": {
                  "repr": "Snowflake",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Snowflake"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "options",
                "optional": false,
                "tsType": {
                  "repr": "EditMessage",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "EditMessage"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "Message",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Message"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
            "line": 394,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "createWebhook creates a webhook.",
            "tags": [
              {
                "kind": "param",
                "name": "options",
                "type": "CreateWebhook",
                "doc": "- Options for a new webhook."
              },
              {
                "kind": "return",
                "type": "Promise<Webhook>",
                "doc": "The created webhook."
              }
            ]
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "createWebhook",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "options",
                "optional": false,
                "tsType": {
                  "repr": "CreateWebhook",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "CreateWebhook"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "Webhook",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Webhook"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
            "line": 403,
            "col": 4
          }
        }
      ],
      "extends": null,
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "ThreadCreateOptions",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
      "line": 424,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "Represent the options object to create a thread channel",
      "tags": [
        {
          "kind": "unsupported",
          "value": "@link https://discord.com/developers/docs/resources/channel#start-thread-without-message"
        }
      ]
    },
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "name",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
            "line": 425,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "autoArchiveDuration",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
            "line": 426,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "60",
                "kind": "literal",
                "literal": {
                  "kind": "number",
                  "number": 60.0
                }
              },
              {
                "repr": "1440",
                "kind": "literal",
                "literal": {
                  "kind": "number",
                  "number": 1440.0
                }
              },
              {
                "repr": "4320",
                "kind": "literal",
                "literal": {
                  "kind": "number",
                  "number": 4320.0
                }
              },
              {
                "repr": "10080",
                "kind": "literal",
                "literal": {
                  "kind": "number",
                  "number": 10080.0
                }
              }
            ]
          },
          "typeParams": []
        },
        {
          "name": "type",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
            "line": 427,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "10",
                "kind": "literal",
                "literal": {
                  "kind": "number",
                  "number": 10.0
                }
              },
              {
                "repr": "11",
                "kind": "literal",
                "literal": {
                  "kind": "number",
                  "number": 11.0
                }
              },
              {
                "repr": "12",
                "kind": "literal",
                "literal": {
                  "kind": "number",
                  "number": 12.0
                }
              }
            ]
          },
          "typeParams": []
        },
        {
          "name": "invitable",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
            "line": 428,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        },
        {
          "name": "rateLimitPerUser",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
            "line": 429,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "reason",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
            "line": 430,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "EditGuildChannelOptions",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
      "line": 437,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "Representations of the objects to edit a guild channel",
      "tags": [
        {
          "kind": "unsupported",
          "value": "@link https://discord.com/developers/docs/resources/channel#modify-channel-json-params-guild-channel"
        }
      ]
    },
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "name",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
            "line": 438,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "position",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
            "line": 439,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "permissionOverwrites",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
            "line": 440,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "PermissionsOverwrites",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "PermissionsOverwrites"
              }
            }
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "EditNewsChannelOptions",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
      "line": 443,
      "col": 0
    },
    "declarationKind": "export",
    "interfaceDef": {
      "extends": [
        {
          "repr": "EditGuildChannelOptions",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "EditGuildChannelOptions"
          }
        }
      ],
      "methods": [],
      "properties": [
        {
          "name": "type",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
            "line": 444,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "ChannelTypes.GuildNews",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "ChannelTypes.GuildNews"
                }
              },
              {
                "repr": "ChannelTypes.GuildText",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "ChannelTypes.GuildText"
                }
              }
            ]
          },
          "typeParams": []
        },
        {
          "name": "topic",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
            "line": 445,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              },
              {
                "repr": "null",
                "kind": "keyword",
                "keyword": "null"
              }
            ]
          },
          "typeParams": []
        },
        {
          "name": "nfsw",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
            "line": 446,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "boolean",
                "kind": "keyword",
                "keyword": "boolean"
              },
              {
                "repr": "null",
                "kind": "keyword",
                "keyword": "null"
              }
            ]
          },
          "typeParams": []
        },
        {
          "name": "parentId",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
            "line": 447,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "Snowflake",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Snowflake"
                }
              },
              {
                "repr": "null",
                "kind": "keyword",
                "keyword": "null"
              }
            ]
          },
          "typeParams": []
        },
        {
          "name": "defaultAutoArchiveDuration",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
            "line": 448,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "number",
                "kind": "keyword",
                "keyword": "number"
              },
              {
                "repr": "null",
                "kind": "keyword",
                "keyword": "null"
              }
            ]
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "EditGuildTextChannelOptions",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
      "line": 451,
      "col": 0
    },
    "declarationKind": "export",
    "interfaceDef": {
      "extends": [
        {
          "repr": "EditNewsChannelOptions",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "EditNewsChannelOptions"
          }
        }
      ],
      "methods": [],
      "properties": [
        {
          "name": "rateLimitPerUser",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
            "line": 452,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "number",
                "kind": "keyword",
                "keyword": "number"
              },
              {
                "repr": "null",
                "kind": "keyword",
                "keyword": "null"
              }
            ]
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "EditStageChannelOptions",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
      "line": 455,
      "col": 0
    },
    "declarationKind": "export",
    "interfaceDef": {
      "extends": [
        {
          "repr": "EditGuildChannelOptions",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "EditGuildChannelOptions"
          }
        }
      ],
      "methods": [],
      "properties": [
        {
          "name": "bitrate",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
            "line": 456,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "number",
                "kind": "keyword",
                "keyword": "number"
              },
              {
                "repr": "null",
                "kind": "keyword",
                "keyword": "null"
              }
            ]
          },
          "typeParams": []
        },
        {
          "name": "rtcRegion",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
            "line": 457,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "Snowflake",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Snowflake"
                }
              },
              {
                "repr": "null",
                "kind": "keyword",
                "keyword": "null"
              }
            ]
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "EditVoiceChannelOptions",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
      "line": 460,
      "col": 0
    },
    "declarationKind": "export",
    "interfaceDef": {
      "extends": [
        {
          "repr": "EditStageChannelOptions",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "EditStageChannelOptions"
          }
        }
      ],
      "methods": [],
      "properties": [
        {
          "name": "nsfw",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
            "line": 461,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "boolean",
                "kind": "keyword",
                "keyword": "boolean"
              },
              {
                "repr": "null",
                "kind": "keyword",
                "keyword": "null"
              }
            ]
          },
          "typeParams": []
        },
        {
          "name": "userLimit",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
            "line": 462,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "number",
                "kind": "keyword",
                "keyword": "number"
              },
              {
                "repr": "null",
                "kind": "keyword",
                "keyword": "null"
              }
            ]
          },
          "typeParams": []
        },
        {
          "name": "parentId",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
            "line": 463,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "Snowflake",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Snowflake"
                }
              },
              {
                "repr": "null",
                "kind": "keyword",
                "keyword": "null"
              }
            ]
          },
          "typeParams": []
        },
        {
          "name": "videoQualityMode",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
            "line": 464,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "VideoQualityModes",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "VideoQualityModes"
                }
              },
              {
                "repr": "null",
                "kind": "keyword",
                "keyword": "null"
              }
            ]
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "ThreadCreateOptions",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
      "line": 471,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "Represents the option object to create a thread channel from a message",
      "tags": [
        {
          "kind": "unsupported",
          "value": "@link https://discord.com/developers/docs/resources/channel#start-thread-from-message"
        }
      ]
    },
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "name",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
            "line": 472,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "autoArchiveDuration",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
            "line": 473,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "60",
                "kind": "literal",
                "literal": {
                  "kind": "number",
                  "number": 60.0
                }
              },
              {
                "repr": "1440",
                "kind": "literal",
                "literal": {
                  "kind": "number",
                  "number": 1440.0
                }
              },
              {
                "repr": "4320",
                "kind": "literal",
                "literal": {
                  "kind": "number",
                  "number": 4320.0
                }
              },
              {
                "repr": "10080",
                "kind": "literal",
                "literal": {
                  "kind": "number",
                  "number": 10080.0
                }
              }
            ]
          },
          "typeParams": []
        },
        {
          "name": "rateLimitPerUser",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
            "line": 474,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "messageId",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
            "line": 475,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "Snowflake",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Snowflake"
            }
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "ReturnThreadsArchive",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
      "line": 480,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "tags": [
        {
          "kind": "unsupported",
          "value": "@link https://discord.com/developers/docs/resources/channel#list-public-archived-threads-response-body"
        }
      ]
    },
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "threads",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
            "line": 481,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "Record",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": [
                {
                  "repr": "Snowflake",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Snowflake"
                  }
                },
                {
                  "repr": "ThreadChannel",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "ThreadChannel"
                  }
                }
              ],
              "typeName": "Record"
            }
          },
          "typeParams": []
        },
        {
          "name": "members",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
            "line": 482,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "Record",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": [
                {
                  "repr": "Snowflake",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Snowflake"
                  }
                },
                {
                  "repr": "ThreadMember",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "ThreadMember"
                  }
                }
              ],
              "typeName": "Record"
            }
          },
          "typeParams": []
        },
        {
          "name": "hasMore",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
            "line": 483,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "class",
    "name": "GuildChannel",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
      "line": 486,
      "col": 0
    },
    "declarationKind": "export",
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "session",
              "optional": false,
              "tsType": {
                "repr": "Session",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Session"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "data",
              "optional": false,
              "tsType": {
                "repr": "DiscordChannel",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "DiscordChannel"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "guildId",
              "optional": false,
              "tsType": {
                "repr": "Snowflake",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Snowflake"
                }
              }
            }
          ],
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
            "line": 487,
            "col": 4
          }
        }
      ],
      "properties": [
        {
          "tsType": {
            "repr": "Exclude",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": [
                {
                  "repr": "ChannelTypes",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "ChannelTypes"
                  }
                },
                {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "ChannelTypes.DM",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "ChannelTypes.DM"
                      }
                    },
                    {
                      "repr": "ChannelTypes.GroupDm",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "ChannelTypes.GroupDm"
                      }
                    }
                  ]
                }
              ],
              "typeName": "Exclude"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "type",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
            "line": 496,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "Snowflake",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Snowflake"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "guildId",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
            "line": 497,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "topic",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
            "line": 498,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "position",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
            "line": 499,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "Snowflake",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Snowflake"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "parentId",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
            "line": 500,
            "col": 4
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "fetchInvites",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "",
                    "kind": "array",
                    "array": {
                      "repr": "Invite",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "Invite"
                      }
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
            "line": 502,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "edit",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "options",
                "optional": false,
                "tsType": {
                  "repr": "EditNewsChannelOptions",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "EditNewsChannelOptions"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "NewsChannel",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "NewsChannel"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
            "line": 512,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "edit",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "options",
                "optional": false,
                "tsType": {
                  "repr": "EditStageChannelOptions",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "EditStageChannelOptions"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "StageChannel",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "StageChannel"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
            "line": 513,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "edit",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "options",
                "optional": false,
                "tsType": {
                  "repr": "EditVoiceChannelOptions",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "EditVoiceChannelOptions"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "VoiceChannel",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "VoiceChannel"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
            "line": 514,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "edit",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "options",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "EditGuildTextChannelOptions",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "EditGuildTextChannelOptions"
                      }
                    },
                    {
                      "repr": "EditNewsChannelOptions",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "EditNewsChannelOptions"
                      }
                    },
                    {
                      "repr": "EditVoiceChannelOptions",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "EditVoiceChannelOptions"
                      }
                    }
                  ]
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "Channel",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Channel"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
            "line": 515,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getArchivedThreads",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "options",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "intersection",
                  "intersection": [
                    {
                      "repr": "Routes.ListArchivedThreads",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "Routes.ListArchivedThreads"
                      }
                    },
                    {
                      "repr": "",
                      "kind": "typeLiteral",
                      "typeLiteral": {
                        "methods": [],
                        "properties": [
                          {
                            "name": "type",
                            "params": [],
                            "computed": false,
                            "optional": false,
                            "tsType": {
                              "repr": "",
                              "kind": "union",
                              "union": [
                                {
                                  "repr": "public",
                                  "kind": "literal",
                                  "literal": {
                                    "kind": "string",
                                    "string": "public"
                                  }
                                },
                                {
                                  "repr": "private",
                                  "kind": "literal",
                                  "literal": {
                                    "kind": "string",
                                    "string": "private"
                                  }
                                },
                                {
                                  "repr": "privateJoinedThreads",
                                  "kind": "literal",
                                  "literal": {
                                    "kind": "string",
                                    "string": "privateJoinedThreads"
                                  }
                                }
                              ]
                            },
                            "typeParams": []
                          }
                        ],
                        "callSignatures": [],
                        "indexSignatures": []
                      }
                    }
                  ]
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "ReturnThreadsArchive",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "ReturnThreadsArchive"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
            "line": 543,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "createThread",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "options",
                "optional": false,
                "tsType": {
                  "repr": "ThreadCreateOptions",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "ThreadCreateOptions"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "ThreadChannel",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "ThreadChannel"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
            "line": 577,
            "col": 4
          }
        }
      ],
      "extends": "BaseChannel",
      "implements": [
        {
          "repr": "Model",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "Model"
          }
        }
      ],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "UpdateVoiceState",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
      "line": 598,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "tags": [
        {
          "kind": "unsupported",
          "value": "@link https://discord.com/developers/docs/topics/gateway#update-voice-state"
        }
      ]
    },
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "guildId",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
            "line": 599,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "channelId",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
            "line": 600,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "selfMute",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
            "line": 601,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        },
        {
          "name": "selfDeaf",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
            "line": 602,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "class",
    "name": "BaseVoiceChannel",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
      "line": 605,
      "col": 0
    },
    "declarationKind": "export",
    "classDef": {
      "isAbstract": true,
      "constructors": [
        {
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "session",
              "optional": false,
              "tsType": {
                "repr": "Session",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Session"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "data",
              "optional": false,
              "tsType": {
                "repr": "DiscordChannel",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "DiscordChannel"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "guildId",
              "optional": false,
              "tsType": {
                "repr": "Snowflake",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Snowflake"
                }
              }
            }
          ],
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
            "line": 606,
            "col": 4
          }
        }
      ],
      "properties": [
        {
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "ChannelTypes.GuildVoice",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "ChannelTypes.GuildVoice"
                }
              },
              {
                "repr": "ChannelTypes.GuildStageVoice",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "ChannelTypes.GuildStageVoice"
                }
              }
            ]
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "type",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
            "line": 618,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "bitRate",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
            "line": 619,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "userLimit",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
            "line": 620,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "Snowflake",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Snowflake"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "rtcRegion",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
            "line": 621,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "VideoQualityModes",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "VideoQualityModes"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "videoQuality",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
            "line": 623,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "nsfw",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
            "line": 624,
            "col": 4
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "jsDoc": {
            "doc": "This function was gathered from Discordeno it may not work"
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "connect",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "options",
                "optional": true,
                "tsType": {
                  "repr": "UpdateVoiceState",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "UpdateVoiceState"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "void",
                    "kind": "keyword",
                    "keyword": "void"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
            "line": 629,
            "col": 4
          }
        }
      ],
      "extends": "GuildChannel",
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "class",
    "name": "DMChannel",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
      "line": 650,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "DMChannel"
    },
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "session",
              "optional": false,
              "tsType": {
                "repr": "Session",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Session"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "data",
              "optional": false,
              "tsType": {
                "repr": "DiscordChannel",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "DiscordChannel"
                }
              }
            }
          ],
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
            "line": 651,
            "col": 4
          }
        }
      ],
      "properties": [
        {
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "ChannelTypes.DM",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "ChannelTypes.DM"
                }
              },
              {
                "repr": "ChannelTypes.GroupDm",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "ChannelTypes.GroupDm"
                }
              }
            ]
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "type",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
            "line": 660,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "User",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "User"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "user",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
            "line": 661,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "Snowflake",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Snowflake"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "lastMessageId",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
            "line": 662,
            "col": 4
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "close",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "DMChannel",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "DMChannel"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
            "line": 664,
            "col": 4
          }
        }
      ],
      "extends": "BaseChannel",
      "implements": [
        {
          "repr": "Model",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "Model"
          }
        }
      ],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "DMChannel",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
      "line": 675,
      "col": 0
    },
    "declarationKind": "export",
    "interfaceDef": {
      "extends": [
        {
          "repr": "Omit",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": [
              {
                "repr": "TextChannel",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "TextChannel"
                }
              },
              {
                "repr": "type",
                "kind": "literal",
                "literal": {
                  "kind": "string",
                  "string": "type"
                }
              }
            ],
            "typeName": "Omit"
          }
        },
        {
          "repr": "Omit",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": [
              {
                "repr": "BaseChannel",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "BaseChannel"
                }
              },
              {
                "repr": "type",
                "kind": "literal",
                "literal": {
                  "kind": "string",
                  "string": "type"
                }
              }
            ],
            "typeName": "Omit"
          }
        }
      ],
      "methods": [],
      "properties": [],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "class",
    "name": "VoiceChannel",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
      "line": 680,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "VoiceChannel"
    },
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "session",
              "optional": false,
              "tsType": {
                "repr": "Session",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Session"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "data",
              "optional": false,
              "tsType": {
                "repr": "DiscordChannel",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "DiscordChannel"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "guildId",
              "optional": false,
              "tsType": {
                "repr": "Snowflake",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Snowflake"
                }
              }
            }
          ],
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
            "line": 681,
            "col": 4
          }
        }
      ],
      "properties": [
        {
          "tsType": {
            "repr": "ChannelTypes.GuildVoice",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "ChannelTypes.GuildVoice"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "type",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
            "line": 685,
            "col": 4
          }
        }
      ],
      "indexSignatures": [],
      "methods": [],
      "extends": "BaseVoiceChannel",
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "VoiceChannel",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
      "line": 688,
      "col": 0
    },
    "declarationKind": "export",
    "interfaceDef": {
      "extends": [
        {
          "repr": "TextChannel",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "TextChannel"
          }
        },
        {
          "repr": "BaseVoiceChannel",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "BaseVoiceChannel"
          }
        }
      ],
      "methods": [],
      "properties": [],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "class",
    "name": "NewsChannel",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
      "line": 693,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "NewsChannel"
    },
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "session",
              "optional": false,
              "tsType": {
                "repr": "Session",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Session"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "data",
              "optional": false,
              "tsType": {
                "repr": "DiscordChannel",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "DiscordChannel"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "guildId",
              "optional": false,
              "tsType": {
                "repr": "Snowflake",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Snowflake"
                }
              }
            }
          ],
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
            "line": 694,
            "col": 4
          }
        }
      ],
      "properties": [
        {
          "tsType": {
            "repr": "ChannelTypes.GuildNews",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "ChannelTypes.GuildNews"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "type",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
            "line": 700,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "defaultAutoArchiveDuration",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
            "line": 701,
            "col": 4
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "crosspostMessage",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "messageId",
                "optional": false,
                "tsType": {
                  "repr": "Snowflake",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Snowflake"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "Message",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Message"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
            "line": 703,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "publishMessage",
          "kind": "getter",
          "functionDef": {
            "params": [],
            "returnType": null,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
            "line": 707,
            "col": 4
          }
        }
      ],
      "extends": "GuildChannel",
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "NewsChannel",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
      "line": 714,
      "col": 0
    },
    "declarationKind": "export",
    "interfaceDef": {
      "extends": [
        {
          "repr": "TextChannel",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "TextChannel"
          }
        },
        {
          "repr": "GuildChannel",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "GuildChannel"
          }
        }
      ],
      "methods": [],
      "properties": [],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "class",
    "name": "StageChannel",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
      "line": 717,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "StageChannel"
    },
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "session",
              "optional": false,
              "tsType": {
                "repr": "Session",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Session"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "data",
              "optional": false,
              "tsType": {
                "repr": "DiscordChannel",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "DiscordChannel"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "guildId",
              "optional": false,
              "tsType": {
                "repr": "Snowflake",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Snowflake"
                }
              }
            }
          ],
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
            "line": 718,
            "col": 4
          }
        }
      ],
      "properties": [
        {
          "tsType": {
            "repr": "ChannelTypes.GuildStageVoice",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "ChannelTypes.GuildStageVoice"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "type",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
            "line": 723,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "topic",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
            "line": 724,
            "col": 4
          }
        }
      ],
      "indexSignatures": [],
      "methods": [],
      "extends": "BaseVoiceChannel",
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "class",
    "name": "ThreadChannel",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
      "line": 728,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "ThreadChannel"
    },
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "session",
              "optional": false,
              "tsType": {
                "repr": "Session",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Session"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "data",
              "optional": false,
              "tsType": {
                "repr": "DiscordChannel",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "DiscordChannel"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "guildId",
              "optional": false,
              "tsType": {
                "repr": "Snowflake",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Snowflake"
                }
              }
            }
          ],
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
            "line": 729,
            "col": 4
          }
        }
      ],
      "properties": [
        {
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "ChannelTypes.GuildNewsThread",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "ChannelTypes.GuildNewsThread"
                }
              },
              {
                "repr": "ChannelTypes.GuildPrivateThread",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "ChannelTypes.GuildPrivateThread"
                }
              },
              {
                "repr": "ChannelTypes.GuildPublicThread",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "ChannelTypes.GuildPublicThread"
                }
              }
            ]
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "type",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
            "line": 745,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "archived",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
            "line": 746,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "archiveTimestamp",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
            "line": 747,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "autoArchiveDuration",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
            "line": 748,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "locked",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
            "line": 749,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "messageCount",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
            "line": 750,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "memberCount",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
            "line": 751,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "ThreadMember",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "ThreadMember"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "member",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
            "line": 752,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "Snowflake",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Snowflake"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "ownerId",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
            "line": 753,
            "col": 4
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "joinThread",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "void",
                    "kind": "keyword",
                    "keyword": "void"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
            "line": 755,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "addToThread",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "guildMemberId",
                "optional": false,
                "tsType": {
                  "repr": "Snowflake",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Snowflake"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "void",
                    "kind": "keyword",
                    "keyword": "void"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
            "line": 763,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "leaveToThread",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "guildMemberId",
                "optional": false,
                "tsType": {
                  "repr": "Snowflake",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Snowflake"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "void",
                    "kind": "keyword",
                    "keyword": "void"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
            "line": 771,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "removeMember",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "assign",
                "left": {
                  "kind": "identifier",
                  "name": "memberId",
                  "optional": false,
                  "tsType": {
                    "repr": "Snowflake",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Snowflake"
                    }
                  }
                },
                "right": "[UNSUPPORTED]",
                "tsType": null
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "void",
                    "kind": "keyword",
                    "keyword": "void"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
            "line": 779,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "fetchMember",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "assign",
                "left": {
                  "kind": "identifier",
                  "name": "memberId",
                  "optional": false,
                  "tsType": {
                    "repr": "Snowflake",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Snowflake"
                    }
                  }
                },
                "right": "[UNSUPPORTED]",
                "tsType": null
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "ThreadMember",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "ThreadMember"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
            "line": 783,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "fetchMembers",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "",
                    "kind": "array",
                    "array": {
                      "repr": "ThreadMember",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "ThreadMember"
                      }
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
            "line": 787,
            "col": 4
          }
        }
      ],
      "extends": "GuildChannel",
      "implements": [
        {
          "repr": "Model",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "Model"
          }
        }
      ],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "ThreadChannel",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
      "line": 798,
      "col": 0
    },
    "declarationKind": "export",
    "interfaceDef": {
      "extends": [
        {
          "repr": "Omit",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": [
              {
                "repr": "GuildChannel",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "GuildChannel"
                }
              },
              {
                "repr": "type",
                "kind": "literal",
                "literal": {
                  "kind": "string",
                  "string": "type"
                }
              }
            ],
            "typeName": "Omit"
          }
        },
        {
          "repr": "Omit",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": [
              {
                "repr": "TextChannel",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "TextChannel"
                }
              },
              {
                "repr": "type",
                "kind": "literal",
                "literal": {
                  "kind": "string",
                  "string": "type"
                }
              }
            ],
            "typeName": "Omit"
          }
        }
      ],
      "methods": [],
      "properties": [],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "class",
    "name": "GuildTextChannel",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
      "line": 802,
      "col": 0
    },
    "declarationKind": "export",
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "session",
              "optional": false,
              "tsType": {
                "repr": "Session",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Session"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "data",
              "optional": false,
              "tsType": {
                "repr": "DiscordChannel",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "DiscordChannel"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "guildId",
              "optional": false,
              "tsType": {
                "repr": "Snowflake",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Snowflake"
                }
              }
            }
          ],
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
            "line": 803,
            "col": 4
          }
        }
      ],
      "properties": [
        {
          "tsType": {
            "repr": "ChannelTypes.GuildText",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "ChannelTypes.GuildText"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "type",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
            "line": 808,
            "col": 4
          }
        }
      ],
      "indexSignatures": [],
      "methods": [],
      "extends": "GuildChannel",
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "GuildTextChannel",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
      "line": 811,
      "col": 0
    },
    "declarationKind": "export",
    "interfaceDef": {
      "extends": [
        {
          "repr": "GuildChannel",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "GuildChannel"
          }
        },
        {
          "repr": "TextChannel",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "TextChannel"
          }
        }
      ],
      "methods": [],
      "properties": [],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "typeAlias",
    "name": "Channel",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
      "line": 816,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "ChannelFactory"
    },
    "typeAliasDef": {
      "tsType": {
        "repr": "",
        "kind": "union",
        "union": [
          {
            "repr": "GuildTextChannel",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "GuildTextChannel"
            }
          },
          {
            "repr": "TextChannel",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "TextChannel"
            }
          },
          {
            "repr": "VoiceChannel",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "VoiceChannel"
            }
          },
          {
            "repr": "DMChannel",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "DMChannel"
            }
          },
          {
            "repr": "NewsChannel",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "NewsChannel"
            }
          },
          {
            "repr": "ThreadChannel",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "ThreadChannel"
            }
          },
          {
            "repr": "StageChannel",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "StageChannel"
            }
          }
        ]
      },
      "typeParams": []
    }
  },
  {
    "kind": "typeAlias",
    "name": "ChannelInGuild",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
      "line": 825,
      "col": 0
    },
    "declarationKind": "export",
    "typeAliasDef": {
      "tsType": {
        "repr": "",
        "kind": "union",
        "union": [
          {
            "repr": "GuildTextChannel",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "GuildTextChannel"
            }
          },
          {
            "repr": "VoiceChannel",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "VoiceChannel"
            }
          },
          {
            "repr": "StageChannel",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "StageChannel"
            }
          },
          {
            "repr": "NewsChannel",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "NewsChannel"
            }
          },
          {
            "repr": "ThreadChannel",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "ThreadChannel"
            }
          }
        ]
      },
      "typeParams": []
    }
  },
  {
    "kind": "typeAlias",
    "name": "ChannelWithMessages",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
      "line": 832,
      "col": 0
    },
    "declarationKind": "export",
    "typeAliasDef": {
      "tsType": {
        "repr": "",
        "kind": "union",
        "union": [
          {
            "repr": "GuildTextChannel",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "GuildTextChannel"
            }
          },
          {
            "repr": "VoiceChannel",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "VoiceChannel"
            }
          },
          {
            "repr": "DMChannel",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "DMChannel"
            }
          },
          {
            "repr": "NewsChannel",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "NewsChannel"
            }
          },
          {
            "repr": "ThreadChannel",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "ThreadChannel"
            }
          }
        ]
      },
      "typeParams": []
    }
  },
  {
    "kind": "typeAlias",
    "name": "ChannelWithMessagesInGuild",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
      "line": 839,
      "col": 0
    },
    "declarationKind": "export",
    "typeAliasDef": {
      "tsType": {
        "repr": "Exclude",
        "kind": "typeRef",
        "typeRef": {
          "typeParams": [
            {
              "repr": "ChannelWithMessages",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "ChannelWithMessages"
              }
            },
            {
              "repr": "DMChannel",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "DMChannel"
              }
            }
          ],
          "typeName": "Exclude"
        }
      },
      "typeParams": []
    }
  },
  {
    "kind": "class",
    "name": "ChannelFactory",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
      "line": 841,
      "col": 0
    },
    "declarationKind": "export",
    "classDef": {
      "isAbstract": false,
      "constructors": [],
      "properties": [],
      "indexSignatures": [],
      "methods": [
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": true,
          "name": "fromGuildChannel",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "session",
                "optional": false,
                "tsType": {
                  "repr": "Session",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Session"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "channel",
                "optional": false,
                "tsType": {
                  "repr": "DiscordChannel",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "DiscordChannel"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "ChannelInGuild",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "ChannelInGuild"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
            "line": 842,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": true,
          "name": "from",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "session",
                "optional": false,
                "tsType": {
                  "repr": "Session",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Session"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "channel",
                "optional": false,
                "tsType": {
                  "repr": "DiscordChannel",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "DiscordChannel"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Channel",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "Channel"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
            "line": 860,
            "col": 4
          }
        }
      ],
      "extends": null,
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "import",
    "name": "Model",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
      "line": 2,
      "col": 0
    },
    "declarationKind": "private",
    "jsDoc": {
      "doc": "Types"
    },
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/structures/Base.ts",
      "imported": "Model"
    }
  },
  {
    "kind": "import",
    "name": "Snowflake",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
      "line": 3,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/Snowflake.ts",
      "imported": "Snowflake"
    }
  },
  {
    "kind": "import",
    "name": "Session",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
      "line": 4,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/Session.ts",
      "imported": "Session"
    }
  },
  {
    "kind": "import",
    "name": "PermissionsOverwrites",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
      "line": 5,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/Util.ts",
      "imported": "PermissionsOverwrites"
    }
  },
  {
    "kind": "import",
    "name": "ChannelTypes",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
      "line": 8,
      "col": 0
    },
    "declarationKind": "private",
    "jsDoc": {
      "doc": "External from vendor"
    },
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
      "imported": "ChannelTypes"
    }
  },
  {
    "kind": "import",
    "name": "DiscordChannel",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
      "line": 8,
      "col": 0
    },
    "declarationKind": "private",
    "jsDoc": {
      "doc": "External from vendor"
    },
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
      "imported": "DiscordChannel"
    }
  },
  {
    "kind": "import",
    "name": "DiscordInvite",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
      "line": 8,
      "col": 0
    },
    "declarationKind": "private",
    "jsDoc": {
      "doc": "External from vendor"
    },
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
      "imported": "DiscordInvite"
    }
  },
  {
    "kind": "import",
    "name": "DiscordInviteMetadata",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
      "line": 8,
      "col": 0
    },
    "declarationKind": "private",
    "jsDoc": {
      "doc": "External from vendor"
    },
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
      "imported": "DiscordInviteMetadata"
    }
  },
  {
    "kind": "import",
    "name": "DiscordListArchivedThreads",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
      "line": 8,
      "col": 0
    },
    "declarationKind": "private",
    "jsDoc": {
      "doc": "External from vendor"
    },
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
      "imported": "DiscordListArchivedThreads"
    }
  },
  {
    "kind": "import",
    "name": "DiscordMessage",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
      "line": 8,
      "col": 0
    },
    "declarationKind": "private",
    "jsDoc": {
      "doc": "External from vendor"
    },
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
      "imported": "DiscordMessage"
    }
  },
  {
    "kind": "import",
    "name": "DiscordThreadMember",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
      "line": 8,
      "col": 0
    },
    "declarationKind": "private",
    "jsDoc": {
      "doc": "External from vendor"
    },
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
      "imported": "DiscordThreadMember"
    }
  },
  {
    "kind": "import",
    "name": "DiscordWebhook",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
      "line": 8,
      "col": 0
    },
    "declarationKind": "private",
    "jsDoc": {
      "doc": "External from vendor"
    },
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
      "imported": "DiscordWebhook"
    }
  },
  {
    "kind": "import",
    "name": "GatewayOpcodes",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
      "line": 8,
      "col": 0
    },
    "declarationKind": "private",
    "jsDoc": {
      "doc": "External from vendor"
    },
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
      "imported": "GatewayOpcodes"
    }
  },
  {
    "kind": "import",
    "name": "TargetTypes",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
      "line": 8,
      "col": 0
    },
    "declarationKind": "private",
    "jsDoc": {
      "doc": "External from vendor"
    },
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
      "imported": "TargetTypes"
    }
  },
  {
    "kind": "import",
    "name": "VideoQualityModes",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
      "line": 8,
      "col": 0
    },
    "declarationKind": "private",
    "jsDoc": {
      "doc": "External from vendor"
    },
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
      "imported": "VideoQualityModes"
    }
  },
  {
    "kind": "import",
    "name": "calculateShardId",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
      "line": 23,
      "col": 0
    },
    "declarationKind": "private",
    "jsDoc": {
      "doc": "Functions and others"
    },
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/gateway/calculateShardId.ts",
      "imported": "calculateShardId"
    }
  },
  {
    "kind": "import",
    "name": "urlToBase64",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
      "line": 24,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/util/urlToBase64.ts",
      "imported": "urlToBase64"
    }
  },
  {
    "kind": "import",
    "name": "Routes",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
      "line": 27,
      "col": 0
    },
    "declarationKind": "private",
    "jsDoc": {
      "doc": "Classes and routes"
    },
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/Routes.ts",
      "imported": null
    }
  },
  {
    "kind": "import",
    "name": "Message",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
      "line": 28,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/structures/Message.ts",
      "imported": "default"
    }
  },
  {
    "kind": "import",
    "name": "CreateMessage",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
      "line": 28,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/structures/Message.ts",
      "imported": "CreateMessage"
    }
  },
  {
    "kind": "import",
    "name": "EditMessage",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
      "line": 28,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/structures/Message.ts",
      "imported": "EditMessage"
    }
  },
  {
    "kind": "import",
    "name": "EmojiResolvable",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
      "line": 28,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/structures/Message.ts",
      "imported": "EmojiResolvable"
    }
  },
  {
    "kind": "import",
    "name": "Invite",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
      "line": 29,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/structures/Invite.ts",
      "imported": "default"
    }
  },
  {
    "kind": "import",
    "name": "Webhook",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
      "line": 30,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/structures/Webhook.ts",
      "imported": "default"
    }
  },
  {
    "kind": "import",
    "name": "User",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
      "line": 31,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/structures/User.ts",
      "imported": "default"
    }
  },
  {
    "kind": "import",
    "name": "ThreadMember",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
      "line": 32,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/structures/ThreadMember.ts",
      "imported": "default"
    }
  },
  {
    "kind": "class",
    "name": "InputTextBuilder",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/components/InputTextComponentBuilder.ts",
      "line": 3,
      "col": 0
    },
    "declarationKind": "export",
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "accessibility": null,
          "name": "constructor",
          "params": [],
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/components/InputTextComponentBuilder.ts",
            "line": 4,
            "col": 4
          }
        }
      ],
      "properties": [
        {
          "tsType": {
            "repr": "MessageComponentTypes.InputText",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "MessageComponentTypes.InputText"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "type",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/components/InputTextComponentBuilder.ts",
            "line": 9,
            "col": 4
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setStyle",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "style",
                "optional": false,
                "tsType": {
                  "repr": "TextStyles",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "TextStyles"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "this",
              "kind": "this",
              "this": true
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/components/InputTextComponentBuilder.ts",
            "line": 11,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setLabel",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "label",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "this",
              "kind": "this",
              "this": true
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/components/InputTextComponentBuilder.ts",
            "line": 16,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setPlaceholder",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "placeholder",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "this",
              "kind": "this",
              "this": true
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/components/InputTextComponentBuilder.ts",
            "line": 21,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setLength",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "max",
                "optional": true,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                }
              },
              {
                "kind": "identifier",
                "name": "min",
                "optional": true,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                }
              }
            ],
            "returnType": {
              "repr": "this",
              "kind": "this",
              "this": true
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/components/InputTextComponentBuilder.ts",
            "line": 26,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setCustomId",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "id",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "this",
              "kind": "this",
              "this": true
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/components/InputTextComponentBuilder.ts",
            "line": 32,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setValue",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "value",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "this",
              "kind": "this",
              "this": true
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/components/InputTextComponentBuilder.ts",
            "line": 37,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setRequired",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "assign",
                "left": {
                  "kind": "identifier",
                  "name": "required",
                  "optional": false,
                  "tsType": null
                },
                "right": "[UNSUPPORTED]",
                "tsType": null
              }
            ],
            "returnType": {
              "repr": "this",
              "kind": "this",
              "this": true
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/components/InputTextComponentBuilder.ts",
            "line": 42,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "toJSON",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "DiscordInputTextComponent",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "DiscordInputTextComponent"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/components/InputTextComponentBuilder.ts",
            "line": 46,
            "col": 4
          }
        }
      ],
      "extends": null,
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "import",
    "name": "DiscordInputTextComponent",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/components/InputTextComponentBuilder.ts",
      "line": 1,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
      "imported": "DiscordInputTextComponent"
    }
  },
  {
    "kind": "import",
    "name": "MessageComponentTypes",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/components/InputTextComponentBuilder.ts",
      "line": 1,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
      "imported": "MessageComponentTypes"
    }
  },
  {
    "kind": "import",
    "name": "TextStyles",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/components/InputTextComponentBuilder.ts",
      "line": 1,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
      "imported": "TextStyles"
    }
  },
  {
    "kind": "class",
    "name": "SelectMenuOptionBuilder",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/components/SelectMenuOptionBuilder.ts",
      "line": 4,
      "col": 0
    },
    "declarationKind": "export",
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "accessibility": null,
          "name": "constructor",
          "params": [],
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/components/SelectMenuOptionBuilder.ts",
            "line": 5,
            "col": 4
          }
        }
      ],
      "properties": [],
      "indexSignatures": [],
      "methods": [
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setLabel",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "label",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "SelectMenuOptionBuilder",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "SelectMenuOptionBuilder"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/components/SelectMenuOptionBuilder.ts",
            "line": 10,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setValue",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "value",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "SelectMenuOptionBuilder",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "SelectMenuOptionBuilder"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/components/SelectMenuOptionBuilder.ts",
            "line": 15,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setDescription",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "description",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "SelectMenuOptionBuilder",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "SelectMenuOptionBuilder"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/components/SelectMenuOptionBuilder.ts",
            "line": 20,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setDefault",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "assign",
                "left": {
                  "kind": "identifier",
                  "name": "Default",
                  "optional": false,
                  "tsType": null
                },
                "right": "[UNSUPPORTED]",
                "tsType": null
              }
            ],
            "returnType": {
              "repr": "SelectMenuOptionBuilder",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "SelectMenuOptionBuilder"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/components/SelectMenuOptionBuilder.ts",
            "line": 25,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setEmoji",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "emoji",
                "optional": false,
                "tsType": {
                  "repr": "ComponentEmoji",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "ComponentEmoji"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "SelectMenuOptionBuilder",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "SelectMenuOptionBuilder"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/components/SelectMenuOptionBuilder.ts",
            "line": 30,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "toJSON",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "DiscordSelectOption",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "DiscordSelectOption"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/components/SelectMenuOptionBuilder.ts",
            "line": 35,
            "col": 4
          }
        }
      ],
      "extends": null,
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "import",
    "name": "DiscordSelectOption",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/components/SelectMenuOptionBuilder.ts",
      "line": 1,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
      "imported": "DiscordSelectOption"
    }
  },
  {
    "kind": "import",
    "name": "ComponentEmoji",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/components/SelectMenuOptionBuilder.ts",
      "line": 2,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/Util.ts",
      "imported": "ComponentEmoji"
    }
  },
  {
    "kind": "class",
    "name": "AutoCompleteInteraction",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/AutoCompleteInteraction.ts",
      "line": 10,
      "col": 0
    },
    "declarationKind": "export",
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "session",
              "optional": false,
              "tsType": {
                "repr": "Session",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Session"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "data",
              "optional": false,
              "tsType": {
                "repr": "DiscordInteraction",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "DiscordInteraction"
                }
              }
            }
          ],
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/AutoCompleteInteraction.ts",
            "line": 11,
            "col": 4
          }
        }
      ],
      "properties": [
        {
          "tsType": {
            "repr": "InteractionTypes.ApplicationCommandAutocomplete",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "InteractionTypes.ApplicationCommandAutocomplete"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "type",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/AutoCompleteInteraction.ts",
            "line": 20,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "Snowflake",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Snowflake"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "commandId",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/AutoCompleteInteraction.ts",
            "line": 21,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "commandName",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/AutoCompleteInteraction.ts",
            "line": 22,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "ApplicationCommandTypes",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "ApplicationCommandTypes"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "commandType",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/AutoCompleteInteraction.ts",
            "line": 23,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "Snowflake",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Snowflake"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "commandGuildId",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/AutoCompleteInteraction.ts",
            "line": 24,
            "col": 4
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "respondWithChoices",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "choices",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "array",
                  "array": {
                    "repr": "ApplicationCommandOptionChoice",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "ApplicationCommandOptionChoice"
                    }
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "void",
                    "kind": "keyword",
                    "keyword": "void"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/AutoCompleteInteraction.ts",
            "line": 26,
            "col": 4
          }
        }
      ],
      "extends": "BaseInteraction",
      "implements": [
        {
          "repr": "Model",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "Model"
          }
        }
      ],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "class",
    "name": "default",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/AutoCompleteInteraction.ts",
      "line": 10,
      "col": 0
    },
    "declarationKind": "export",
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "session",
              "optional": false,
              "tsType": {
                "repr": "Session",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Session"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "data",
              "optional": false,
              "tsType": {
                "repr": "DiscordInteraction",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "DiscordInteraction"
                }
              }
            }
          ],
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/AutoCompleteInteraction.ts",
            "line": 11,
            "col": 4
          }
        }
      ],
      "properties": [
        {
          "tsType": {
            "repr": "InteractionTypes.ApplicationCommandAutocomplete",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "InteractionTypes.ApplicationCommandAutocomplete"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "type",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/AutoCompleteInteraction.ts",
            "line": 20,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "Snowflake",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Snowflake"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "commandId",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/AutoCompleteInteraction.ts",
            "line": 21,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "commandName",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/AutoCompleteInteraction.ts",
            "line": 22,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "ApplicationCommandTypes",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "ApplicationCommandTypes"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "commandType",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/AutoCompleteInteraction.ts",
            "line": 23,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "Snowflake",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Snowflake"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "commandGuildId",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/AutoCompleteInteraction.ts",
            "line": 24,
            "col": 4
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "respondWithChoices",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "choices",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "array",
                  "array": {
                    "repr": "ApplicationCommandOptionChoice",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "ApplicationCommandOptionChoice"
                    }
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "void",
                    "kind": "keyword",
                    "keyword": "void"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/AutoCompleteInteraction.ts",
            "line": 26,
            "col": 4
          }
        }
      ],
      "extends": "BaseInteraction",
      "implements": [
        {
          "repr": "Model",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "Model"
          }
        }
      ],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "import",
    "name": "Model",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/AutoCompleteInteraction.ts",
      "line": 1,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/structures/Base.ts",
      "imported": "Model"
    }
  },
  {
    "kind": "import",
    "name": "Snowflake",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/AutoCompleteInteraction.ts",
      "line": 2,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/Snowflake.ts",
      "imported": "Snowflake"
    }
  },
  {
    "kind": "import",
    "name": "Session",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/AutoCompleteInteraction.ts",
      "line": 3,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/Session.ts",
      "imported": "Session"
    }
  },
  {
    "kind": "import",
    "name": "ApplicationCommandTypes",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/AutoCompleteInteraction.ts",
      "line": 4,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
      "imported": "ApplicationCommandTypes"
    }
  },
  {
    "kind": "import",
    "name": "DiscordInteraction",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/AutoCompleteInteraction.ts",
      "line": 4,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
      "imported": "DiscordInteraction"
    }
  },
  {
    "kind": "import",
    "name": "InteractionTypes",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/AutoCompleteInteraction.ts",
      "line": 4,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
      "imported": "InteractionTypes"
    }
  },
  {
    "kind": "import",
    "name": "ApplicationCommandOptionChoice",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/AutoCompleteInteraction.ts",
      "line": 5,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/BaseInteraction.ts",
      "imported": "ApplicationCommandOptionChoice"
    }
  },
  {
    "kind": "import",
    "name": "InteractionResponseTypes",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/AutoCompleteInteraction.ts",
      "line": 6,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
      "imported": "InteractionResponseTypes"
    }
  },
  {
    "kind": "import",
    "name": "BaseInteraction",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/AutoCompleteInteraction.ts",
      "line": 7,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/BaseInteraction.ts",
      "imported": "default"
    }
  },
  {
    "kind": "import",
    "name": "Routes",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/AutoCompleteInteraction.ts",
      "line": 8,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/Routes.ts",
      "imported": null
    }
  },
  {
    "kind": "class",
    "name": "CommandInteraction",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/CommandInteraction.ts",
      "line": 18,
      "col": 0
    },
    "declarationKind": "export",
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "session",
              "optional": false,
              "tsType": {
                "repr": "Session",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Session"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "data",
              "optional": false,
              "tsType": {
                "repr": "DiscordInteraction",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "DiscordInteraction"
                }
              }
            }
          ],
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/CommandInteraction.ts",
            "line": 19,
            "col": 4
          }
        }
      ],
      "properties": [
        {
          "tsType": {
            "repr": "InteractionTypes.ApplicationCommand",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "InteractionTypes.ApplicationCommand"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "type",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/CommandInteraction.ts",
            "line": 67,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "Snowflake",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Snowflake"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "commandId",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/CommandInteraction.ts",
            "line": 68,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "commandName",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/CommandInteraction.ts",
            "line": 69,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "ApplicationCommandTypes",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "ApplicationCommandTypes"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "commandType",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/CommandInteraction.ts",
            "line": 70,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "Snowflake",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Snowflake"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "commandGuildId",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/CommandInteraction.ts",
            "line": 71,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "",
            "kind": "typeLiteral",
            "typeLiteral": {
              "methods": [],
              "properties": [
                {
                  "name": "users",
                  "params": [],
                  "computed": false,
                  "optional": false,
                  "tsType": {
                    "repr": "Map",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": [
                        {
                          "repr": "Snowflake",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "Snowflake"
                          }
                        },
                        {
                          "repr": "User",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "User"
                          }
                        }
                      ],
                      "typeName": "Map"
                    }
                  },
                  "typeParams": []
                },
                {
                  "name": "members",
                  "params": [],
                  "computed": false,
                  "optional": false,
                  "tsType": {
                    "repr": "Map",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": [
                        {
                          "repr": "Snowflake",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "Snowflake"
                          }
                        },
                        {
                          "repr": "Member",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "Member"
                          }
                        }
                      ],
                      "typeName": "Map"
                    }
                  },
                  "typeParams": []
                },
                {
                  "name": "roles",
                  "params": [],
                  "computed": false,
                  "optional": false,
                  "tsType": {
                    "repr": "Map",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": [
                        {
                          "repr": "Snowflake",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "Snowflake"
                          }
                        },
                        {
                          "repr": "Role",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "Role"
                          }
                        }
                      ],
                      "typeName": "Map"
                    }
                  },
                  "typeParams": []
                },
                {
                  "name": "attachments",
                  "params": [],
                  "computed": false,
                  "optional": false,
                  "tsType": {
                    "repr": "Map",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": [
                        {
                          "repr": "Snowflake",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "Snowflake"
                          }
                        },
                        {
                          "repr": "Attachment",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "Attachment"
                          }
                        }
                      ],
                      "typeName": "Map"
                    }
                  },
                  "typeParams": []
                },
                {
                  "name": "messages",
                  "params": [],
                  "computed": false,
                  "optional": false,
                  "tsType": {
                    "repr": "Map",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": [
                        {
                          "repr": "Snowflake",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "Snowflake"
                          }
                        },
                        {
                          "repr": "Message",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "Message"
                          }
                        }
                      ],
                      "typeName": "Map"
                    }
                  },
                  "typeParams": []
                }
              ],
              "callSignatures": [],
              "indexSignatures": []
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "resolved",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/CommandInteraction.ts",
            "line": 72,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "CommandInteractionOptionResolver",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "CommandInteractionOptionResolver"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "options",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/CommandInteraction.ts",
            "line": 79,
            "col": 4
          }
        }
      ],
      "indexSignatures": [],
      "methods": [],
      "extends": "BaseInteraction",
      "implements": [
        {
          "repr": "Model",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "Model"
          }
        }
      ],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "class",
    "name": "default",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/CommandInteraction.ts",
      "line": 18,
      "col": 0
    },
    "declarationKind": "export",
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "session",
              "optional": false,
              "tsType": {
                "repr": "Session",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Session"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "data",
              "optional": false,
              "tsType": {
                "repr": "DiscordInteraction",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "DiscordInteraction"
                }
              }
            }
          ],
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/CommandInteraction.ts",
            "line": 19,
            "col": 4
          }
        }
      ],
      "properties": [
        {
          "tsType": {
            "repr": "InteractionTypes.ApplicationCommand",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "InteractionTypes.ApplicationCommand"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "type",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/CommandInteraction.ts",
            "line": 67,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "Snowflake",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Snowflake"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "commandId",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/CommandInteraction.ts",
            "line": 68,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "commandName",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/CommandInteraction.ts",
            "line": 69,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "ApplicationCommandTypes",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "ApplicationCommandTypes"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "commandType",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/CommandInteraction.ts",
            "line": 70,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "Snowflake",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Snowflake"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "commandGuildId",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/CommandInteraction.ts",
            "line": 71,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "",
            "kind": "typeLiteral",
            "typeLiteral": {
              "methods": [],
              "properties": [
                {
                  "name": "users",
                  "params": [],
                  "computed": false,
                  "optional": false,
                  "tsType": {
                    "repr": "Map",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": [
                        {
                          "repr": "Snowflake",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "Snowflake"
                          }
                        },
                        {
                          "repr": "User",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "User"
                          }
                        }
                      ],
                      "typeName": "Map"
                    }
                  },
                  "typeParams": []
                },
                {
                  "name": "members",
                  "params": [],
                  "computed": false,
                  "optional": false,
                  "tsType": {
                    "repr": "Map",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": [
                        {
                          "repr": "Snowflake",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "Snowflake"
                          }
                        },
                        {
                          "repr": "Member",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "Member"
                          }
                        }
                      ],
                      "typeName": "Map"
                    }
                  },
                  "typeParams": []
                },
                {
                  "name": "roles",
                  "params": [],
                  "computed": false,
                  "optional": false,
                  "tsType": {
                    "repr": "Map",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": [
                        {
                          "repr": "Snowflake",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "Snowflake"
                          }
                        },
                        {
                          "repr": "Role",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "Role"
                          }
                        }
                      ],
                      "typeName": "Map"
                    }
                  },
                  "typeParams": []
                },
                {
                  "name": "attachments",
                  "params": [],
                  "computed": false,
                  "optional": false,
                  "tsType": {
                    "repr": "Map",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": [
                        {
                          "repr": "Snowflake",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "Snowflake"
                          }
                        },
                        {
                          "repr": "Attachment",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "Attachment"
                          }
                        }
                      ],
                      "typeName": "Map"
                    }
                  },
                  "typeParams": []
                },
                {
                  "name": "messages",
                  "params": [],
                  "computed": false,
                  "optional": false,
                  "tsType": {
                    "repr": "Map",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": [
                        {
                          "repr": "Snowflake",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "Snowflake"
                          }
                        },
                        {
                          "repr": "Message",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "Message"
                          }
                        }
                      ],
                      "typeName": "Map"
                    }
                  },
                  "typeParams": []
                }
              ],
              "callSignatures": [],
              "indexSignatures": []
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "resolved",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/CommandInteraction.ts",
            "line": 72,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "CommandInteractionOptionResolver",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "CommandInteractionOptionResolver"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "options",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/CommandInteraction.ts",
            "line": 79,
            "col": 4
          }
        }
      ],
      "indexSignatures": [],
      "methods": [],
      "extends": "BaseInteraction",
      "implements": [
        {
          "repr": "Model",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "Model"
          }
        }
      ],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "import",
    "name": "Model",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/CommandInteraction.ts",
      "line": 1,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/structures/Base.ts",
      "imported": "Model"
    }
  },
  {
    "kind": "import",
    "name": "Snowflake",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/CommandInteraction.ts",
      "line": 2,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/Snowflake.ts",
      "imported": "Snowflake"
    }
  },
  {
    "kind": "import",
    "name": "Session",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/CommandInteraction.ts",
      "line": 3,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/Session.ts",
      "imported": "Session"
    }
  },
  {
    "kind": "import",
    "name": "ApplicationCommandTypes",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/CommandInteraction.ts",
      "line": 4,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
      "imported": "ApplicationCommandTypes"
    }
  },
  {
    "kind": "import",
    "name": "DiscordInteraction",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/CommandInteraction.ts",
      "line": 4,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
      "imported": "DiscordInteraction"
    }
  },
  {
    "kind": "import",
    "name": "DiscordMemberWithUser",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/CommandInteraction.ts",
      "line": 4,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
      "imported": "DiscordMemberWithUser"
    }
  },
  {
    "kind": "import",
    "name": "InteractionTypes",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/CommandInteraction.ts",
      "line": 4,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
      "imported": "InteractionTypes"
    }
  },
  {
    "kind": "import",
    "name": "BaseInteraction",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/CommandInteraction.ts",
      "line": 10,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/BaseInteraction.ts",
      "imported": "default"
    }
  },
  {
    "kind": "import",
    "name": "CommandInteractionOptionResolver",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/CommandInteraction.ts",
      "line": 11,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/CommandInteractionOptionResolver.ts",
      "imported": "default"
    }
  },
  {
    "kind": "import",
    "name": "Attachment",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/CommandInteraction.ts",
      "line": 12,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/structures/Attachment.ts",
      "imported": "default"
    }
  },
  {
    "kind": "import",
    "name": "User",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/CommandInteraction.ts",
      "line": 13,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/structures/User.ts",
      "imported": "default"
    }
  },
  {
    "kind": "import",
    "name": "Member",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/CommandInteraction.ts",
      "line": 14,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/structures/Member.ts",
      "imported": "default"
    }
  },
  {
    "kind": "import",
    "name": "Message",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/CommandInteraction.ts",
      "line": 15,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/structures/Message.ts",
      "imported": "default"
    }
  },
  {
    "kind": "import",
    "name": "Role",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/CommandInteraction.ts",
      "line": 16,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/structures/Role.ts",
      "imported": "default"
    }
  },
  {
    "kind": "class",
    "name": "BaseGuild",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
      "line": 38,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "Class for {@link Guild} and {@link AnonymousGuild}"
    },
    "classDef": {
      "isAbstract": true,
      "constructors": [
        {
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "session",
              "optional": false,
              "tsType": {
                "repr": "Session",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Session"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "data",
              "optional": false,
              "tsType": {
                "repr": "DiscordGuild",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "DiscordGuild"
                }
              }
            }
          ],
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 39,
            "col": 4
          }
        }
      ],
      "properties": [
        {
          "tsType": {
            "repr": "Session",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Session"
            }
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "session",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 49,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "Snowflake",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Snowflake"
            }
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 50,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "name",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 52,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "bigint",
            "kind": "keyword",
            "keyword": "bigint"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "iconHash",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 53,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "GuildFeatures",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "GuildFeatures"
              }
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "features",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 54,
            "col": 4
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "createdTimestamp",
          "kind": "getter",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "number",
              "kind": "keyword",
              "keyword": "number"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 56,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "createdAt",
          "kind": "getter",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "Date",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "Date"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 60,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "partnered",
          "kind": "getter",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "boolean",
              "kind": "keyword",
              "keyword": "boolean"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 64,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "verified",
          "kind": "getter",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "boolean",
              "kind": "keyword",
              "keyword": "boolean"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 68,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "iconURL",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "assign",
                "left": {
                  "kind": "identifier",
                  "name": "options",
                  "optional": false,
                  "tsType": {
                    "repr": "",
                    "kind": "typeLiteral",
                    "typeLiteral": {
                      "methods": [],
                      "properties": [
                        {
                          "name": "size",
                          "params": [],
                          "computed": false,
                          "optional": true,
                          "tsType": {
                            "repr": "ImageSize",
                            "kind": "typeRef",
                            "typeRef": {
                              "typeParams": null,
                              "typeName": "ImageSize"
                            }
                          },
                          "typeParams": []
                        },
                        {
                          "name": "format",
                          "params": [],
                          "computed": false,
                          "optional": true,
                          "tsType": {
                            "repr": "ImageFormat",
                            "kind": "typeRef",
                            "typeRef": {
                              "typeParams": null,
                              "typeName": "ImageFormat"
                            }
                          },
                          "typeParams": []
                        }
                      ],
                      "callSignatures": [],
                      "indexSignatures": []
                    }
                  }
                },
                "right": "[UNSUPPORTED]",
                "tsType": null
              }
            ],
            "returnType": {
              "repr": "",
              "kind": "union",
              "union": [
                {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                {
                  "repr": "void",
                  "kind": "keyword",
                  "keyword": "void"
                }
              ]
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 72,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "toString",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 82,
            "col": 4
          }
        }
      ],
      "extends": null,
      "implements": [
        {
          "repr": "Model",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "Model"
          }
        }
      ],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "class",
    "name": "AnonymousGuild",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
      "line": 88,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "AnonymousGuild"
    },
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "session",
              "optional": false,
              "tsType": {
                "repr": "Session",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Session"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "data",
              "optional": false,
              "tsType": {
                "repr": "Partial",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": [
                    {
                      "repr": "DiscordGuild",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "DiscordGuild"
                      }
                    }
                  ],
                  "typeName": "Partial"
                }
              }
            }
          ],
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 89,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "session",
              "optional": false,
              "tsType": {
                "repr": "Session",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Session"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "data",
              "optional": false,
              "tsType": {
                "repr": "DiscordGuild",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "DiscordGuild"
                }
              }
            }
          ],
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 90,
            "col": 4
          }
        }
      ],
      "properties": [
        {
          "tsType": {
            "repr": "bigint",
            "kind": "keyword",
            "keyword": "bigint"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "splashHash",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 103,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "bigint",
            "kind": "keyword",
            "keyword": "bigint"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "bannerHash",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 104,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "VerificationLevels",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "VerificationLevels"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "verificationLevel",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 106,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "vanityUrlCode",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 107,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "GuildNsfwLevel",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "GuildNsfwLevel"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "nsfwLevel",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 108,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "description",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 109,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "premiumSubscriptionCount",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 110,
            "col": 4
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "splashURL",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "assign",
                "left": {
                  "kind": "identifier",
                  "name": "options",
                  "optional": false,
                  "tsType": {
                    "repr": "",
                    "kind": "typeLiteral",
                    "typeLiteral": {
                      "methods": [],
                      "properties": [
                        {
                          "name": "size",
                          "params": [],
                          "computed": false,
                          "optional": true,
                          "tsType": {
                            "repr": "ImageSize",
                            "kind": "typeRef",
                            "typeRef": {
                              "typeParams": null,
                              "typeName": "ImageSize"
                            }
                          },
                          "typeParams": []
                        },
                        {
                          "name": "format",
                          "params": [],
                          "computed": false,
                          "optional": true,
                          "tsType": {
                            "repr": "ImageFormat",
                            "kind": "typeRef",
                            "typeRef": {
                              "typeParams": null,
                              "typeName": "ImageFormat"
                            }
                          },
                          "typeParams": []
                        }
                      ],
                      "callSignatures": [],
                      "indexSignatures": []
                    }
                  }
                },
                "right": "[UNSUPPORTED]",
                "tsType": null
              }
            ],
            "returnType": {
              "repr": "",
              "kind": "union",
              "union": [
                {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                {
                  "repr": "void",
                  "kind": "keyword",
                  "keyword": "void"
                }
              ]
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 112,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "bannerURL",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "assign",
                "left": {
                  "kind": "identifier",
                  "name": "options",
                  "optional": false,
                  "tsType": {
                    "repr": "",
                    "kind": "typeLiteral",
                    "typeLiteral": {
                      "methods": [],
                      "properties": [
                        {
                          "name": "size",
                          "params": [],
                          "computed": false,
                          "optional": true,
                          "tsType": {
                            "repr": "ImageSize",
                            "kind": "typeRef",
                            "typeRef": {
                              "typeParams": null,
                              "typeName": "ImageSize"
                            }
                          },
                          "typeParams": []
                        },
                        {
                          "name": "format",
                          "params": [],
                          "computed": false,
                          "optional": true,
                          "tsType": {
                            "repr": "ImageFormat",
                            "kind": "typeRef",
                            "typeRef": {
                              "typeParams": null,
                              "typeName": "ImageFormat"
                            }
                          },
                          "typeParams": []
                        }
                      ],
                      "callSignatures": [],
                      "indexSignatures": []
                    }
                  }
                },
                "right": "[UNSUPPORTED]",
                "tsType": null
              }
            ],
            "returnType": {
              "repr": "",
              "kind": "union",
              "union": [
                {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                {
                  "repr": "void",
                  "kind": "keyword",
                  "keyword": "void"
                }
              ]
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 122,
            "col": 4
          }
        }
      ],
      "extends": "BaseGuild",
      "implements": [
        {
          "repr": "Model",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "Model"
          }
        }
      ],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "class",
    "name": "InviteGuild",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
      "line": 134,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "InviteGuild"
    },
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "session",
              "optional": false,
              "tsType": {
                "repr": "Session",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Session"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "data",
              "optional": false,
              "tsType": {
                "repr": "Partial",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": [
                    {
                      "repr": "DiscordGuild",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "DiscordGuild"
                      }
                    }
                  ],
                  "typeName": "Partial"
                }
              }
            }
          ],
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 135,
            "col": 4
          }
        }
      ],
      "properties": [
        {
          "tsType": {
            "repr": "WelcomeScreen",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "WelcomeScreen"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "welcomeScreen",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 143,
            "col": 4
          }
        }
      ],
      "indexSignatures": [],
      "methods": [],
      "extends": "AnonymousGuild",
      "implements": [
        {
          "repr": "Model",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "Model"
          }
        }
      ],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "CreateRole",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
      "line": 147,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "Guild"
    },
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "name",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 148,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "color",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 149,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "iconHash",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 150,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              },
              {
                "repr": "bigint",
                "kind": "keyword",
                "keyword": "bigint"
              }
            ]
          },
          "typeParams": []
        },
        {
          "name": "unicodeEmoji",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 151,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "hoist",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 152,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        },
        {
          "name": "mentionable",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 153,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "ModifyGuildRole",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
      "line": 156,
      "col": 0
    },
    "declarationKind": "export",
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "name",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 157,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "color",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 158,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "hoist",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 159,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        },
        {
          "name": "mentionable",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 160,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        },
        {
          "name": "unicodeEmoji",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 161,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "CreateGuildEmoji",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
      "line": 164,
      "col": 0
    },
    "declarationKind": "export",
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "name",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 165,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "image",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 166,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "roles",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 167,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "Snowflake",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "Snowflake"
              }
            }
          },
          "typeParams": []
        },
        {
          "name": "reason",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 168,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "ModifyGuildEmoji",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
      "line": 171,
      "col": 0
    },
    "declarationKind": "export",
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "name",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 172,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "roles",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 173,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "Snowflake",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "Snowflake"
              }
            }
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "CreateGuildBan",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
      "line": 179,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "tags": [
        {
          "kind": "unsupported",
          "value": "@link https://discord.com/developers/docs/resources/guild#create-guild-ban"
        }
      ]
    },
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "deleteMessageDays",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 180,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "0",
                "kind": "literal",
                "literal": {
                  "kind": "number",
                  "number": 0.0
                }
              },
              {
                "repr": "1",
                "kind": "literal",
                "literal": {
                  "kind": "number",
                  "number": 1.0
                }
              },
              {
                "repr": "2",
                "kind": "literal",
                "literal": {
                  "kind": "number",
                  "number": 2.0
                }
              },
              {
                "repr": "3",
                "kind": "literal",
                "literal": {
                  "kind": "number",
                  "number": 3.0
                }
              },
              {
                "repr": "4",
                "kind": "literal",
                "literal": {
                  "kind": "number",
                  "number": 4.0
                }
              },
              {
                "repr": "5",
                "kind": "literal",
                "literal": {
                  "kind": "number",
                  "number": 5.0
                }
              },
              {
                "repr": "6",
                "kind": "literal",
                "literal": {
                  "kind": "number",
                  "number": 6.0
                }
              },
              {
                "repr": "7",
                "kind": "literal",
                "literal": {
                  "kind": "number",
                  "number": 7.0
                }
              }
            ]
          },
          "typeParams": []
        },
        {
          "name": "reason",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 181,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "ModifyGuildMember",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
      "line": 187,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "tags": [
        {
          "kind": "unsupported",
          "value": "@link https://discord.com/developers/docs/resources/guild#modify-guild-member"
        }
      ]
    },
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "nick",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 188,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "roles",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 189,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "Snowflake",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "Snowflake"
              }
            }
          },
          "typeParams": []
        },
        {
          "name": "mute",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 190,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        },
        {
          "name": "deaf",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 191,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        },
        {
          "name": "channelId",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 192,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "Snowflake",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Snowflake"
            }
          },
          "typeParams": []
        },
        {
          "name": "communicationDisabledUntil",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 193,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "BeginGuildPrune",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
      "line": 199,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "tags": [
        {
          "kind": "unsupported",
          "value": "@link https://discord.com/developers/docs/resources/guild#begin-guild-prune"
        }
      ]
    },
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "days",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 200,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "computePruneCount",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 201,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        },
        {
          "name": "includeRoles",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 202,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "Snowflake",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "Snowflake"
              }
            }
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "ModifyRolePositions",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
      "line": 205,
      "col": 0
    },
    "declarationKind": "export",
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 206,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "Snowflake",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Snowflake"
            }
          },
          "typeParams": []
        },
        {
          "name": "position",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 207,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "number",
                "kind": "keyword",
                "keyword": "number"
              },
              {
                "repr": "null",
                "kind": "keyword",
                "keyword": "null"
              }
            ]
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "GuildCreateOptionsRole",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
      "line": 210,
      "col": 0
    },
    "declarationKind": "export",
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 211,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "Snowflake",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Snowflake"
            }
          },
          "typeParams": []
        },
        {
          "name": "name",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 212,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "color",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 213,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "hoist",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 214,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        },
        {
          "name": "position",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 215,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "permissions",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 216,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "bigint",
            "kind": "keyword",
            "keyword": "bigint"
          },
          "typeParams": []
        },
        {
          "name": "mentionable",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 217,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        },
        {
          "name": "iconURL",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 218,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "unicodeEmoji",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 219,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              },
              {
                "repr": "null",
                "kind": "keyword",
                "keyword": "null"
              }
            ]
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "GuildCreateOptionsRole",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
      "line": 222,
      "col": 0
    },
    "declarationKind": "export",
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 223,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "Snowflake",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Snowflake"
            }
          },
          "typeParams": []
        },
        {
          "name": "name",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 224,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "color",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 225,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "hoist",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 226,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        },
        {
          "name": "position",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 227,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "permissions",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 228,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "bigint",
            "kind": "keyword",
            "keyword": "bigint"
          },
          "typeParams": []
        },
        {
          "name": "mentionable",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 229,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        },
        {
          "name": "iconHash",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 230,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "bigint",
            "kind": "keyword",
            "keyword": "bigint"
          },
          "typeParams": []
        },
        {
          "name": "unicodeEmoji",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 231,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              },
              {
                "repr": "null",
                "kind": "keyword",
                "keyword": "null"
              }
            ]
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "GuildCreateOptionsChannel",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
      "line": 234,
      "col": 0
    },
    "declarationKind": "export",
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 235,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "Snowflake",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Snowflake"
            }
          },
          "typeParams": []
        },
        {
          "name": "parentId",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 236,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "Snowflake",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Snowflake"
            }
          },
          "typeParams": []
        },
        {
          "name": "type",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 237,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "ChannelTypes.GuildText",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "ChannelTypes.GuildText"
                }
              },
              {
                "repr": "ChannelTypes.GuildVoice",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "ChannelTypes.GuildVoice"
                }
              },
              {
                "repr": "ChannelTypes.GuildCategory",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "ChannelTypes.GuildCategory"
                }
              }
            ]
          },
          "typeParams": []
        },
        {
          "name": "name",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 238,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "topic",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 239,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              },
              {
                "repr": "null",
                "kind": "keyword",
                "keyword": "null"
              }
            ]
          },
          "typeParams": []
        },
        {
          "name": "nsfw",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 240,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        },
        {
          "name": "bitrate",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 241,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "userLimit",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 242,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "rtcRegion",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 243,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              },
              {
                "repr": "null",
                "kind": "keyword",
                "keyword": "null"
              }
            ]
          },
          "typeParams": []
        },
        {
          "name": "videoQualityMode",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 244,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "VideoQualityModes",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "VideoQualityModes"
            }
          },
          "typeParams": []
        },
        {
          "name": "permissionOverwrites",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 245,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "MakeRequired",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "Partial",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": [
                        {
                          "repr": "DiscordOverwrite",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "DiscordOverwrite"
                          }
                        }
                      ],
                      "typeName": "Partial"
                    }
                  },
                  {
                    "repr": "id",
                    "kind": "literal",
                    "literal": {
                      "kind": "string",
                      "string": "id"
                    }
                  }
                ],
                "typeName": "MakeRequired"
              }
            }
          },
          "typeParams": []
        },
        {
          "name": "rateLimitPerUser",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 246,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "GuildCreateOptions",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
      "line": 252,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "tags": [
        {
          "kind": "unsupported",
          "value": "@link https://discord.com/developers/docs/resources/guild#create-guild"
        }
      ]
    },
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "name",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 253,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "afkChannelId",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 254,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "Snowflake",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Snowflake"
            }
          },
          "typeParams": []
        },
        {
          "name": "afkTimeout",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 255,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "channels",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 256,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "GuildCreateOptionsChannel",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "GuildCreateOptionsChannel"
              }
            }
          },
          "typeParams": []
        },
        {
          "name": "defaultMessageNotifications",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 257,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "DefaultMessageNotificationLevels",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "DefaultMessageNotificationLevels"
            }
          },
          "typeParams": []
        },
        {
          "name": "explicitContentFilter",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 258,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "ExplicitContentFilterLevels",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "ExplicitContentFilterLevels"
            }
          },
          "typeParams": []
        },
        {
          "name": "iconURL",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 259,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "roles",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 260,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "GuildCreateOptionsRole",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "GuildCreateOptionsRole"
              }
            }
          },
          "typeParams": []
        },
        {
          "name": "systemChannelFlags",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 261,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "SystemChannelFlags",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "SystemChannelFlags"
            }
          },
          "typeParams": []
        },
        {
          "name": "systemChannelId",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 262,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "Snowflake",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Snowflake"
            }
          },
          "typeParams": []
        },
        {
          "name": "verificationLevel",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 263,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "VerificationLevels",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "VerificationLevels"
            }
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "GuildCreateOptions",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
      "line": 266,
      "col": 0
    },
    "declarationKind": "export",
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "name",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 267,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "afkChannelId",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 268,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "Snowflake",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Snowflake"
            }
          },
          "typeParams": []
        },
        {
          "name": "afkTimeout",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 269,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "channels",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 270,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "GuildCreateOptionsChannel",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "GuildCreateOptionsChannel"
              }
            }
          },
          "typeParams": []
        },
        {
          "name": "defaultMessageNotifications",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 271,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "DefaultMessageNotificationLevels",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "DefaultMessageNotificationLevels"
            }
          },
          "typeParams": []
        },
        {
          "name": "explicitContentFilter",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 272,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "ExplicitContentFilterLevels",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "ExplicitContentFilterLevels"
            }
          },
          "typeParams": []
        },
        {
          "name": "iconHash",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 273,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "bigint",
            "kind": "keyword",
            "keyword": "bigint"
          },
          "typeParams": []
        },
        {
          "name": "roles",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 274,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "GuildCreateOptionsRole",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "GuildCreateOptionsRole"
              }
            }
          },
          "typeParams": []
        },
        {
          "name": "systemChannelFlags",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 275,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "SystemChannelFlags",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "SystemChannelFlags"
            }
          },
          "typeParams": []
        },
        {
          "name": "systemChannelId",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 276,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "Snowflake",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Snowflake"
            }
          },
          "typeParams": []
        },
        {
          "name": "verificationLevel",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 277,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "VerificationLevels",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "VerificationLevels"
            }
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "GuildEditOptions",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
      "line": 283,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "tags": [
        {
          "kind": "unsupported",
          "value": "@link https://discord.com/developers/docs/resources/guild#modify-guild-json-params"
        }
      ]
    },
    "interfaceDef": {
      "extends": [
        {
          "repr": "Omit",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": [
              {
                "repr": "GuildCreateOptions",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "GuildCreateOptions"
                }
              },
              {
                "repr": "",
                "kind": "union",
                "union": [
                  {
                    "repr": "roles",
                    "kind": "literal",
                    "literal": {
                      "kind": "string",
                      "string": "roles"
                    }
                  },
                  {
                    "repr": "channels",
                    "kind": "literal",
                    "literal": {
                      "kind": "string",
                      "string": "channels"
                    }
                  }
                ]
              }
            ],
            "typeName": "Omit"
          }
        }
      ],
      "methods": [],
      "properties": [
        {
          "name": "ownerId",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 284,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "Snowflake",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Snowflake"
            }
          },
          "typeParams": []
        },
        {
          "name": "splashURL",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 285,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "bannerURL",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 286,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "discoverySplashURL",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 287,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "features",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 288,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "GuildFeatures",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "GuildFeatures"
              }
            }
          },
          "typeParams": []
        },
        {
          "name": "rulesChannelId",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 289,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "Snowflake",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Snowflake"
            }
          },
          "typeParams": []
        },
        {
          "name": "description",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 290,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "premiumProgressBarEnabled",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 291,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "GuildEditOptions",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
      "line": 294,
      "col": 0
    },
    "declarationKind": "export",
    "interfaceDef": {
      "extends": [
        {
          "repr": "Omit",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": [
              {
                "repr": "GuildCreateOptions",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "GuildCreateOptions"
                }
              },
              {
                "repr": "",
                "kind": "union",
                "union": [
                  {
                    "repr": "roles",
                    "kind": "literal",
                    "literal": {
                      "kind": "string",
                      "string": "roles"
                    }
                  },
                  {
                    "repr": "channels",
                    "kind": "literal",
                    "literal": {
                      "kind": "string",
                      "string": "channels"
                    }
                  }
                ]
              }
            ],
            "typeName": "Omit"
          }
        }
      ],
      "methods": [],
      "properties": [
        {
          "name": "ownerId",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 295,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "Snowflake",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Snowflake"
            }
          },
          "typeParams": []
        },
        {
          "name": "splashHash",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 296,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "bigint",
            "kind": "keyword",
            "keyword": "bigint"
          },
          "typeParams": []
        },
        {
          "name": "bannerHash",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 297,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "bigint",
            "kind": "keyword",
            "keyword": "bigint"
          },
          "typeParams": []
        },
        {
          "name": "discoverySplashHash",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 298,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "bigint",
            "kind": "keyword",
            "keyword": "bigint"
          },
          "typeParams": []
        },
        {
          "name": "features",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 299,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "GuildFeatures",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "GuildFeatures"
              }
            }
          },
          "typeParams": []
        },
        {
          "name": "rulesChannelId",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 300,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "Snowflake",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Snowflake"
            }
          },
          "typeParams": []
        },
        {
          "name": "publicUpdatesChannelId",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 301,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "Snowflake",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Snowflake"
            }
          },
          "typeParams": []
        },
        {
          "name": "preferredLocale",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 302,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              },
              {
                "repr": "null",
                "kind": "keyword",
                "keyword": "null"
              }
            ]
          },
          "typeParams": []
        },
        {
          "name": "description",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 303,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "premiumProgressBarEnabled",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 304,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "class",
    "name": "Guild",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
      "line": 311,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "Represents a guild",
      "tags": [
        {
          "kind": "unsupported",
          "value": "@link https://discord.com/developers/docs/resources/guild#guild-object"
        }
      ]
    },
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "session",
              "optional": false,
              "tsType": {
                "repr": "Session",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Session"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "data",
              "optional": false,
              "tsType": {
                "repr": "DiscordGuild",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "DiscordGuild"
                }
              }
            }
          ],
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 312,
            "col": 4
          }
        }
      ],
      "properties": [
        {
          "tsType": {
            "repr": "bigint",
            "kind": "keyword",
            "keyword": "bigint"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "splashHash",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 342,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "bigint",
            "kind": "keyword",
            "keyword": "bigint"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "discoverySplashHash",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 343,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "Snowflake",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Snowflake"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "ownerId",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 344,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "widgetEnabled",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 345,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "Snowflake",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Snowflake"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "widgetChannelId",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 346,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "VerificationLevels",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "VerificationLevels"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "vefificationLevel",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 347,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "DefaultMessageNotificationLevels",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "DefaultMessageNotificationLevels"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "defaultMessageNotificationLevel",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 348,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "ExplicitContentFilterLevels",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "ExplicitContentFilterLevels"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "explicitContentFilterLevel",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 349,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "PremiumTiers",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "PremiumTiers"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "premiumTier",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 350,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "Map",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": [
                {
                  "repr": "Snowflake",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Snowflake"
                  }
                },
                {
                  "repr": "Member",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Member"
                  }
                }
              ],
              "typeName": "Map"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "members",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 351,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "Map",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": [
                {
                  "repr": "Snowflake",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Snowflake"
                  }
                },
                {
                  "repr": "Role",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Role"
                  }
                }
              ],
              "typeName": "Map"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "roles",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 352,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "Map",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": [
                {
                  "repr": "Snowflake",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Snowflake"
                  }
                },
                {
                  "repr": "GuildEmoji",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "GuildEmoji"
                  }
                }
              ],
              "typeName": "Map"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "emojis",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 353,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "Map",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": [
                {
                  "repr": "Snowflake",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Snowflake"
                  }
                },
                {
                  "repr": "GuildChannel",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "GuildChannel"
                  }
                }
              ],
              "typeName": "Map"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "channels",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 354,
            "col": 4
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "jsDoc": {
            "doc": "Returns the maximum number of emoji slots"
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "maxEmojis",
          "kind": "getter",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "",
              "kind": "union",
              "union": [
                {
                  "repr": "50",
                  "kind": "literal",
                  "literal": {
                    "kind": "number",
                    "number": 50.0
                  }
                },
                {
                  "repr": "100",
                  "kind": "literal",
                  "literal": {
                    "kind": "number",
                    "number": 100.0
                  }
                },
                {
                  "repr": "150",
                  "kind": "literal",
                  "literal": {
                    "kind": "number",
                    "number": 150.0
                  }
                },
                {
                  "repr": "250",
                  "kind": "literal",
                  "literal": {
                    "kind": "number",
                    "number": 250.0
                  }
                }
              ]
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 359,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "Returns the maximum number of custom sticker slots"
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "maxStickers",
          "kind": "getter",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "",
              "kind": "union",
              "union": [
                {
                  "repr": "5",
                  "kind": "literal",
                  "literal": {
                    "kind": "number",
                    "number": 5.0
                  }
                },
                {
                  "repr": "15",
                  "kind": "literal",
                  "literal": {
                    "kind": "number",
                    "number": 15.0
                  }
                },
                {
                  "repr": "30",
                  "kind": "literal",
                  "literal": {
                    "kind": "number",
                    "number": 30.0
                  }
                },
                {
                  "repr": "60",
                  "kind": "literal",
                  "literal": {
                    "kind": "number",
                    "number": 60.0
                  }
                }
              ]
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 375,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "'null' would reset the nickname"
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "editBotNickname",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "options",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "typeLiteral",
                  "typeLiteral": {
                    "methods": [],
                    "properties": [
                      {
                        "name": "nick",
                        "params": [],
                        "computed": false,
                        "optional": false,
                        "tsType": {
                          "repr": "",
                          "kind": "union",
                          "union": [
                            {
                              "repr": "string",
                              "kind": "keyword",
                              "keyword": "string"
                            },
                            {
                              "repr": "null",
                              "kind": "keyword",
                              "keyword": "null"
                            }
                          ]
                        },
                        "typeParams": []
                      },
                      {
                        "name": "reason",
                        "params": [],
                        "computed": false,
                        "optional": true,
                        "tsType": {
                          "repr": "string",
                          "kind": "keyword",
                          "keyword": "string"
                        },
                        "typeParams": []
                      }
                    ],
                    "callSignatures": [],
                    "indexSignatures": []
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "",
                    "kind": "parenthesized",
                    "parenthesized": {
                      "repr": "",
                      "kind": "union",
                      "union": [
                        {
                          "repr": "string",
                          "kind": "keyword",
                          "keyword": "string"
                        },
                        {
                          "repr": "undefined",
                          "kind": "keyword",
                          "keyword": "undefined"
                        }
                      ]
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 391,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "createEmoji",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "options",
                "optional": false,
                "tsType": {
                  "repr": "CreateGuildEmoji",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "CreateGuildEmoji"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "GuildEmoji",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "GuildEmoji"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 402,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "deleteEmoji",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "id",
                "optional": false,
                "tsType": {
                  "repr": "Snowflake",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Snowflake"
                  }
                }
              },
              {
                "kind": "assign",
                "left": {
                  "kind": "object",
                  "props": [
                    {
                      "kind": "assign",
                      "key": "reason",
                      "value": null
                    }
                  ],
                  "optional": false,
                  "tsType": {
                    "repr": "",
                    "kind": "typeLiteral",
                    "typeLiteral": {
                      "methods": [],
                      "properties": [
                        {
                          "name": "reason",
                          "params": [],
                          "computed": false,
                          "optional": true,
                          "tsType": {
                            "repr": "string",
                            "kind": "keyword",
                            "keyword": "string"
                          },
                          "typeParams": []
                        }
                      ],
                      "callSignatures": [],
                      "indexSignatures": []
                    }
                  }
                },
                "right": "[UNSUPPORTED]",
                "tsType": null
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "void",
                    "kind": "keyword",
                    "keyword": "void"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 417,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "editEmoji",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "id",
                "optional": false,
                "tsType": {
                  "repr": "Snowflake",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Snowflake"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "options",
                "optional": false,
                "tsType": {
                  "repr": "ModifyGuildEmoji",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "ModifyGuildEmoji"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "GuildEmoji",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "GuildEmoji"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 426,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "createRole",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "options",
                "optional": false,
                "tsType": {
                  "repr": "CreateRole",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "CreateRole"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "Role",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Role"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 437,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "deleteRole",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "roleId",
                "optional": false,
                "tsType": {
                  "repr": "Snowflake",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Snowflake"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "void",
                    "kind": "keyword",
                    "keyword": "void"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 465,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "editRole",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "roleId",
                "optional": false,
                "tsType": {
                  "repr": "Snowflake",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Snowflake"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "options",
                "optional": false,
                "tsType": {
                  "repr": "ModifyGuildRole",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "ModifyGuildRole"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "Role",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Role"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 469,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "addRole",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "memberId",
                "optional": false,
                "tsType": {
                  "repr": "Snowflake",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Snowflake"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "roleId",
                "optional": false,
                "tsType": {
                  "repr": "Snowflake",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Snowflake"
                  }
                }
              },
              {
                "kind": "assign",
                "left": {
                  "kind": "object",
                  "props": [
                    {
                      "kind": "assign",
                      "key": "reason",
                      "value": null
                    }
                  ],
                  "optional": false,
                  "tsType": {
                    "repr": "",
                    "kind": "typeLiteral",
                    "typeLiteral": {
                      "methods": [],
                      "properties": [
                        {
                          "name": "reason",
                          "params": [],
                          "computed": false,
                          "optional": true,
                          "tsType": {
                            "repr": "string",
                            "kind": "keyword",
                            "keyword": "string"
                          },
                          "typeParams": []
                        }
                      ],
                      "callSignatures": [],
                      "indexSignatures": []
                    }
                  }
                },
                "right": "[UNSUPPORTED]",
                "tsType": null
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "void",
                    "kind": "keyword",
                    "keyword": "void"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 485,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "removeRole",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "memberId",
                "optional": false,
                "tsType": {
                  "repr": "Snowflake",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Snowflake"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "roleId",
                "optional": false,
                "tsType": {
                  "repr": "Snowflake",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Snowflake"
                  }
                }
              },
              {
                "kind": "assign",
                "left": {
                  "kind": "object",
                  "props": [
                    {
                      "kind": "assign",
                      "key": "reason",
                      "value": null
                    }
                  ],
                  "optional": false,
                  "tsType": {
                    "repr": "",
                    "kind": "typeLiteral",
                    "typeLiteral": {
                      "methods": [],
                      "properties": [
                        {
                          "name": "reason",
                          "params": [],
                          "computed": false,
                          "optional": true,
                          "tsType": {
                            "repr": "string",
                            "kind": "keyword",
                            "keyword": "string"
                          },
                          "typeParams": []
                        }
                      ],
                      "callSignatures": [],
                      "indexSignatures": []
                    }
                  }
                },
                "right": "[UNSUPPORTED]",
                "tsType": null
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "void",
                    "kind": "keyword",
                    "keyword": "void"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 494,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "Returns the roles moved"
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "moveRoles",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "options",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "array",
                  "array": {
                    "repr": "ModifyRolePositions",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "ModifyRolePositions"
                    }
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "",
                    "kind": "array",
                    "array": {
                      "repr": "Role",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "Role"
                      }
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 506,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "deleteInvite",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "inviteCode",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "void",
                    "kind": "keyword",
                    "keyword": "void"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 517,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "fetchInvite",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "inviteCode",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "options",
                "optional": false,
                "tsType": {
                  "repr": "Routes.GetInvite",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Routes.GetInvite"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "Invite",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Invite"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 526,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "fetchInvites",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "",
                    "kind": "array",
                    "array": {
                      "repr": "Invite",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "Invite"
                      }
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 536,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "Bans the member"
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "banMember",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "memberId",
                "optional": false,
                "tsType": {
                  "repr": "Snowflake",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Snowflake"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "options",
                "optional": false,
                "tsType": {
                  "repr": "CreateGuildBan",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "CreateGuildBan"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "void",
                    "kind": "keyword",
                    "keyword": "void"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 549,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "Kicks the member"
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "kickMember",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "memberId",
                "optional": false,
                "tsType": {
                  "repr": "Snowflake",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Snowflake"
                  }
                }
              },
              {
                "kind": "object",
                "props": [
                  {
                    "kind": "assign",
                    "key": "reason",
                    "value": null
                  }
                ],
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "typeLiteral",
                  "typeLiteral": {
                    "methods": [],
                    "properties": [
                      {
                        "name": "reason",
                        "params": [],
                        "computed": false,
                        "optional": true,
                        "tsType": {
                          "repr": "string",
                          "kind": "keyword",
                          "keyword": "string"
                        },
                        "typeParams": []
                      }
                    ],
                    "callSignatures": [],
                    "indexSignatures": []
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "void",
                    "kind": "keyword",
                    "keyword": "void"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 566,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "unbanMember",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "memberId",
                "optional": false,
                "tsType": {
                  "repr": "Snowflake",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Snowflake"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "void",
                    "kind": "keyword",
                    "keyword": "void"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 578,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "editMember",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "memberId",
                "optional": false,
                "tsType": {
                  "repr": "Snowflake",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Snowflake"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "options",
                "optional": false,
                "tsType": {
                  "repr": "ModifyGuildMember",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "ModifyGuildMember"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "Member",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Member"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 586,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "pruneMembers",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "options",
                "optional": false,
                "tsType": {
                  "repr": "BeginGuildPrune",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "BeginGuildPrune"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "number",
                    "kind": "keyword",
                    "keyword": "number"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 606,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getPruneCount",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "number",
                    "kind": "keyword",
                    "keyword": "number"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 621,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getActiveThreads",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "Omit",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": [
                        {
                          "repr": "ReturnThreadsArchive",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "ReturnThreadsArchive"
                          }
                        },
                        {
                          "repr": "hasMore",
                          "kind": "literal",
                          "literal": {
                            "kind": "string",
                            "string": "hasMore"
                          }
                        }
                      ],
                      "typeName": "Omit"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 631,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "*\nDeletes a guild"
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "delete",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "void",
                    "kind": "keyword",
                    "keyword": "void"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 651,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "Creates a guild and returns its data, the bot joins the guild\nThis was modified from discord.js to make it compatible\nprecondition: Bot should be in less than 10 servers"
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": true,
          "name": "create",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "session",
                "optional": false,
                "tsType": {
                  "repr": "Session",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Session"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "options",
                "optional": false,
                "tsType": {
                  "repr": "GuildCreateOptions",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "GuildCreateOptions"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "Guild",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Guild"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 664,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "Edits a guild and returns its data"
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "edit",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "session",
                "optional": false,
                "tsType": {
                  "repr": "Session",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Session"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "options",
                "optional": false,
                "tsType": {
                  "repr": "GuildEditOptions",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "GuildEditOptions"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "Guild",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Guild"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 706,
            "col": 4
          }
        }
      ],
      "extends": "BaseGuild",
      "implements": [
        {
          "repr": "Model",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "Model"
          }
        }
      ],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "class",
    "name": "default",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
      "line": 311,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "Represents a guild",
      "tags": [
        {
          "kind": "unsupported",
          "value": "@link https://discord.com/developers/docs/resources/guild#guild-object"
        }
      ]
    },
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "session",
              "optional": false,
              "tsType": {
                "repr": "Session",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Session"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "data",
              "optional": false,
              "tsType": {
                "repr": "DiscordGuild",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "DiscordGuild"
                }
              }
            }
          ],
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 312,
            "col": 4
          }
        }
      ],
      "properties": [
        {
          "tsType": {
            "repr": "bigint",
            "kind": "keyword",
            "keyword": "bigint"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "splashHash",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 342,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "bigint",
            "kind": "keyword",
            "keyword": "bigint"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "discoverySplashHash",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 343,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "Snowflake",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Snowflake"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "ownerId",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 344,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "widgetEnabled",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 345,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "Snowflake",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Snowflake"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "widgetChannelId",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 346,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "VerificationLevels",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "VerificationLevels"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "vefificationLevel",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 347,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "DefaultMessageNotificationLevels",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "DefaultMessageNotificationLevels"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "defaultMessageNotificationLevel",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 348,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "ExplicitContentFilterLevels",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "ExplicitContentFilterLevels"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "explicitContentFilterLevel",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 349,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "PremiumTiers",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "PremiumTiers"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "premiumTier",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 350,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "Map",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": [
                {
                  "repr": "Snowflake",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Snowflake"
                  }
                },
                {
                  "repr": "Member",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Member"
                  }
                }
              ],
              "typeName": "Map"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "members",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 351,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "Map",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": [
                {
                  "repr": "Snowflake",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Snowflake"
                  }
                },
                {
                  "repr": "Role",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Role"
                  }
                }
              ],
              "typeName": "Map"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "roles",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 352,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "Map",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": [
                {
                  "repr": "Snowflake",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Snowflake"
                  }
                },
                {
                  "repr": "GuildEmoji",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "GuildEmoji"
                  }
                }
              ],
              "typeName": "Map"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "emojis",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 353,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "Map",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": [
                {
                  "repr": "Snowflake",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Snowflake"
                  }
                },
                {
                  "repr": "GuildChannel",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "GuildChannel"
                  }
                }
              ],
              "typeName": "Map"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "channels",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 354,
            "col": 4
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "jsDoc": {
            "doc": "Returns the maximum number of emoji slots"
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "maxEmojis",
          "kind": "getter",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "",
              "kind": "union",
              "union": [
                {
                  "repr": "50",
                  "kind": "literal",
                  "literal": {
                    "kind": "number",
                    "number": 50.0
                  }
                },
                {
                  "repr": "100",
                  "kind": "literal",
                  "literal": {
                    "kind": "number",
                    "number": 100.0
                  }
                },
                {
                  "repr": "150",
                  "kind": "literal",
                  "literal": {
                    "kind": "number",
                    "number": 150.0
                  }
                },
                {
                  "repr": "250",
                  "kind": "literal",
                  "literal": {
                    "kind": "number",
                    "number": 250.0
                  }
                }
              ]
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 359,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "Returns the maximum number of custom sticker slots"
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "maxStickers",
          "kind": "getter",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "",
              "kind": "union",
              "union": [
                {
                  "repr": "5",
                  "kind": "literal",
                  "literal": {
                    "kind": "number",
                    "number": 5.0
                  }
                },
                {
                  "repr": "15",
                  "kind": "literal",
                  "literal": {
                    "kind": "number",
                    "number": 15.0
                  }
                },
                {
                  "repr": "30",
                  "kind": "literal",
                  "literal": {
                    "kind": "number",
                    "number": 30.0
                  }
                },
                {
                  "repr": "60",
                  "kind": "literal",
                  "literal": {
                    "kind": "number",
                    "number": 60.0
                  }
                }
              ]
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 375,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "'null' would reset the nickname"
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "editBotNickname",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "options",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "typeLiteral",
                  "typeLiteral": {
                    "methods": [],
                    "properties": [
                      {
                        "name": "nick",
                        "params": [],
                        "computed": false,
                        "optional": false,
                        "tsType": {
                          "repr": "",
                          "kind": "union",
                          "union": [
                            {
                              "repr": "string",
                              "kind": "keyword",
                              "keyword": "string"
                            },
                            {
                              "repr": "null",
                              "kind": "keyword",
                              "keyword": "null"
                            }
                          ]
                        },
                        "typeParams": []
                      },
                      {
                        "name": "reason",
                        "params": [],
                        "computed": false,
                        "optional": true,
                        "tsType": {
                          "repr": "string",
                          "kind": "keyword",
                          "keyword": "string"
                        },
                        "typeParams": []
                      }
                    ],
                    "callSignatures": [],
                    "indexSignatures": []
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "",
                    "kind": "parenthesized",
                    "parenthesized": {
                      "repr": "",
                      "kind": "union",
                      "union": [
                        {
                          "repr": "string",
                          "kind": "keyword",
                          "keyword": "string"
                        },
                        {
                          "repr": "undefined",
                          "kind": "keyword",
                          "keyword": "undefined"
                        }
                      ]
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 391,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "createEmoji",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "options",
                "optional": false,
                "tsType": {
                  "repr": "CreateGuildEmoji",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "CreateGuildEmoji"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "GuildEmoji",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "GuildEmoji"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 402,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "deleteEmoji",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "id",
                "optional": false,
                "tsType": {
                  "repr": "Snowflake",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Snowflake"
                  }
                }
              },
              {
                "kind": "assign",
                "left": {
                  "kind": "object",
                  "props": [
                    {
                      "kind": "assign",
                      "key": "reason",
                      "value": null
                    }
                  ],
                  "optional": false,
                  "tsType": {
                    "repr": "",
                    "kind": "typeLiteral",
                    "typeLiteral": {
                      "methods": [],
                      "properties": [
                        {
                          "name": "reason",
                          "params": [],
                          "computed": false,
                          "optional": true,
                          "tsType": {
                            "repr": "string",
                            "kind": "keyword",
                            "keyword": "string"
                          },
                          "typeParams": []
                        }
                      ],
                      "callSignatures": [],
                      "indexSignatures": []
                    }
                  }
                },
                "right": "[UNSUPPORTED]",
                "tsType": null
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "void",
                    "kind": "keyword",
                    "keyword": "void"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 417,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "editEmoji",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "id",
                "optional": false,
                "tsType": {
                  "repr": "Snowflake",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Snowflake"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "options",
                "optional": false,
                "tsType": {
                  "repr": "ModifyGuildEmoji",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "ModifyGuildEmoji"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "GuildEmoji",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "GuildEmoji"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 426,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "createRole",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "options",
                "optional": false,
                "tsType": {
                  "repr": "CreateRole",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "CreateRole"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "Role",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Role"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 437,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "deleteRole",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "roleId",
                "optional": false,
                "tsType": {
                  "repr": "Snowflake",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Snowflake"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "void",
                    "kind": "keyword",
                    "keyword": "void"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 465,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "editRole",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "roleId",
                "optional": false,
                "tsType": {
                  "repr": "Snowflake",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Snowflake"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "options",
                "optional": false,
                "tsType": {
                  "repr": "ModifyGuildRole",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "ModifyGuildRole"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "Role",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Role"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 469,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "addRole",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "memberId",
                "optional": false,
                "tsType": {
                  "repr": "Snowflake",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Snowflake"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "roleId",
                "optional": false,
                "tsType": {
                  "repr": "Snowflake",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Snowflake"
                  }
                }
              },
              {
                "kind": "assign",
                "left": {
                  "kind": "object",
                  "props": [
                    {
                      "kind": "assign",
                      "key": "reason",
                      "value": null
                    }
                  ],
                  "optional": false,
                  "tsType": {
                    "repr": "",
                    "kind": "typeLiteral",
                    "typeLiteral": {
                      "methods": [],
                      "properties": [
                        {
                          "name": "reason",
                          "params": [],
                          "computed": false,
                          "optional": true,
                          "tsType": {
                            "repr": "string",
                            "kind": "keyword",
                            "keyword": "string"
                          },
                          "typeParams": []
                        }
                      ],
                      "callSignatures": [],
                      "indexSignatures": []
                    }
                  }
                },
                "right": "[UNSUPPORTED]",
                "tsType": null
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "void",
                    "kind": "keyword",
                    "keyword": "void"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 485,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "removeRole",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "memberId",
                "optional": false,
                "tsType": {
                  "repr": "Snowflake",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Snowflake"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "roleId",
                "optional": false,
                "tsType": {
                  "repr": "Snowflake",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Snowflake"
                  }
                }
              },
              {
                "kind": "assign",
                "left": {
                  "kind": "object",
                  "props": [
                    {
                      "kind": "assign",
                      "key": "reason",
                      "value": null
                    }
                  ],
                  "optional": false,
                  "tsType": {
                    "repr": "",
                    "kind": "typeLiteral",
                    "typeLiteral": {
                      "methods": [],
                      "properties": [
                        {
                          "name": "reason",
                          "params": [],
                          "computed": false,
                          "optional": true,
                          "tsType": {
                            "repr": "string",
                            "kind": "keyword",
                            "keyword": "string"
                          },
                          "typeParams": []
                        }
                      ],
                      "callSignatures": [],
                      "indexSignatures": []
                    }
                  }
                },
                "right": "[UNSUPPORTED]",
                "tsType": null
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "void",
                    "kind": "keyword",
                    "keyword": "void"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 494,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "Returns the roles moved"
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "moveRoles",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "options",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "array",
                  "array": {
                    "repr": "ModifyRolePositions",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "ModifyRolePositions"
                    }
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "",
                    "kind": "array",
                    "array": {
                      "repr": "Role",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "Role"
                      }
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 506,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "deleteInvite",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "inviteCode",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "void",
                    "kind": "keyword",
                    "keyword": "void"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 517,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "fetchInvite",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "inviteCode",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "options",
                "optional": false,
                "tsType": {
                  "repr": "Routes.GetInvite",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Routes.GetInvite"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "Invite",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Invite"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 526,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "fetchInvites",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "",
                    "kind": "array",
                    "array": {
                      "repr": "Invite",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "Invite"
                      }
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 536,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "Bans the member"
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "banMember",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "memberId",
                "optional": false,
                "tsType": {
                  "repr": "Snowflake",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Snowflake"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "options",
                "optional": false,
                "tsType": {
                  "repr": "CreateGuildBan",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "CreateGuildBan"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "void",
                    "kind": "keyword",
                    "keyword": "void"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 549,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "Kicks the member"
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "kickMember",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "memberId",
                "optional": false,
                "tsType": {
                  "repr": "Snowflake",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Snowflake"
                  }
                }
              },
              {
                "kind": "object",
                "props": [
                  {
                    "kind": "assign",
                    "key": "reason",
                    "value": null
                  }
                ],
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "typeLiteral",
                  "typeLiteral": {
                    "methods": [],
                    "properties": [
                      {
                        "name": "reason",
                        "params": [],
                        "computed": false,
                        "optional": true,
                        "tsType": {
                          "repr": "string",
                          "kind": "keyword",
                          "keyword": "string"
                        },
                        "typeParams": []
                      }
                    ],
                    "callSignatures": [],
                    "indexSignatures": []
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "void",
                    "kind": "keyword",
                    "keyword": "void"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 566,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "unbanMember",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "memberId",
                "optional": false,
                "tsType": {
                  "repr": "Snowflake",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Snowflake"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "void",
                    "kind": "keyword",
                    "keyword": "void"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 578,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "editMember",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "memberId",
                "optional": false,
                "tsType": {
                  "repr": "Snowflake",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Snowflake"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "options",
                "optional": false,
                "tsType": {
                  "repr": "ModifyGuildMember",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "ModifyGuildMember"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "Member",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Member"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 586,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "pruneMembers",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "options",
                "optional": false,
                "tsType": {
                  "repr": "BeginGuildPrune",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "BeginGuildPrune"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "number",
                    "kind": "keyword",
                    "keyword": "number"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 606,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getPruneCount",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "number",
                    "kind": "keyword",
                    "keyword": "number"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 621,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getActiveThreads",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "Omit",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": [
                        {
                          "repr": "ReturnThreadsArchive",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "ReturnThreadsArchive"
                          }
                        },
                        {
                          "repr": "hasMore",
                          "kind": "literal",
                          "literal": {
                            "kind": "string",
                            "string": "hasMore"
                          }
                        }
                      ],
                      "typeName": "Omit"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 631,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "*\nDeletes a guild"
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "delete",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "void",
                    "kind": "keyword",
                    "keyword": "void"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 651,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "Creates a guild and returns its data, the bot joins the guild\nThis was modified from discord.js to make it compatible\nprecondition: Bot should be in less than 10 servers"
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": true,
          "name": "create",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "session",
                "optional": false,
                "tsType": {
                  "repr": "Session",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Session"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "options",
                "optional": false,
                "tsType": {
                  "repr": "GuildCreateOptions",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "GuildCreateOptions"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "Guild",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Guild"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 664,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "Edits a guild and returns its data"
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "edit",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "session",
                "optional": false,
                "tsType": {
                  "repr": "Session",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Session"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "options",
                "optional": false,
                "tsType": {
                  "repr": "GuildEditOptions",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "GuildEditOptions"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "Guild",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Guild"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
            "line": 706,
            "col": 4
          }
        }
      ],
      "extends": "BaseGuild",
      "implements": [
        {
          "repr": "Model",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "Model"
          }
        }
      ],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "import",
    "name": "Model",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
      "line": 1,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/structures/Base.ts",
      "imported": "Model"
    }
  },
  {
    "kind": "import",
    "name": "Session",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
      "line": 2,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/Session.ts",
      "imported": "Session"
    }
  },
  {
    "kind": "import",
    "name": "ChannelTypes",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
      "line": 3,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
      "imported": "ChannelTypes"
    }
  },
  {
    "kind": "import",
    "name": "DefaultMessageNotificationLevels",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
      "line": 3,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
      "imported": "DefaultMessageNotificationLevels"
    }
  },
  {
    "kind": "import",
    "name": "DiscordEmoji",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
      "line": 3,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
      "imported": "DiscordEmoji"
    }
  },
  {
    "kind": "import",
    "name": "DiscordGuild",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
      "line": 3,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
      "imported": "DiscordGuild"
    }
  },
  {
    "kind": "import",
    "name": "DiscordInviteMetadata",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
      "line": 3,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
      "imported": "DiscordInviteMetadata"
    }
  },
  {
    "kind": "import",
    "name": "DiscordListActiveThreads",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
      "line": 3,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
      "imported": "DiscordListActiveThreads"
    }
  },
  {
    "kind": "import",
    "name": "DiscordMemberWithUser",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
      "line": 3,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
      "imported": "DiscordMemberWithUser"
    }
  },
  {
    "kind": "import",
    "name": "DiscordOverwrite",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
      "line": 3,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
      "imported": "DiscordOverwrite"
    }
  },
  {
    "kind": "import",
    "name": "DiscordRole",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
      "line": 3,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
      "imported": "DiscordRole"
    }
  },
  {
    "kind": "import",
    "name": "ExplicitContentFilterLevels",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
      "line": 3,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
      "imported": "ExplicitContentFilterLevels"
    }
  },
  {
    "kind": "import",
    "name": "GuildNsfwLevel",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
      "line": 3,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
      "imported": "GuildNsfwLevel"
    }
  },
  {
    "kind": "import",
    "name": "MakeRequired",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
      "line": 3,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
      "imported": "MakeRequired"
    }
  },
  {
    "kind": "import",
    "name": "SystemChannelFlags",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
      "line": 3,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
      "imported": "SystemChannelFlags"
    }
  },
  {
    "kind": "import",
    "name": "VerificationLevels",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
      "line": 3,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
      "imported": "VerificationLevels"
    }
  },
  {
    "kind": "import",
    "name": "VideoQualityModes",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
      "line": 3,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
      "imported": "VideoQualityModes"
    }
  },
  {
    "kind": "import",
    "name": "ImageFormat",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
      "line": 20,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/Util.ts",
      "imported": "ImageFormat"
    }
  },
  {
    "kind": "import",
    "name": "ImageSize",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
      "line": 20,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/Util.ts",
      "imported": "ImageSize"
    }
  },
  {
    "kind": "import",
    "name": "GuildFeatures",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
      "line": 21,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
      "imported": "GuildFeatures"
    }
  },
  {
    "kind": "import",
    "name": "PremiumTiers",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
      "line": 21,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
      "imported": "PremiumTiers"
    }
  },
  {
    "kind": "import",
    "name": "Snowflake",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
      "line": 22,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/Snowflake.ts",
      "imported": "Snowflake"
    }
  },
  {
    "kind": "import",
    "name": "Util",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
      "line": 23,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/Util.ts",
      "imported": "default"
    }
  },
  {
    "kind": "import",
    "name": "Routes",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
      "line": 24,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/Routes.ts",
      "imported": null
    }
  },
  {
    "kind": "import",
    "name": "WelcomeScreen",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
      "line": 25,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/structures/WelcomeScreen.ts",
      "imported": "default"
    }
  },
  {
    "kind": "import",
    "name": "GuildChannel",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
      "line": 26,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
      "imported": "GuildChannel"
    }
  },
  {
    "kind": "import",
    "name": "ReturnThreadsArchive",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
      "line": 26,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
      "imported": "ReturnThreadsArchive"
    }
  },
  {
    "kind": "import",
    "name": "ThreadChannel",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
      "line": 26,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
      "imported": "ThreadChannel"
    }
  },
  {
    "kind": "import",
    "name": "ThreadMember",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
      "line": 27,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/structures/ThreadMember.ts",
      "imported": "default"
    }
  },
  {
    "kind": "import",
    "name": "Member",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
      "line": 28,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/structures/Member.ts",
      "imported": "default"
    }
  },
  {
    "kind": "import",
    "name": "Role",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
      "line": 29,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/structures/Role.ts",
      "imported": "default"
    }
  },
  {
    "kind": "import",
    "name": "GuildEmoji",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
      "line": 30,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/structures/GuildEmoji.ts",
      "imported": "default"
    }
  },
  {
    "kind": "import",
    "name": "urlToBase64",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
      "line": 31,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/util/urlToBase64.ts",
      "imported": "urlToBase64"
    }
  },
  {
    "kind": "import",
    "name": "Invite",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
      "line": 32,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/structures/Invite.ts",
      "imported": "default"
    }
  },
  {
    "kind": "class",
    "name": "GuildEmoji",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/GuildEmoji.ts",
      "line": 11,
      "col": 0
    },
    "declarationKind": "export",
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "session",
              "optional": false,
              "tsType": {
                "repr": "Session",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Session"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "data",
              "optional": false,
              "tsType": {
                "repr": "DiscordEmoji",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "DiscordEmoji"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "guildId",
              "optional": false,
              "tsType": {
                "repr": "Snowflake",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Snowflake"
                }
              }
            }
          ],
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/GuildEmoji.ts",
            "line": 12,
            "col": 4
          }
        }
      ],
      "properties": [
        {
          "tsType": {
            "repr": "Snowflake",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Snowflake"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "guildId",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/GuildEmoji.ts",
            "line": 20,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "Snowflake",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "Snowflake"
              }
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "roles",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/GuildEmoji.ts",
            "line": 21,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "User",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "User"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "user",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/GuildEmoji.ts",
            "line": 22,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "managed",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/GuildEmoji.ts",
            "line": 23,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "Snowflake",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Snowflake"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/GuildEmoji.ts",
            "line": 26,
            "col": 4
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "edit",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "options",
                "optional": false,
                "tsType": {
                  "repr": "ModifyGuildEmoji",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "ModifyGuildEmoji"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "GuildEmoji",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "GuildEmoji"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/GuildEmoji.ts",
            "line": 28,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "delete",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "assign",
                "left": {
                  "kind": "object",
                  "props": [
                    {
                      "kind": "assign",
                      "key": "reason",
                      "value": null
                    }
                  ],
                  "optional": false,
                  "tsType": {
                    "repr": "",
                    "kind": "typeLiteral",
                    "typeLiteral": {
                      "methods": [],
                      "properties": [
                        {
                          "name": "reason",
                          "params": [],
                          "computed": false,
                          "optional": true,
                          "tsType": {
                            "repr": "string",
                            "kind": "keyword",
                            "keyword": "string"
                          },
                          "typeParams": []
                        }
                      ],
                      "callSignatures": [],
                      "indexSignatures": []
                    }
                  }
                },
                "right": "[UNSUPPORTED]",
                "tsType": null
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "GuildEmoji",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "GuildEmoji"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/GuildEmoji.ts",
            "line": 38,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "url",
          "kind": "getter",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/GuildEmoji.ts",
            "line": 44,
            "col": 4
          }
        }
      ],
      "extends": "Emoji",
      "implements": [
        {
          "repr": "Model",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "Model"
          }
        }
      ],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "class",
    "name": "default",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/GuildEmoji.ts",
      "line": 11,
      "col": 0
    },
    "declarationKind": "export",
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "session",
              "optional": false,
              "tsType": {
                "repr": "Session",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Session"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "data",
              "optional": false,
              "tsType": {
                "repr": "DiscordEmoji",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "DiscordEmoji"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "guildId",
              "optional": false,
              "tsType": {
                "repr": "Snowflake",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Snowflake"
                }
              }
            }
          ],
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/GuildEmoji.ts",
            "line": 12,
            "col": 4
          }
        }
      ],
      "properties": [
        {
          "tsType": {
            "repr": "Snowflake",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Snowflake"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "guildId",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/GuildEmoji.ts",
            "line": 20,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "Snowflake",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "Snowflake"
              }
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "roles",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/GuildEmoji.ts",
            "line": 21,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "User",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "User"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "user",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/GuildEmoji.ts",
            "line": 22,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "managed",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/GuildEmoji.ts",
            "line": 23,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "Snowflake",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Snowflake"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/GuildEmoji.ts",
            "line": 26,
            "col": 4
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "edit",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "options",
                "optional": false,
                "tsType": {
                  "repr": "ModifyGuildEmoji",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "ModifyGuildEmoji"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "GuildEmoji",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "GuildEmoji"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/GuildEmoji.ts",
            "line": 28,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "delete",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "assign",
                "left": {
                  "kind": "object",
                  "props": [
                    {
                      "kind": "assign",
                      "key": "reason",
                      "value": null
                    }
                  ],
                  "optional": false,
                  "tsType": {
                    "repr": "",
                    "kind": "typeLiteral",
                    "typeLiteral": {
                      "methods": [],
                      "properties": [
                        {
                          "name": "reason",
                          "params": [],
                          "computed": false,
                          "optional": true,
                          "tsType": {
                            "repr": "string",
                            "kind": "keyword",
                            "keyword": "string"
                          },
                          "typeParams": []
                        }
                      ],
                      "callSignatures": [],
                      "indexSignatures": []
                    }
                  }
                },
                "right": "[UNSUPPORTED]",
                "tsType": null
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "GuildEmoji",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "GuildEmoji"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/GuildEmoji.ts",
            "line": 38,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "url",
          "kind": "getter",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/GuildEmoji.ts",
            "line": 44,
            "col": 4
          }
        }
      ],
      "extends": "Emoji",
      "implements": [
        {
          "repr": "Model",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "Model"
          }
        }
      ],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "import",
    "name": "Model",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/GuildEmoji.ts",
      "line": 1,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/structures/Base.ts",
      "imported": "Model"
    }
  },
  {
    "kind": "import",
    "name": "Snowflake",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/GuildEmoji.ts",
      "line": 2,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/Snowflake.ts",
      "imported": "Snowflake"
    }
  },
  {
    "kind": "import",
    "name": "Session",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/GuildEmoji.ts",
      "line": 3,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/Session.ts",
      "imported": "Session"
    }
  },
  {
    "kind": "import",
    "name": "DiscordEmoji",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/GuildEmoji.ts",
      "line": 4,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
      "imported": "DiscordEmoji"
    }
  },
  {
    "kind": "import",
    "name": "ModifyGuildEmoji",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/GuildEmoji.ts",
      "line": 5,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
      "imported": "ModifyGuildEmoji"
    }
  },
  {
    "kind": "import",
    "name": "Guild",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/GuildEmoji.ts",
      "line": 6,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
      "imported": "default"
    }
  },
  {
    "kind": "import",
    "name": "Emoji",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/GuildEmoji.ts",
      "line": 7,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/structures/Emoji.ts",
      "imported": "default"
    }
  },
  {
    "kind": "import",
    "name": "User",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/GuildEmoji.ts",
      "line": 8,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/structures/User.ts",
      "imported": "default"
    }
  },
  {
    "kind": "import",
    "name": "Routes",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/GuildEmoji.ts",
      "line": 9,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/Routes.ts",
      "imported": null
    }
  },
  {
    "kind": "class",
    "name": "ButtonBuilder",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/components/MessageButton.ts",
      "line": 4,
      "col": 0
    },
    "declarationKind": "export",
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "accessibility": null,
          "name": "constructor",
          "params": [],
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/components/MessageButton.ts",
            "line": 5,
            "col": 4
          }
        }
      ],
      "properties": [
        {
          "tsType": {
            "repr": "MessageComponentTypes.Button",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "MessageComponentTypes.Button"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "type",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/components/MessageButton.ts",
            "line": 10,
            "col": 4
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setStyle",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "style",
                "optional": false,
                "tsType": {
                  "repr": "ButtonStyles",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "ButtonStyles"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "this",
              "kind": "this",
              "this": true
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/components/MessageButton.ts",
            "line": 12,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setLabel",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "label",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "this",
              "kind": "this",
              "this": true
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/components/MessageButton.ts",
            "line": 17,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setCustomId",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "id",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "this",
              "kind": "this",
              "this": true
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/components/MessageButton.ts",
            "line": 22,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setEmoji",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "emoji",
                "optional": false,
                "tsType": {
                  "repr": "ComponentEmoji",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "ComponentEmoji"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "this",
              "kind": "this",
              "this": true
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/components/MessageButton.ts",
            "line": 27,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setDisabled",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "assign",
                "left": {
                  "kind": "identifier",
                  "name": "disabled",
                  "optional": false,
                  "tsType": null
                },
                "right": "[UNSUPPORTED]",
                "tsType": null
              }
            ],
            "returnType": {
              "repr": "this",
              "kind": "this",
              "this": true
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/components/MessageButton.ts",
            "line": 32,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setURL",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "url",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "this",
              "kind": "this",
              "this": true
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/components/MessageButton.ts",
            "line": 37,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "toJSON",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "DiscordButtonComponent",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "DiscordButtonComponent"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/components/MessageButton.ts",
            "line": 42,
            "col": 4
          }
        }
      ],
      "extends": null,
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "import",
    "name": "ButtonStyles",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/components/MessageButton.ts",
      "line": 1,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
      "imported": "ButtonStyles"
    }
  },
  {
    "kind": "import",
    "name": "DiscordButtonComponent",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/components/MessageButton.ts",
      "line": 1,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
      "imported": "DiscordButtonComponent"
    }
  },
  {
    "kind": "import",
    "name": "MessageComponentTypes",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/components/MessageButton.ts",
      "line": 1,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
      "imported": "MessageComponentTypes"
    }
  },
  {
    "kind": "import",
    "name": "ComponentEmoji",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/components/MessageButton.ts",
      "line": 2,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/Util.ts",
      "imported": "ComponentEmoji"
    }
  },
  {
    "kind": "typeAlias",
    "name": "PermissionString",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Permissions.ts",
      "line": 3,
      "col": 0
    },
    "declarationKind": "export",
    "typeAliasDef": {
      "tsType": {
        "repr": "",
        "kind": "typeOperator",
        "typeOperator": {
          "operator": "keyof",
          "tsType": {
            "repr": "BitwisePermissionFlags",
            "kind": "typeQuery",
            "typeQuery": "BitwisePermissionFlags"
          }
        }
      },
      "typeParams": []
    }
  },
  {
    "kind": "typeAlias",
    "name": "PermissionResolvable",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Permissions.ts",
      "line": 4,
      "col": 0
    },
    "declarationKind": "export",
    "typeAliasDef": {
      "tsType": {
        "repr": "",
        "kind": "union",
        "union": [
          {
            "repr": "bigint",
            "kind": "keyword",
            "keyword": "bigint"
          },
          {
            "repr": "PermissionString",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "PermissionString"
            }
          },
          {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "PermissionString",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "PermissionString"
              }
            }
          },
          {
            "repr": "BitwisePermissionFlags",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "BitwisePermissionFlags"
            }
          }
        ]
      },
      "typeParams": []
    }
  },
  {
    "kind": "class",
    "name": "Permissions",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Permissions.ts",
      "line": 10,
      "col": 0
    },
    "declarationKind": "export",
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "bitfield",
              "optional": false,
              "tsType": {
                "repr": "PermissionResolvable",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "PermissionResolvable"
                }
              }
            }
          ],
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Permissions.ts",
            "line": 14,
            "col": 4
          }
        }
      ],
      "properties": [
        {
          "tsType": null,
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": true,
          "name": "Flags",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Permissions.ts",
            "line": 11,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "bigint",
            "kind": "keyword",
            "keyword": "bigint"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "bitfield",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Permissions.ts",
            "line": 12,
            "col": 4
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "has",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "bit",
                "optional": false,
                "tsType": {
                  "repr": "PermissionResolvable",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "PermissionResolvable"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "boolean",
              "kind": "keyword",
              "keyword": "boolean"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Permissions.ts",
            "line": 18,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": true,
          "name": "resolve",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "bit",
                "optional": false,
                "tsType": {
                  "repr": "PermissionResolvable",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "PermissionResolvable"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "bigint",
              "kind": "keyword",
              "keyword": "bigint"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Permissions.ts",
            "line": 26,
            "col": 4
          }
        }
      ],
      "extends": null,
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "class",
    "name": "default",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Permissions.ts",
      "line": 10,
      "col": 0
    },
    "declarationKind": "export",
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "bitfield",
              "optional": false,
              "tsType": {
                "repr": "PermissionResolvable",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "PermissionResolvable"
                }
              }
            }
          ],
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Permissions.ts",
            "line": 14,
            "col": 4
          }
        }
      ],
      "properties": [
        {
          "tsType": null,
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": true,
          "name": "Flags",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Permissions.ts",
            "line": 11,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "bigint",
            "kind": "keyword",
            "keyword": "bigint"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "bitfield",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Permissions.ts",
            "line": 12,
            "col": 4
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "has",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "bit",
                "optional": false,
                "tsType": {
                  "repr": "PermissionResolvable",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "PermissionResolvable"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "boolean",
              "kind": "keyword",
              "keyword": "boolean"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Permissions.ts",
            "line": 18,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": true,
          "name": "resolve",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "bit",
                "optional": false,
                "tsType": {
                  "repr": "PermissionResolvable",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "PermissionResolvable"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "bigint",
              "kind": "keyword",
              "keyword": "bigint"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Permissions.ts",
            "line": 26,
            "col": 4
          }
        }
      ],
      "extends": null,
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "import",
    "name": "BitwisePermissionFlags",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Permissions.ts",
      "line": 1,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
      "imported": "BitwisePermissionFlags"
    }
  },
  {
    "kind": "interface",
    "name": "AutoModerationRuleTriggerMetadata",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/AutoModerationRule.ts",
      "line": 12,
      "col": 0
    },
    "declarationKind": "export",
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "keywordFilter",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/AutoModerationRule.ts",
            "line": 13,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            }
          },
          "typeParams": []
        },
        {
          "name": "presets",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/AutoModerationRule.ts",
            "line": 14,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "DiscordAutoModerationRuleTriggerMetadataPresets",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "DiscordAutoModerationRuleTriggerMetadataPresets"
              }
            }
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "ActionMetadata",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/AutoModerationRule.ts",
      "line": 17,
      "col": 0
    },
    "declarationKind": "export",
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "channelId",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/AutoModerationRule.ts",
            "line": 18,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "Snowflake",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Snowflake"
            }
          },
          "typeParams": []
        },
        {
          "name": "durationSeconds",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/AutoModerationRule.ts",
            "line": 19,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "AutoModerationAction",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/AutoModerationRule.ts",
      "line": 22,
      "col": 0
    },
    "declarationKind": "export",
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "type",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/AutoModerationRule.ts",
            "line": 23,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "AutoModerationActionType",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "AutoModerationActionType"
            }
          },
          "typeParams": []
        },
        {
          "name": "metadata",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/AutoModerationRule.ts",
            "line": 24,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "ActionMetadata",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "ActionMetadata"
            }
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "class",
    "name": "AutoModerationRule",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/AutoModerationRule.ts",
      "line": 27,
      "col": 0
    },
    "declarationKind": "export",
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "session",
              "optional": false,
              "tsType": {
                "repr": "Session",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Session"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "data",
              "optional": false,
              "tsType": {
                "repr": "DiscordAutoModerationRule",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "DiscordAutoModerationRule"
                }
              }
            }
          ],
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/AutoModerationRule.ts",
            "line": 28,
            "col": 4
          }
        }
      ],
      "properties": [
        {
          "tsType": {
            "repr": "Session",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Session"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "session",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/AutoModerationRule.ts",
            "line": 53,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "Snowflake",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Snowflake"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/AutoModerationRule.ts",
            "line": 54,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "Snowflake",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Snowflake"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "guildId",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/AutoModerationRule.ts",
            "line": 55,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "name",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/AutoModerationRule.ts",
            "line": 56,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "Snowflake",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Snowflake"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "creatorId",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/AutoModerationRule.ts",
            "line": 57,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "AutoModerationEventTypes",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "AutoModerationEventTypes"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "eventType",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/AutoModerationRule.ts",
            "line": 58,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "AutoModerationTriggerTypes",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "AutoModerationTriggerTypes"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "triggerType",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/AutoModerationRule.ts",
            "line": 59,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "AutoModerationRuleTriggerMetadata",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "AutoModerationRuleTriggerMetadata"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "triggerMetadata",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/AutoModerationRule.ts",
            "line": 60,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "AutoModerationAction",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "AutoModerationAction"
              }
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "actions",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/AutoModerationRule.ts",
            "line": 61,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "enabled",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/AutoModerationRule.ts",
            "line": 62,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "Snowflake",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "Snowflake"
              }
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "exemptRoles",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/AutoModerationRule.ts",
            "line": 63,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "Snowflake",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "Snowflake"
              }
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "exemptChannels",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/AutoModerationRule.ts",
            "line": 64,
            "col": 4
          }
        }
      ],
      "indexSignatures": [],
      "methods": [],
      "extends": null,
      "implements": [
        {
          "repr": "Model",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "Model"
          }
        }
      ],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "import",
    "name": "AutoModerationActionType",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/AutoModerationRule.ts",
      "line": 1,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
      "imported": "AutoModerationActionType"
    }
  },
  {
    "kind": "import",
    "name": "AutoModerationEventTypes",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/AutoModerationRule.ts",
      "line": 1,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
      "imported": "AutoModerationEventTypes"
    }
  },
  {
    "kind": "import",
    "name": "AutoModerationTriggerTypes",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/AutoModerationRule.ts",
      "line": 1,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
      "imported": "AutoModerationTriggerTypes"
    }
  },
  {
    "kind": "import",
    "name": "DiscordAutoModerationRule",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/AutoModerationRule.ts",
      "line": 1,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
      "imported": "DiscordAutoModerationRule"
    }
  },
  {
    "kind": "import",
    "name": "DiscordAutoModerationRuleTriggerMetadataPresets",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/AutoModerationRule.ts",
      "line": 1,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
      "imported": "DiscordAutoModerationRuleTriggerMetadataPresets"
    }
  },
  {
    "kind": "import",
    "name": "Model",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/AutoModerationRule.ts",
      "line": 8,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/structures/Base.ts",
      "imported": "Model"
    }
  },
  {
    "kind": "import",
    "name": "Session",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/AutoModerationRule.ts",
      "line": 9,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/Session.ts",
      "imported": "Session"
    }
  },
  {
    "kind": "import",
    "name": "Snowflake",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/AutoModerationRule.ts",
      "line": 10,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/Snowflake.ts",
      "imported": "Snowflake"
    }
  },
  {
    "kind": "interface",
    "name": "InviteStageInstance",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Invite.ts",
      "line": 21,
      "col": 0
    },
    "declarationKind": "export",
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "members",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Invite.ts",
            "line": 23,
            "col": 4
          },
          "jsDoc": {
            "doc": "The members speaking in the Stage"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "Partial",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "Member",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Member"
                    }
                  }
                ],
                "typeName": "Partial"
              }
            }
          },
          "typeParams": []
        },
        {
          "name": "participantCount",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Invite.ts",
            "line": 25,
            "col": 4
          },
          "jsDoc": {
            "doc": "The number of users in the Stage"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "speakerCount",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Invite.ts",
            "line": 27,
            "col": 4
          },
          "jsDoc": {
            "doc": "The number of users speaking in the Stage"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "topic",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Invite.ts",
            "line": 29,
            "col": 4
          },
          "jsDoc": {
            "doc": "The topic of the Stage instance (1-120 characters)"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "InviteScheduledEvent",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Invite.ts",
      "line": 32,
      "col": 0
    },
    "declarationKind": "export",
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Invite.ts",
            "line": 33,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "Snowflake",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Snowflake"
            }
          },
          "typeParams": []
        },
        {
          "name": "guildId",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Invite.ts",
            "line": 34,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "channelId",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Invite.ts",
            "line": 35,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "creatorId",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Invite.ts",
            "line": 36,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "name",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Invite.ts",
            "line": 37,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "description",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Invite.ts",
            "line": 38,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "scheduledStartTime",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Invite.ts",
            "line": 39,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "scheduledEndTime",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Invite.ts",
            "line": 40,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "privacyLevel",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Invite.ts",
            "line": 41,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "ScheduledEventPrivacyLevel",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "ScheduledEventPrivacyLevel"
            }
          },
          "typeParams": []
        },
        {
          "name": "status",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Invite.ts",
            "line": 42,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "ScheduledEventStatus",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "ScheduledEventStatus"
            }
          },
          "typeParams": []
        },
        {
          "name": "entityType",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Invite.ts",
            "line": 43,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "ScheduledEventEntityType",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "ScheduledEventEntityType"
            }
          },
          "typeParams": []
        },
        {
          "name": "entityId",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Invite.ts",
            "line": 44,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "entityMetadata",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Invite.ts",
            "line": 45,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "DiscordScheduledEventEntityMetadata",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "DiscordScheduledEventEntityMetadata"
            }
          },
          "typeParams": []
        },
        {
          "name": "creator",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Invite.ts",
            "line": 46,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "User",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "User"
            }
          },
          "typeParams": []
        },
        {
          "name": "userCount",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Invite.ts",
            "line": 47,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "image",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Invite.ts",
            "line": 48,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "InviteCreate",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Invite.ts",
      "line": 51,
      "col": 0
    },
    "declarationKind": "export",
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "channelId",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Invite.ts",
            "line": 52,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "code",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Invite.ts",
            "line": 53,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "createdAt",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Invite.ts",
            "line": 54,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "guildId",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Invite.ts",
            "line": 55,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "inviter",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Invite.ts",
            "line": 56,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "User",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "User"
            }
          },
          "typeParams": []
        },
        {
          "name": "maxAge",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Invite.ts",
            "line": 57,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "maxUses",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Invite.ts",
            "line": 58,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "targetType",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Invite.ts",
            "line": 59,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "TargetTypes",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "TargetTypes"
            }
          },
          "typeParams": []
        },
        {
          "name": "targetUser",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Invite.ts",
            "line": 60,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "User",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "User"
            }
          },
          "typeParams": []
        },
        {
          "name": "targetApplication",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Invite.ts",
            "line": 61,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "Partial",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": [
                {
                  "repr": "Application",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Application"
                  }
                }
              ],
              "typeName": "Partial"
            }
          },
          "typeParams": []
        },
        {
          "name": "temporary",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Invite.ts",
            "line": 62,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        },
        {
          "name": "uses",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Invite.ts",
            "line": 63,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "function",
    "name": "NewInviteCreate",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Invite.ts",
      "line": 66,
      "col": 0
    },
    "declarationKind": "export",
    "functionDef": {
      "params": [
        {
          "kind": "identifier",
          "name": "session",
          "optional": false,
          "tsType": {
            "repr": "Session",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Session"
            }
          }
        },
        {
          "kind": "identifier",
          "name": "invite",
          "optional": false,
          "tsType": {
            "repr": "DiscordInviteCreate",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "DiscordInviteCreate"
            }
          }
        }
      ],
      "returnType": {
        "repr": "InviteCreate",
        "kind": "typeRef",
        "typeRef": {
          "typeParams": null,
          "typeName": "InviteCreate"
        }
      },
      "isAsync": false,
      "isGenerator": false,
      "typeParams": []
    }
  },
  {
    "kind": "class",
    "name": "Invite",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Invite.ts",
      "line": 88,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "tags": [
        {
          "kind": "unsupported",
          "value": "@link https://discord.com/developers/docs/resources/invite#invite-object"
        }
      ]
    },
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "session",
              "optional": false,
              "tsType": {
                "repr": "Session",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Session"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "data",
              "optional": false,
              "tsType": {
                "repr": "DiscordInvite",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "DiscordInvite"
                }
              }
            }
          ],
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Invite.ts",
            "line": 89,
            "col": 4
          }
        }
      ],
      "properties": [
        {
          "tsType": {
            "repr": "Session",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Session"
            }
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "session",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Invite.ts",
            "line": 151,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "InviteGuild",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "InviteGuild"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "guild",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Invite.ts",
            "line": 152,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "approximateMemberCount",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Invite.ts",
            "line": 153,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "approximatePresenceCount",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Invite.ts",
            "line": 154,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "code",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Invite.ts",
            "line": 155,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "expiresAt",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Invite.ts",
            "line": 156,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "User",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "User"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "inviter",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Invite.ts",
            "line": 157,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "User",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "User"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "targetUser",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Invite.ts",
            "line": 158,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "TargetTypes",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "TargetTypes"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "targetType",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Invite.ts",
            "line": 159,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "Partial",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": [
                {
                  "repr": "GuildChannel",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "GuildChannel"
                  }
                }
              ],
              "typeName": "Partial"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "channel",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Invite.ts",
            "line": 160,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "InviteStageInstance",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "InviteStageInstance"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "stageInstance",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Invite.ts",
            "line": 161,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "InviteScheduledEvent",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "InviteScheduledEvent"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "guildScheduledEvent",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Invite.ts",
            "line": 162,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "Partial",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": [
                {
                  "repr": "Application",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Application"
                  }
                }
              ],
              "typeName": "Partial"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "targetApplication",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Invite.ts",
            "line": 163,
            "col": 4
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "delete",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "Invite",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Invite"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Invite.ts",
            "line": 165,
            "col": 4
          }
        }
      ],
      "extends": null,
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "class",
    "name": "default",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Invite.ts",
      "line": 88,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "tags": [
        {
          "kind": "unsupported",
          "value": "@link https://discord.com/developers/docs/resources/invite#invite-object"
        }
      ]
    },
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "session",
              "optional": false,
              "tsType": {
                "repr": "Session",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Session"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "data",
              "optional": false,
              "tsType": {
                "repr": "DiscordInvite",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "DiscordInvite"
                }
              }
            }
          ],
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Invite.ts",
            "line": 89,
            "col": 4
          }
        }
      ],
      "properties": [
        {
          "tsType": {
            "repr": "Session",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Session"
            }
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "session",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Invite.ts",
            "line": 151,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "InviteGuild",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "InviteGuild"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "guild",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Invite.ts",
            "line": 152,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "approximateMemberCount",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Invite.ts",
            "line": 153,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "approximatePresenceCount",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Invite.ts",
            "line": 154,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "code",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Invite.ts",
            "line": 155,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "expiresAt",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Invite.ts",
            "line": 156,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "User",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "User"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "inviter",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Invite.ts",
            "line": 157,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "User",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "User"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "targetUser",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Invite.ts",
            "line": 158,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "TargetTypes",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "TargetTypes"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "targetType",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Invite.ts",
            "line": 159,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "Partial",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": [
                {
                  "repr": "GuildChannel",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "GuildChannel"
                  }
                }
              ],
              "typeName": "Partial"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "channel",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Invite.ts",
            "line": 160,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "InviteStageInstance",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "InviteStageInstance"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "stageInstance",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Invite.ts",
            "line": 161,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "InviteScheduledEvent",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "InviteScheduledEvent"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "guildScheduledEvent",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Invite.ts",
            "line": 162,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "Partial",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": [
                {
                  "repr": "Application",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Application"
                  }
                }
              ],
              "typeName": "Partial"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "targetApplication",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Invite.ts",
            "line": 163,
            "col": 4
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "delete",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "Invite",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Invite"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Invite.ts",
            "line": 165,
            "col": 4
          }
        }
      ],
      "extends": null,
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "import",
    "name": "Session",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Invite.ts",
      "line": 1,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/Session.ts",
      "imported": "Session"
    }
  },
  {
    "kind": "import",
    "name": "Snowflake",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Invite.ts",
      "line": 2,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/Snowflake.ts",
      "imported": "Snowflake"
    }
  },
  {
    "kind": "import",
    "name": "DiscordApplication",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Invite.ts",
      "line": 3,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
      "imported": "DiscordApplication"
    }
  },
  {
    "kind": "import",
    "name": "DiscordChannel",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Invite.ts",
      "line": 3,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
      "imported": "DiscordChannel"
    }
  },
  {
    "kind": "import",
    "name": "DiscordInvite",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Invite.ts",
      "line": 3,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
      "imported": "DiscordInvite"
    }
  },
  {
    "kind": "import",
    "name": "DiscordInviteCreate",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Invite.ts",
      "line": 3,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
      "imported": "DiscordInviteCreate"
    }
  },
  {
    "kind": "import",
    "name": "DiscordMemberWithUser",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Invite.ts",
      "line": 3,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
      "imported": "DiscordMemberWithUser"
    }
  },
  {
    "kind": "import",
    "name": "DiscordScheduledEventEntityMetadata",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Invite.ts",
      "line": 3,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
      "imported": "DiscordScheduledEventEntityMetadata"
    }
  },
  {
    "kind": "import",
    "name": "ScheduledEventEntityType",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Invite.ts",
      "line": 3,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
      "imported": "ScheduledEventEntityType"
    }
  },
  {
    "kind": "import",
    "name": "ScheduledEventPrivacyLevel",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Invite.ts",
      "line": 3,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
      "imported": "ScheduledEventPrivacyLevel"
    }
  },
  {
    "kind": "import",
    "name": "ScheduledEventStatus",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Invite.ts",
      "line": 3,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
      "imported": "ScheduledEventStatus"
    }
  },
  {
    "kind": "import",
    "name": "TargetTypes",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Invite.ts",
      "line": 14,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
      "imported": "TargetTypes"
    }
  },
  {
    "kind": "import",
    "name": "GuildChannel",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Invite.ts",
      "line": 15,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
      "imported": "GuildChannel"
    }
  },
  {
    "kind": "import",
    "name": "Member",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Invite.ts",
      "line": 16,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/structures/Member.ts",
      "imported": "Member"
    }
  },
  {
    "kind": "import",
    "name": "Guild",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Invite.ts",
      "line": 17,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
      "imported": "Guild"
    }
  },
  {
    "kind": "import",
    "name": "InviteGuild",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Invite.ts",
      "line": 17,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
      "imported": "InviteGuild"
    }
  },
  {
    "kind": "import",
    "name": "User",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Invite.ts",
      "line": 18,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/structures/User.ts",
      "imported": "default"
    }
  },
  {
    "kind": "import",
    "name": "Application",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Invite.ts",
      "line": 19,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/structures/Application.ts",
      "imported": "default"
    }
  },
  {
    "kind": "class",
    "name": "Member",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Member.ts",
      "line": 16,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "tags": [
        {
          "kind": "unsupported",
          "value": "@link https://discord.com/developers/docs/resources/guild#guild-member-object\nRepresents a guild member"
        }
      ]
    },
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "session",
              "optional": false,
              "tsType": {
                "repr": "Session",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Session"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "data",
              "optional": false,
              "tsType": {
                "repr": "DiscordMemberWithUser",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "DiscordMemberWithUser"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "guildId",
              "optional": false,
              "tsType": {
                "repr": "Snowflake",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Snowflake"
                }
              }
            }
          ],
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Member.ts",
            "line": 17,
            "col": 4
          }
        }
      ],
      "properties": [
        {
          "jsDoc": {
            "doc": "the session that instantiated this member"
          },
          "tsType": {
            "repr": "Session",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Session"
            }
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "session",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Member.ts",
            "line": 35,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "the user this guild member represents"
          },
          "tsType": {
            "repr": "User",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "User"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "user",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Member.ts",
            "line": 38,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "the choosen guild id"
          },
          "tsType": {
            "repr": "Snowflake",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Snowflake"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "guildId",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Member.ts",
            "line": 41,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "the member's guild avatar hash optimized as a bigint"
          },
          "tsType": {
            "repr": "bigint",
            "kind": "keyword",
            "keyword": "bigint"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "avatarHash",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Member.ts",
            "line": 44,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "this user's guild nickname"
          },
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "nickname",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Member.ts",
            "line": 47,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "when the user started boosting the guild"
          },
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "premiumSince",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Member.ts",
            "line": 50,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "when the user joined the guild"
          },
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "joinedTimestamp",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Member.ts",
            "line": 53,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "array of role object ids"
          },
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "Snowflake",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "Snowflake"
              }
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "roles",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Member.ts",
            "line": 56,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "whether the user is deafened in voice channels"
          },
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "deaf",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Member.ts",
            "line": 59,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "whether the user is muted in voice channels"
          },
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "mute",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Member.ts",
            "line": 62,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "whether the user has not yet passed the guild's Membership Screening requirements"
          },
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "pending",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Member.ts",
            "line": 65,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "when the user's timeout will expire and the user will be able to communicate in the guild again, null or a time in the past if the user is not timed out"
          },
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "communicationDisabledUntilTimestamp",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Member.ts",
            "line": 68,
            "col": 4
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "jsDoc": {
            "doc": "shorthand to User.id"
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "id",
          "kind": "getter",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "Snowflake",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "Snowflake"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Member.ts",
            "line": 71,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "gets the nickname or the username"
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "nicknameOrUsername",
          "kind": "getter",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Member.ts",
            "line": 76,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "gets the joinedAt timestamp as a Date"
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "joinedAt",
          "kind": "getter",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "Date",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "Date"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Member.ts",
            "line": 81,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "bans a member from this guild and delete previous messages sent by the member"
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "ban",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "options",
                "optional": false,
                "tsType": {
                  "repr": "CreateGuildBan",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "CreateGuildBan"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "Member",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Member"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Member.ts",
            "line": 86,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "kicks a member from this guild"
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "kick",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "options",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "typeLiteral",
                  "typeLiteral": {
                    "methods": [],
                    "properties": [
                      {
                        "name": "reason",
                        "params": [],
                        "computed": false,
                        "optional": true,
                        "tsType": {
                          "repr": "string",
                          "kind": "keyword",
                          "keyword": "string"
                        },
                        "typeParams": []
                      }
                    ],
                    "callSignatures": [],
                    "indexSignatures": []
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "Member",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Member"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Member.ts",
            "line": 93,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "unbans a member from this guild"
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "unban",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "void",
                    "kind": "keyword",
                    "keyword": "void"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Member.ts",
            "line": 100,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "edits member's nickname, roles, etc"
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "edit",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "options",
                "optional": false,
                "tsType": {
                  "repr": "ModifyGuildMember",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "ModifyGuildMember"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "Member",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Member"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Member.ts",
            "line": 105,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "adds a role to this member"
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "addRole",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "roleId",
                "optional": false,
                "tsType": {
                  "repr": "Snowflake",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Snowflake"
                  }
                }
              },
              {
                "kind": "assign",
                "left": {
                  "kind": "identifier",
                  "name": "options",
                  "optional": false,
                  "tsType": {
                    "repr": "",
                    "kind": "typeLiteral",
                    "typeLiteral": {
                      "methods": [],
                      "properties": [
                        {
                          "name": "reason",
                          "params": [],
                          "computed": false,
                          "optional": true,
                          "tsType": {
                            "repr": "string",
                            "kind": "keyword",
                            "keyword": "string"
                          },
                          "typeParams": []
                        }
                      ],
                      "callSignatures": [],
                      "indexSignatures": []
                    }
                  }
                },
                "right": "[UNSUPPORTED]",
                "tsType": null
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "void",
                    "kind": "keyword",
                    "keyword": "void"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Member.ts",
            "line": 116,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "removes a role from this member"
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "removeRole",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "roleId",
                "optional": false,
                "tsType": {
                  "repr": "Snowflake",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Snowflake"
                  }
                }
              },
              {
                "kind": "assign",
                "left": {
                  "kind": "identifier",
                  "name": "options",
                  "optional": false,
                  "tsType": {
                    "repr": "",
                    "kind": "typeLiteral",
                    "typeLiteral": {
                      "methods": [],
                      "properties": [
                        {
                          "name": "reason",
                          "params": [],
                          "computed": false,
                          "optional": true,
                          "tsType": {
                            "repr": "string",
                            "kind": "keyword",
                            "keyword": "string"
                          },
                          "typeParams": []
                        }
                      ],
                      "callSignatures": [],
                      "indexSignatures": []
                    }
                  }
                },
                "right": "[UNSUPPORTED]",
                "tsType": null
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "void",
                    "kind": "keyword",
                    "keyword": "void"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Member.ts",
            "line": 121,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "gets the members's guild avatar, not to be confused with Member.user.avatarURL()"
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "avatarURL",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "assign",
                "left": {
                  "kind": "identifier",
                  "name": "options",
                  "optional": false,
                  "tsType": {
                    "repr": "",
                    "kind": "typeLiteral",
                    "typeLiteral": {
                      "methods": [],
                      "properties": [
                        {
                          "name": "format",
                          "params": [],
                          "computed": false,
                          "optional": true,
                          "tsType": {
                            "repr": "ImageFormat",
                            "kind": "typeRef",
                            "typeRef": {
                              "typeParams": null,
                              "typeName": "ImageFormat"
                            }
                          },
                          "typeParams": []
                        },
                        {
                          "name": "size",
                          "params": [],
                          "computed": false,
                          "optional": true,
                          "tsType": {
                            "repr": "ImageSize",
                            "kind": "typeRef",
                            "typeRef": {
                              "typeParams": null,
                              "typeName": "ImageSize"
                            }
                          },
                          "typeParams": []
                        }
                      ],
                      "callSignatures": [],
                      "indexSignatures": []
                    }
                  }
                },
                "right": "[UNSUPPORTED]",
                "tsType": null
              }
            ],
            "returnType": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Member.ts",
            "line": 131,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "toString",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Member.ts",
            "line": 147,
            "col": 4
          }
        }
      ],
      "extends": null,
      "implements": [
        {
          "repr": "Model",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "Model"
          }
        }
      ],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "class",
    "name": "default",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Member.ts",
      "line": 16,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "tags": [
        {
          "kind": "unsupported",
          "value": "@link https://discord.com/developers/docs/resources/guild#guild-member-object\nRepresents a guild member"
        }
      ]
    },
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "session",
              "optional": false,
              "tsType": {
                "repr": "Session",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Session"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "data",
              "optional": false,
              "tsType": {
                "repr": "DiscordMemberWithUser",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "DiscordMemberWithUser"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "guildId",
              "optional": false,
              "tsType": {
                "repr": "Snowflake",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Snowflake"
                }
              }
            }
          ],
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Member.ts",
            "line": 17,
            "col": 4
          }
        }
      ],
      "properties": [
        {
          "jsDoc": {
            "doc": "the session that instantiated this member"
          },
          "tsType": {
            "repr": "Session",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Session"
            }
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "session",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Member.ts",
            "line": 35,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "the user this guild member represents"
          },
          "tsType": {
            "repr": "User",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "User"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "user",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Member.ts",
            "line": 38,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "the choosen guild id"
          },
          "tsType": {
            "repr": "Snowflake",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Snowflake"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "guildId",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Member.ts",
            "line": 41,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "the member's guild avatar hash optimized as a bigint"
          },
          "tsType": {
            "repr": "bigint",
            "kind": "keyword",
            "keyword": "bigint"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "avatarHash",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Member.ts",
            "line": 44,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "this user's guild nickname"
          },
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "nickname",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Member.ts",
            "line": 47,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "when the user started boosting the guild"
          },
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "premiumSince",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Member.ts",
            "line": 50,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "when the user joined the guild"
          },
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "joinedTimestamp",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Member.ts",
            "line": 53,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "array of role object ids"
          },
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "Snowflake",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "Snowflake"
              }
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "roles",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Member.ts",
            "line": 56,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "whether the user is deafened in voice channels"
          },
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "deaf",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Member.ts",
            "line": 59,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "whether the user is muted in voice channels"
          },
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "mute",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Member.ts",
            "line": 62,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "whether the user has not yet passed the guild's Membership Screening requirements"
          },
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "pending",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Member.ts",
            "line": 65,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "when the user's timeout will expire and the user will be able to communicate in the guild again, null or a time in the past if the user is not timed out"
          },
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "communicationDisabledUntilTimestamp",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Member.ts",
            "line": 68,
            "col": 4
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "jsDoc": {
            "doc": "shorthand to User.id"
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "id",
          "kind": "getter",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "Snowflake",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "Snowflake"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Member.ts",
            "line": 71,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "gets the nickname or the username"
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "nicknameOrUsername",
          "kind": "getter",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Member.ts",
            "line": 76,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "gets the joinedAt timestamp as a Date"
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "joinedAt",
          "kind": "getter",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "Date",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "Date"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Member.ts",
            "line": 81,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "bans a member from this guild and delete previous messages sent by the member"
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "ban",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "options",
                "optional": false,
                "tsType": {
                  "repr": "CreateGuildBan",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "CreateGuildBan"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "Member",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Member"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Member.ts",
            "line": 86,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "kicks a member from this guild"
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "kick",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "options",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "typeLiteral",
                  "typeLiteral": {
                    "methods": [],
                    "properties": [
                      {
                        "name": "reason",
                        "params": [],
                        "computed": false,
                        "optional": true,
                        "tsType": {
                          "repr": "string",
                          "kind": "keyword",
                          "keyword": "string"
                        },
                        "typeParams": []
                      }
                    ],
                    "callSignatures": [],
                    "indexSignatures": []
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "Member",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Member"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Member.ts",
            "line": 93,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "unbans a member from this guild"
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "unban",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "void",
                    "kind": "keyword",
                    "keyword": "void"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Member.ts",
            "line": 100,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "edits member's nickname, roles, etc"
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "edit",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "options",
                "optional": false,
                "tsType": {
                  "repr": "ModifyGuildMember",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "ModifyGuildMember"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "Member",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Member"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Member.ts",
            "line": 105,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "adds a role to this member"
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "addRole",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "roleId",
                "optional": false,
                "tsType": {
                  "repr": "Snowflake",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Snowflake"
                  }
                }
              },
              {
                "kind": "assign",
                "left": {
                  "kind": "identifier",
                  "name": "options",
                  "optional": false,
                  "tsType": {
                    "repr": "",
                    "kind": "typeLiteral",
                    "typeLiteral": {
                      "methods": [],
                      "properties": [
                        {
                          "name": "reason",
                          "params": [],
                          "computed": false,
                          "optional": true,
                          "tsType": {
                            "repr": "string",
                            "kind": "keyword",
                            "keyword": "string"
                          },
                          "typeParams": []
                        }
                      ],
                      "callSignatures": [],
                      "indexSignatures": []
                    }
                  }
                },
                "right": "[UNSUPPORTED]",
                "tsType": null
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "void",
                    "kind": "keyword",
                    "keyword": "void"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Member.ts",
            "line": 116,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "removes a role from this member"
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "removeRole",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "roleId",
                "optional": false,
                "tsType": {
                  "repr": "Snowflake",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Snowflake"
                  }
                }
              },
              {
                "kind": "assign",
                "left": {
                  "kind": "identifier",
                  "name": "options",
                  "optional": false,
                  "tsType": {
                    "repr": "",
                    "kind": "typeLiteral",
                    "typeLiteral": {
                      "methods": [],
                      "properties": [
                        {
                          "name": "reason",
                          "params": [],
                          "computed": false,
                          "optional": true,
                          "tsType": {
                            "repr": "string",
                            "kind": "keyword",
                            "keyword": "string"
                          },
                          "typeParams": []
                        }
                      ],
                      "callSignatures": [],
                      "indexSignatures": []
                    }
                  }
                },
                "right": "[UNSUPPORTED]",
                "tsType": null
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "void",
                    "kind": "keyword",
                    "keyword": "void"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Member.ts",
            "line": 121,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "gets the members's guild avatar, not to be confused with Member.user.avatarURL()"
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "avatarURL",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "assign",
                "left": {
                  "kind": "identifier",
                  "name": "options",
                  "optional": false,
                  "tsType": {
                    "repr": "",
                    "kind": "typeLiteral",
                    "typeLiteral": {
                      "methods": [],
                      "properties": [
                        {
                          "name": "format",
                          "params": [],
                          "computed": false,
                          "optional": true,
                          "tsType": {
                            "repr": "ImageFormat",
                            "kind": "typeRef",
                            "typeRef": {
                              "typeParams": null,
                              "typeName": "ImageFormat"
                            }
                          },
                          "typeParams": []
                        },
                        {
                          "name": "size",
                          "params": [],
                          "computed": false,
                          "optional": true,
                          "tsType": {
                            "repr": "ImageSize",
                            "kind": "typeRef",
                            "typeRef": {
                              "typeParams": null,
                              "typeName": "ImageSize"
                            }
                          },
                          "typeParams": []
                        }
                      ],
                      "callSignatures": [],
                      "indexSignatures": []
                    }
                  }
                },
                "right": "[UNSUPPORTED]",
                "tsType": null
              }
            ],
            "returnType": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Member.ts",
            "line": 131,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "toString",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Member.ts",
            "line": 147,
            "col": 4
          }
        }
      ],
      "extends": null,
      "implements": [
        {
          "repr": "Model",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "Model"
          }
        }
      ],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "import",
    "name": "Model",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Member.ts",
      "line": 1,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/structures/Base.ts",
      "imported": "Model"
    }
  },
  {
    "kind": "import",
    "name": "Snowflake",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Member.ts",
      "line": 2,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/Snowflake.ts",
      "imported": "Snowflake"
    }
  },
  {
    "kind": "import",
    "name": "Session",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Member.ts",
      "line": 3,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/Session.ts",
      "imported": "Session"
    }
  },
  {
    "kind": "import",
    "name": "DiscordMemberWithUser",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Member.ts",
      "line": 4,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
      "imported": "DiscordMemberWithUser"
    }
  },
  {
    "kind": "import",
    "name": "ImageFormat",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Member.ts",
      "line": 5,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/Util.ts",
      "imported": "ImageFormat"
    }
  },
  {
    "kind": "import",
    "name": "ImageSize",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Member.ts",
      "line": 5,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/Util.ts",
      "imported": "ImageSize"
    }
  },
  {
    "kind": "import",
    "name": "CreateGuildBan",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Member.ts",
      "line": 6,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
      "imported": "CreateGuildBan"
    }
  },
  {
    "kind": "import",
    "name": "ModifyGuildMember",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Member.ts",
      "line": 6,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
      "imported": "ModifyGuildMember"
    }
  },
  {
    "kind": "import",
    "name": "Guild",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Member.ts",
      "line": 7,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/structures/guilds.ts",
      "imported": "Guild"
    }
  },
  {
    "kind": "import",
    "name": "Util",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Member.ts",
      "line": 8,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/Util.ts",
      "imported": "default"
    }
  },
  {
    "kind": "import",
    "name": "User",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Member.ts",
      "line": 9,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/structures/User.ts",
      "imported": "default"
    }
  },
  {
    "kind": "import",
    "name": "Routes",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Member.ts",
      "line": 10,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/Routes.ts",
      "imported": null
    }
  },
  {
    "kind": "interface",
    "name": "Embed",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Embed.ts",
      "line": 3,
      "col": 0
    },
    "declarationKind": "export",
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "title",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Embed.ts",
            "line": 4,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "timestamp",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Embed.ts",
            "line": 5,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "type",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Embed.ts",
            "line": 6,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "EmbedTypes",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "EmbedTypes"
            }
          },
          "typeParams": []
        },
        {
          "name": "url",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Embed.ts",
            "line": 7,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "color",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Embed.ts",
            "line": 8,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "description",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Embed.ts",
            "line": 9,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "author",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Embed.ts",
            "line": 10,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "typeLiteral",
            "typeLiteral": {
              "methods": [],
              "properties": [
                {
                  "name": "name",
                  "params": [],
                  "computed": false,
                  "optional": false,
                  "tsType": {
                    "repr": "string",
                    "kind": "keyword",
                    "keyword": "string"
                  },
                  "typeParams": []
                },
                {
                  "name": "iconURL",
                  "params": [],
                  "computed": false,
                  "optional": true,
                  "tsType": {
                    "repr": "string",
                    "kind": "keyword",
                    "keyword": "string"
                  },
                  "typeParams": []
                },
                {
                  "name": "proxyIconURL",
                  "params": [],
                  "computed": false,
                  "optional": true,
                  "tsType": {
                    "repr": "string",
                    "kind": "keyword",
                    "keyword": "string"
                  },
                  "typeParams": []
                },
                {
                  "name": "url",
                  "params": [],
                  "computed": false,
                  "optional": true,
                  "tsType": {
                    "repr": "string",
                    "kind": "keyword",
                    "keyword": "string"
                  },
                  "typeParams": []
                }
              ],
              "callSignatures": [],
              "indexSignatures": []
            }
          },
          "typeParams": []
        },
        {
          "name": "footer",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Embed.ts",
            "line": 16,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "typeLiteral",
            "typeLiteral": {
              "methods": [],
              "properties": [
                {
                  "name": "text",
                  "params": [],
                  "computed": false,
                  "optional": false,
                  "tsType": {
                    "repr": "string",
                    "kind": "keyword",
                    "keyword": "string"
                  },
                  "typeParams": []
                },
                {
                  "name": "iconURL",
                  "params": [],
                  "computed": false,
                  "optional": true,
                  "tsType": {
                    "repr": "string",
                    "kind": "keyword",
                    "keyword": "string"
                  },
                  "typeParams": []
                },
                {
                  "name": "proxyIconURL",
                  "params": [],
                  "computed": false,
                  "optional": true,
                  "tsType": {
                    "repr": "string",
                    "kind": "keyword",
                    "keyword": "string"
                  },
                  "typeParams": []
                }
              ],
              "callSignatures": [],
              "indexSignatures": []
            }
          },
          "typeParams": []
        },
        {
          "name": "fields",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Embed.ts",
            "line": 21,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "Array",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": [
                {
                  "repr": "",
                  "kind": "typeLiteral",
                  "typeLiteral": {
                    "methods": [],
                    "properties": [
                      {
                        "name": "name",
                        "params": [],
                        "computed": false,
                        "optional": false,
                        "tsType": {
                          "repr": "string",
                          "kind": "keyword",
                          "keyword": "string"
                        },
                        "typeParams": []
                      },
                      {
                        "name": "value",
                        "params": [],
                        "computed": false,
                        "optional": false,
                        "tsType": {
                          "repr": "string",
                          "kind": "keyword",
                          "keyword": "string"
                        },
                        "typeParams": []
                      },
                      {
                        "name": "inline",
                        "params": [],
                        "computed": false,
                        "optional": true,
                        "tsType": {
                          "repr": "boolean",
                          "kind": "keyword",
                          "keyword": "boolean"
                        },
                        "typeParams": []
                      }
                    ],
                    "callSignatures": [],
                    "indexSignatures": []
                  }
                }
              ],
              "typeName": "Array"
            }
          },
          "typeParams": []
        },
        {
          "name": "thumbnail",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Embed.ts",
            "line": 26,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "typeLiteral",
            "typeLiteral": {
              "methods": [],
              "properties": [
                {
                  "name": "url",
                  "params": [],
                  "computed": false,
                  "optional": false,
                  "tsType": {
                    "repr": "string",
                    "kind": "keyword",
                    "keyword": "string"
                  },
                  "typeParams": []
                },
                {
                  "name": "proxyURL",
                  "params": [],
                  "computed": false,
                  "optional": true,
                  "tsType": {
                    "repr": "string",
                    "kind": "keyword",
                    "keyword": "string"
                  },
                  "typeParams": []
                },
                {
                  "name": "width",
                  "params": [],
                  "computed": false,
                  "optional": true,
                  "tsType": {
                    "repr": "number",
                    "kind": "keyword",
                    "keyword": "number"
                  },
                  "typeParams": []
                },
                {
                  "name": "height",
                  "params": [],
                  "computed": false,
                  "optional": true,
                  "tsType": {
                    "repr": "number",
                    "kind": "keyword",
                    "keyword": "number"
                  },
                  "typeParams": []
                }
              ],
              "callSignatures": [],
              "indexSignatures": []
            }
          },
          "typeParams": []
        },
        {
          "name": "video",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Embed.ts",
            "line": 32,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "typeLiteral",
            "typeLiteral": {
              "methods": [],
              "properties": [
                {
                  "name": "url",
                  "params": [],
                  "computed": false,
                  "optional": true,
                  "tsType": {
                    "repr": "string",
                    "kind": "keyword",
                    "keyword": "string"
                  },
                  "typeParams": []
                },
                {
                  "name": "proxyURL",
                  "params": [],
                  "computed": false,
                  "optional": true,
                  "tsType": {
                    "repr": "string",
                    "kind": "keyword",
                    "keyword": "string"
                  },
                  "typeParams": []
                },
                {
                  "name": "width",
                  "params": [],
                  "computed": false,
                  "optional": true,
                  "tsType": {
                    "repr": "number",
                    "kind": "keyword",
                    "keyword": "number"
                  },
                  "typeParams": []
                },
                {
                  "name": "height",
                  "params": [],
                  "computed": false,
                  "optional": true,
                  "tsType": {
                    "repr": "number",
                    "kind": "keyword",
                    "keyword": "number"
                  },
                  "typeParams": []
                }
              ],
              "callSignatures": [],
              "indexSignatures": []
            }
          },
          "typeParams": []
        },
        {
          "name": "image",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Embed.ts",
            "line": 38,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "typeLiteral",
            "typeLiteral": {
              "methods": [],
              "properties": [
                {
                  "name": "url",
                  "params": [],
                  "computed": false,
                  "optional": false,
                  "tsType": {
                    "repr": "string",
                    "kind": "keyword",
                    "keyword": "string"
                  },
                  "typeParams": []
                },
                {
                  "name": "proxyURL",
                  "params": [],
                  "computed": false,
                  "optional": true,
                  "tsType": {
                    "repr": "string",
                    "kind": "keyword",
                    "keyword": "string"
                  },
                  "typeParams": []
                },
                {
                  "name": "width",
                  "params": [],
                  "computed": false,
                  "optional": true,
                  "tsType": {
                    "repr": "number",
                    "kind": "keyword",
                    "keyword": "number"
                  },
                  "typeParams": []
                },
                {
                  "name": "height",
                  "params": [],
                  "computed": false,
                  "optional": true,
                  "tsType": {
                    "repr": "number",
                    "kind": "keyword",
                    "keyword": "number"
                  },
                  "typeParams": []
                }
              ],
              "callSignatures": [],
              "indexSignatures": []
            }
          },
          "typeParams": []
        },
        {
          "name": "provider",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Embed.ts",
            "line": 44,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "typeLiteral",
            "typeLiteral": {
              "methods": [],
              "properties": [
                {
                  "name": "url",
                  "params": [],
                  "computed": false,
                  "optional": true,
                  "tsType": {
                    "repr": "string",
                    "kind": "keyword",
                    "keyword": "string"
                  },
                  "typeParams": []
                },
                {
                  "name": "name",
                  "params": [],
                  "computed": false,
                  "optional": true,
                  "tsType": {
                    "repr": "string",
                    "kind": "keyword",
                    "keyword": "string"
                  },
                  "typeParams": []
                }
              ],
              "callSignatures": [],
              "indexSignatures": []
            }
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "function",
    "name": "embed",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Embed.ts",
      "line": 50,
      "col": 0
    },
    "declarationKind": "export",
    "functionDef": {
      "params": [
        {
          "kind": "identifier",
          "name": "data",
          "optional": false,
          "tsType": {
            "repr": "Embed",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Embed"
            }
          }
        }
      ],
      "returnType": {
        "repr": "DiscordEmbed",
        "kind": "typeRef",
        "typeRef": {
          "typeParams": null,
          "typeName": "DiscordEmbed"
        }
      },
      "isAsync": false,
      "isGenerator": false,
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "default",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Embed.ts",
      "line": 3,
      "col": 0
    },
    "declarationKind": "export",
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "title",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Embed.ts",
            "line": 4,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "timestamp",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Embed.ts",
            "line": 5,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "type",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Embed.ts",
            "line": 6,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "EmbedTypes",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "EmbedTypes"
            }
          },
          "typeParams": []
        },
        {
          "name": "url",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Embed.ts",
            "line": 7,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "color",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Embed.ts",
            "line": 8,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "description",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Embed.ts",
            "line": 9,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "author",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Embed.ts",
            "line": 10,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "typeLiteral",
            "typeLiteral": {
              "methods": [],
              "properties": [
                {
                  "name": "name",
                  "params": [],
                  "computed": false,
                  "optional": false,
                  "tsType": {
                    "repr": "string",
                    "kind": "keyword",
                    "keyword": "string"
                  },
                  "typeParams": []
                },
                {
                  "name": "iconURL",
                  "params": [],
                  "computed": false,
                  "optional": true,
                  "tsType": {
                    "repr": "string",
                    "kind": "keyword",
                    "keyword": "string"
                  },
                  "typeParams": []
                },
                {
                  "name": "proxyIconURL",
                  "params": [],
                  "computed": false,
                  "optional": true,
                  "tsType": {
                    "repr": "string",
                    "kind": "keyword",
                    "keyword": "string"
                  },
                  "typeParams": []
                },
                {
                  "name": "url",
                  "params": [],
                  "computed": false,
                  "optional": true,
                  "tsType": {
                    "repr": "string",
                    "kind": "keyword",
                    "keyword": "string"
                  },
                  "typeParams": []
                }
              ],
              "callSignatures": [],
              "indexSignatures": []
            }
          },
          "typeParams": []
        },
        {
          "name": "footer",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Embed.ts",
            "line": 16,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "typeLiteral",
            "typeLiteral": {
              "methods": [],
              "properties": [
                {
                  "name": "text",
                  "params": [],
                  "computed": false,
                  "optional": false,
                  "tsType": {
                    "repr": "string",
                    "kind": "keyword",
                    "keyword": "string"
                  },
                  "typeParams": []
                },
                {
                  "name": "iconURL",
                  "params": [],
                  "computed": false,
                  "optional": true,
                  "tsType": {
                    "repr": "string",
                    "kind": "keyword",
                    "keyword": "string"
                  },
                  "typeParams": []
                },
                {
                  "name": "proxyIconURL",
                  "params": [],
                  "computed": false,
                  "optional": true,
                  "tsType": {
                    "repr": "string",
                    "kind": "keyword",
                    "keyword": "string"
                  },
                  "typeParams": []
                }
              ],
              "callSignatures": [],
              "indexSignatures": []
            }
          },
          "typeParams": []
        },
        {
          "name": "fields",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Embed.ts",
            "line": 21,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "Array",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": [
                {
                  "repr": "",
                  "kind": "typeLiteral",
                  "typeLiteral": {
                    "methods": [],
                    "properties": [
                      {
                        "name": "name",
                        "params": [],
                        "computed": false,
                        "optional": false,
                        "tsType": {
                          "repr": "string",
                          "kind": "keyword",
                          "keyword": "string"
                        },
                        "typeParams": []
                      },
                      {
                        "name": "value",
                        "params": [],
                        "computed": false,
                        "optional": false,
                        "tsType": {
                          "repr": "string",
                          "kind": "keyword",
                          "keyword": "string"
                        },
                        "typeParams": []
                      },
                      {
                        "name": "inline",
                        "params": [],
                        "computed": false,
                        "optional": true,
                        "tsType": {
                          "repr": "boolean",
                          "kind": "keyword",
                          "keyword": "boolean"
                        },
                        "typeParams": []
                      }
                    ],
                    "callSignatures": [],
                    "indexSignatures": []
                  }
                }
              ],
              "typeName": "Array"
            }
          },
          "typeParams": []
        },
        {
          "name": "thumbnail",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Embed.ts",
            "line": 26,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "typeLiteral",
            "typeLiteral": {
              "methods": [],
              "properties": [
                {
                  "name": "url",
                  "params": [],
                  "computed": false,
                  "optional": false,
                  "tsType": {
                    "repr": "string",
                    "kind": "keyword",
                    "keyword": "string"
                  },
                  "typeParams": []
                },
                {
                  "name": "proxyURL",
                  "params": [],
                  "computed": false,
                  "optional": true,
                  "tsType": {
                    "repr": "string",
                    "kind": "keyword",
                    "keyword": "string"
                  },
                  "typeParams": []
                },
                {
                  "name": "width",
                  "params": [],
                  "computed": false,
                  "optional": true,
                  "tsType": {
                    "repr": "number",
                    "kind": "keyword",
                    "keyword": "number"
                  },
                  "typeParams": []
                },
                {
                  "name": "height",
                  "params": [],
                  "computed": false,
                  "optional": true,
                  "tsType": {
                    "repr": "number",
                    "kind": "keyword",
                    "keyword": "number"
                  },
                  "typeParams": []
                }
              ],
              "callSignatures": [],
              "indexSignatures": []
            }
          },
          "typeParams": []
        },
        {
          "name": "video",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Embed.ts",
            "line": 32,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "typeLiteral",
            "typeLiteral": {
              "methods": [],
              "properties": [
                {
                  "name": "url",
                  "params": [],
                  "computed": false,
                  "optional": true,
                  "tsType": {
                    "repr": "string",
                    "kind": "keyword",
                    "keyword": "string"
                  },
                  "typeParams": []
                },
                {
                  "name": "proxyURL",
                  "params": [],
                  "computed": false,
                  "optional": true,
                  "tsType": {
                    "repr": "string",
                    "kind": "keyword",
                    "keyword": "string"
                  },
                  "typeParams": []
                },
                {
                  "name": "width",
                  "params": [],
                  "computed": false,
                  "optional": true,
                  "tsType": {
                    "repr": "number",
                    "kind": "keyword",
                    "keyword": "number"
                  },
                  "typeParams": []
                },
                {
                  "name": "height",
                  "params": [],
                  "computed": false,
                  "optional": true,
                  "tsType": {
                    "repr": "number",
                    "kind": "keyword",
                    "keyword": "number"
                  },
                  "typeParams": []
                }
              ],
              "callSignatures": [],
              "indexSignatures": []
            }
          },
          "typeParams": []
        },
        {
          "name": "image",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Embed.ts",
            "line": 38,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "typeLiteral",
            "typeLiteral": {
              "methods": [],
              "properties": [
                {
                  "name": "url",
                  "params": [],
                  "computed": false,
                  "optional": false,
                  "tsType": {
                    "repr": "string",
                    "kind": "keyword",
                    "keyword": "string"
                  },
                  "typeParams": []
                },
                {
                  "name": "proxyURL",
                  "params": [],
                  "computed": false,
                  "optional": true,
                  "tsType": {
                    "repr": "string",
                    "kind": "keyword",
                    "keyword": "string"
                  },
                  "typeParams": []
                },
                {
                  "name": "width",
                  "params": [],
                  "computed": false,
                  "optional": true,
                  "tsType": {
                    "repr": "number",
                    "kind": "keyword",
                    "keyword": "number"
                  },
                  "typeParams": []
                },
                {
                  "name": "height",
                  "params": [],
                  "computed": false,
                  "optional": true,
                  "tsType": {
                    "repr": "number",
                    "kind": "keyword",
                    "keyword": "number"
                  },
                  "typeParams": []
                }
              ],
              "callSignatures": [],
              "indexSignatures": []
            }
          },
          "typeParams": []
        },
        {
          "name": "provider",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Embed.ts",
            "line": 44,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "typeLiteral",
            "typeLiteral": {
              "methods": [],
              "properties": [
                {
                  "name": "url",
                  "params": [],
                  "computed": false,
                  "optional": true,
                  "tsType": {
                    "repr": "string",
                    "kind": "keyword",
                    "keyword": "string"
                  },
                  "typeParams": []
                },
                {
                  "name": "name",
                  "params": [],
                  "computed": false,
                  "optional": true,
                  "tsType": {
                    "repr": "string",
                    "kind": "keyword",
                    "keyword": "string"
                  },
                  "typeParams": []
                }
              ],
              "callSignatures": [],
              "indexSignatures": []
            }
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "import",
    "name": "DiscordEmbed",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Embed.ts",
      "line": 1,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
      "imported": "DiscordEmbed"
    }
  },
  {
    "kind": "import",
    "name": "EmbedTypes",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Embed.ts",
      "line": 1,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
      "imported": "EmbedTypes"
    }
  },
  {
    "kind": "class",
    "name": "User",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/User.ts",
      "line": 13,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "tags": [
        {
          "kind": "unsupported",
          "value": "@link https://discord.com/developers/docs/resources/user#user-object\nRepresents a user"
        }
      ]
    },
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "session",
              "optional": false,
              "tsType": {
                "repr": "Session",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Session"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "data",
              "optional": false,
              "tsType": {
                "repr": "DiscordUser",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "DiscordUser"
                }
              }
            }
          ],
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/User.ts",
            "line": 14,
            "col": 4
          }
        }
      ],
      "properties": [
        {
          "jsDoc": {
            "doc": "the session that instantiated this User"
          },
          "tsType": {
            "repr": "Session",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Session"
            }
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "session",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/User.ts",
            "line": 33,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "the user's id"
          },
          "tsType": {
            "repr": "Snowflake",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Snowflake"
            }
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/User.ts",
            "line": 36,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "the user's username, not unique across the platform"
          },
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "username",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/User.ts",
            "line": 39,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "the user's 4-digit discord-tag"
          },
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "discriminator",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/User.ts",
            "line": 42,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "the user's avatar hash optimized as a bigint"
          },
          "tsType": {
            "repr": "bigint",
            "kind": "keyword",
            "keyword": "bigint"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "avatarHash",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/User.ts",
            "line": 45,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "the user's banner color encoded as an integer representation of hexadecimal color code"
          },
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "accentColor",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/User.ts",
            "line": 48,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "whether the user belongs to an OAuth2 application"
          },
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "bot",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/User.ts",
            "line": 51,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "whether the user is an Official Discord System user (part of the urgent message system)"
          },
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "system",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/User.ts",
            "line": 54,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "the user's banner hash optimized as a bigint"
          },
          "tsType": {
            "repr": "bigint",
            "kind": "keyword",
            "keyword": "bigint"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "banner",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/User.ts",
            "line": 57,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "whether the user has two factor enabled on their account"
          },
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "mfaEnabled",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/User.ts",
            "line": 60,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "the user's chosen language option"
          },
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "locale",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/User.ts",
            "line": 63,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "the user's email"
          },
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "email",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/User.ts",
            "line": 66,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "the flags on a user's account"
          },
          "tsType": {
            "repr": "UserFlags",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "UserFlags"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "flags",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/User.ts",
            "line": 69,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "whether the email on this account has been verified"
          },
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "verified",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/User.ts",
            "line": 72,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "the type of Nitro subscription on a user's account"
          },
          "tsType": {
            "repr": "PremiumTypes",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "PremiumTypes"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "premiumType",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/User.ts",
            "line": 75,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "the public flags on a user's account"
          },
          "tsType": {
            "repr": "UserFlags",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "UserFlags"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "publicFlags",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/User.ts",
            "line": 78,
            "col": 4
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "jsDoc": {
            "doc": "gets the user's username#discriminator"
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "tag",
          "kind": "getter",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/User.ts",
            "line": 81,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "fetches this user"
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "fetch",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": null,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/User.ts",
            "line": 86,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "gets the user's avatar"
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "avatarURL",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "assign",
                "left": {
                  "kind": "identifier",
                  "name": "options",
                  "optional": false,
                  "tsType": {
                    "repr": "",
                    "kind": "typeLiteral",
                    "typeLiteral": {
                      "methods": [],
                      "properties": [
                        {
                          "name": "format",
                          "params": [],
                          "computed": false,
                          "optional": true,
                          "tsType": {
                            "repr": "ImageFormat",
                            "kind": "typeRef",
                            "typeRef": {
                              "typeParams": null,
                              "typeName": "ImageFormat"
                            }
                          },
                          "typeParams": []
                        },
                        {
                          "name": "size",
                          "params": [],
                          "computed": false,
                          "optional": true,
                          "tsType": {
                            "repr": "ImageSize",
                            "kind": "typeRef",
                            "typeRef": {
                              "typeParams": null,
                              "typeName": "ImageSize"
                            }
                          },
                          "typeParams": []
                        }
                      ],
                      "callSignatures": [],
                      "indexSignatures": []
                    }
                  }
                },
                "right": "[UNSUPPORTED]",
                "tsType": null
              }
            ],
            "returnType": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/User.ts",
            "line": 91,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "toString",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/User.ts",
            "line": 103,
            "col": 4
          }
        }
      ],
      "extends": null,
      "implements": [
        {
          "repr": "Model",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "Model"
          }
        }
      ],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "class",
    "name": "default",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/User.ts",
      "line": 13,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "tags": [
        {
          "kind": "unsupported",
          "value": "@link https://discord.com/developers/docs/resources/user#user-object\nRepresents a user"
        }
      ]
    },
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "session",
              "optional": false,
              "tsType": {
                "repr": "Session",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Session"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "data",
              "optional": false,
              "tsType": {
                "repr": "DiscordUser",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "DiscordUser"
                }
              }
            }
          ],
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/User.ts",
            "line": 14,
            "col": 4
          }
        }
      ],
      "properties": [
        {
          "jsDoc": {
            "doc": "the session that instantiated this User"
          },
          "tsType": {
            "repr": "Session",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Session"
            }
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "session",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/User.ts",
            "line": 33,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "the user's id"
          },
          "tsType": {
            "repr": "Snowflake",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Snowflake"
            }
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/User.ts",
            "line": 36,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "the user's username, not unique across the platform"
          },
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "username",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/User.ts",
            "line": 39,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "the user's 4-digit discord-tag"
          },
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "discriminator",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/User.ts",
            "line": 42,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "the user's avatar hash optimized as a bigint"
          },
          "tsType": {
            "repr": "bigint",
            "kind": "keyword",
            "keyword": "bigint"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "avatarHash",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/User.ts",
            "line": 45,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "the user's banner color encoded as an integer representation of hexadecimal color code"
          },
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "accentColor",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/User.ts",
            "line": 48,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "whether the user belongs to an OAuth2 application"
          },
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "bot",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/User.ts",
            "line": 51,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "whether the user is an Official Discord System user (part of the urgent message system)"
          },
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "system",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/User.ts",
            "line": 54,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "the user's banner hash optimized as a bigint"
          },
          "tsType": {
            "repr": "bigint",
            "kind": "keyword",
            "keyword": "bigint"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "banner",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/User.ts",
            "line": 57,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "whether the user has two factor enabled on their account"
          },
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "mfaEnabled",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/User.ts",
            "line": 60,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "the user's chosen language option"
          },
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "locale",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/User.ts",
            "line": 63,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "the user's email"
          },
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "email",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/User.ts",
            "line": 66,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "the flags on a user's account"
          },
          "tsType": {
            "repr": "UserFlags",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "UserFlags"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "flags",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/User.ts",
            "line": 69,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "whether the email on this account has been verified"
          },
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "verified",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/User.ts",
            "line": 72,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "the type of Nitro subscription on a user's account"
          },
          "tsType": {
            "repr": "PremiumTypes",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "PremiumTypes"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "premiumType",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/User.ts",
            "line": 75,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "the public flags on a user's account"
          },
          "tsType": {
            "repr": "UserFlags",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "UserFlags"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "publicFlags",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/User.ts",
            "line": 78,
            "col": 4
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "jsDoc": {
            "doc": "gets the user's username#discriminator"
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "tag",
          "kind": "getter",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/User.ts",
            "line": 81,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "fetches this user"
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "fetch",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": null,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/User.ts",
            "line": 86,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "gets the user's avatar"
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "avatarURL",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "assign",
                "left": {
                  "kind": "identifier",
                  "name": "options",
                  "optional": false,
                  "tsType": {
                    "repr": "",
                    "kind": "typeLiteral",
                    "typeLiteral": {
                      "methods": [],
                      "properties": [
                        {
                          "name": "format",
                          "params": [],
                          "computed": false,
                          "optional": true,
                          "tsType": {
                            "repr": "ImageFormat",
                            "kind": "typeRef",
                            "typeRef": {
                              "typeParams": null,
                              "typeName": "ImageFormat"
                            }
                          },
                          "typeParams": []
                        },
                        {
                          "name": "size",
                          "params": [],
                          "computed": false,
                          "optional": true,
                          "tsType": {
                            "repr": "ImageSize",
                            "kind": "typeRef",
                            "typeRef": {
                              "typeParams": null,
                              "typeName": "ImageSize"
                            }
                          },
                          "typeParams": []
                        }
                      ],
                      "callSignatures": [],
                      "indexSignatures": []
                    }
                  }
                },
                "right": "[UNSUPPORTED]",
                "tsType": null
              }
            ],
            "returnType": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/User.ts",
            "line": 91,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "toString",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/User.ts",
            "line": 103,
            "col": 4
          }
        }
      ],
      "extends": null,
      "implements": [
        {
          "repr": "Model",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "Model"
          }
        }
      ],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "import",
    "name": "Model",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/User.ts",
      "line": 1,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/structures/Base.ts",
      "imported": "Model"
    }
  },
  {
    "kind": "import",
    "name": "Snowflake",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/User.ts",
      "line": 2,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/Snowflake.ts",
      "imported": "Snowflake"
    }
  },
  {
    "kind": "import",
    "name": "Session",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/User.ts",
      "line": 3,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/Session.ts",
      "imported": "Session"
    }
  },
  {
    "kind": "import",
    "name": "DiscordUser",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/User.ts",
      "line": 4,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
      "imported": "DiscordUser"
    }
  },
  {
    "kind": "import",
    "name": "PremiumTypes",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/User.ts",
      "line": 4,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
      "imported": "PremiumTypes"
    }
  },
  {
    "kind": "import",
    "name": "UserFlags",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/User.ts",
      "line": 4,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
      "imported": "UserFlags"
    }
  },
  {
    "kind": "import",
    "name": "ImageFormat",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/User.ts",
      "line": 5,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/Util.ts",
      "imported": "ImageFormat"
    }
  },
  {
    "kind": "import",
    "name": "ImageSize",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/User.ts",
      "line": 5,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/Util.ts",
      "imported": "ImageSize"
    }
  },
  {
    "kind": "import",
    "name": "Util",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/User.ts",
      "line": 6,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/Util.ts",
      "imported": "default"
    }
  },
  {
    "kind": "import",
    "name": "Routes",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/User.ts",
      "line": 7,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/Routes.ts",
      "imported": null
    }
  },
  {
    "kind": "interface",
    "name": "DiscordStageInstanceB",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/StageInstance.ts",
      "line": 7,
      "col": 0
    },
    "declarationKind": "export",
    "interfaceDef": {
      "extends": [
        {
          "repr": "DiscordAutoClosingStageInstance",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "DiscordAutoClosingStageInstance"
          }
        }
      ],
      "methods": [],
      "properties": [
        {
          "name": "privacy_level",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/StageInstance.ts",
            "line": 8,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "PrivacyLevels",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "PrivacyLevels"
            }
          },
          "typeParams": []
        },
        {
          "name": "discoverable_disabled",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/StageInstance.ts",
            "line": 9,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        },
        {
          "name": "guild_scheduled_event_id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/StageInstance.ts",
            "line": 10,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "Snowflake",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Snowflake"
            }
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "enum",
    "name": "PrivacyLevels",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/StageInstance.ts",
      "line": 13,
      "col": 0
    },
    "declarationKind": "export",
    "enumDef": {
      "members": [
        {
          "name": "Public",
          "init": {
            "repr": "1",
            "kind": "literal",
            "literal": {
              "kind": "number",
              "number": 1.0
            }
          }
        },
        {
          "name": "GuildOnly",
          "init": {
            "repr": "2",
            "kind": "literal",
            "literal": {
              "kind": "number",
              "number": 2.0
            }
          }
        }
      ]
    }
  },
  {
    "kind": "class",
    "name": "StageInstance",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/StageInstance.ts",
      "line": 18,
      "col": 0
    },
    "declarationKind": "export",
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "session",
              "optional": false,
              "tsType": {
                "repr": "Session",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Session"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "data",
              "optional": false,
              "tsType": {
                "repr": "DiscordStageInstanceB",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "DiscordStageInstanceB"
                }
              }
            }
          ],
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/StageInstance.ts",
            "line": 19,
            "col": 4
          }
        }
      ],
      "properties": [
        {
          "tsType": {
            "repr": "Session",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Session"
            }
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "session",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/StageInstance.ts",
            "line": 30,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "Snowflake",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Snowflake"
            }
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/StageInstance.ts",
            "line": 31,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "Snowflake",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Snowflake"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "channelId",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/StageInstance.ts",
            "line": 33,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "Snowflake",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Snowflake"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "guildId",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/StageInstance.ts",
            "line": 34,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "topic",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/StageInstance.ts",
            "line": 35,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "PrivacyLevels",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "PrivacyLevels"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "privacyLevel",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/StageInstance.ts",
            "line": 38,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "discoverableDisabled",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/StageInstance.ts",
            "line": 39,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "Snowflake",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Snowflake"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "guildScheduledEventId",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/StageInstance.ts",
            "line": 40,
            "col": 4
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "edit",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "options",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "typeLiteral",
                  "typeLiteral": {
                    "methods": [],
                    "properties": [
                      {
                        "name": "topic",
                        "params": [],
                        "computed": false,
                        "optional": true,
                        "tsType": {
                          "repr": "string",
                          "kind": "keyword",
                          "keyword": "string"
                        },
                        "typeParams": []
                      },
                      {
                        "name": "privacyLevel",
                        "params": [],
                        "computed": false,
                        "optional": true,
                        "tsType": {
                          "repr": "PrivacyLevels",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "PrivacyLevels"
                          }
                        },
                        "typeParams": []
                      }
                    ],
                    "callSignatures": [],
                    "indexSignatures": []
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "StageInstance",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "StageInstance"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/StageInstance.ts",
            "line": 42,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "delete",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "void",
                    "kind": "keyword",
                    "keyword": "void"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/StageInstance.ts",
            "line": 56,
            "col": 4
          }
        }
      ],
      "extends": null,
      "implements": [
        {
          "repr": "Model",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "Model"
          }
        }
      ],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "class",
    "name": "default",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/StageInstance.ts",
      "line": 18,
      "col": 0
    },
    "declarationKind": "export",
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "session",
              "optional": false,
              "tsType": {
                "repr": "Session",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Session"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "data",
              "optional": false,
              "tsType": {
                "repr": "DiscordStageInstanceB",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "DiscordStageInstanceB"
                }
              }
            }
          ],
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/StageInstance.ts",
            "line": 19,
            "col": 4
          }
        }
      ],
      "properties": [
        {
          "tsType": {
            "repr": "Session",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Session"
            }
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "session",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/StageInstance.ts",
            "line": 30,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "Snowflake",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Snowflake"
            }
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/StageInstance.ts",
            "line": 31,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "Snowflake",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Snowflake"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "channelId",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/StageInstance.ts",
            "line": 33,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "Snowflake",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Snowflake"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "guildId",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/StageInstance.ts",
            "line": 34,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "topic",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/StageInstance.ts",
            "line": 35,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "PrivacyLevels",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "PrivacyLevels"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "privacyLevel",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/StageInstance.ts",
            "line": 38,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "discoverableDisabled",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/StageInstance.ts",
            "line": 39,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "Snowflake",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Snowflake"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "guildScheduledEventId",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/StageInstance.ts",
            "line": 40,
            "col": 4
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "edit",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "options",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "typeLiteral",
                  "typeLiteral": {
                    "methods": [],
                    "properties": [
                      {
                        "name": "topic",
                        "params": [],
                        "computed": false,
                        "optional": true,
                        "tsType": {
                          "repr": "string",
                          "kind": "keyword",
                          "keyword": "string"
                        },
                        "typeParams": []
                      },
                      {
                        "name": "privacyLevel",
                        "params": [],
                        "computed": false,
                        "optional": true,
                        "tsType": {
                          "repr": "PrivacyLevels",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "PrivacyLevels"
                          }
                        },
                        "typeParams": []
                      }
                    ],
                    "callSignatures": [],
                    "indexSignatures": []
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "StageInstance",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "StageInstance"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/StageInstance.ts",
            "line": 42,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "delete",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "void",
                    "kind": "keyword",
                    "keyword": "void"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/StageInstance.ts",
            "line": 56,
            "col": 4
          }
        }
      ],
      "extends": null,
      "implements": [
        {
          "repr": "Model",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "Model"
          }
        }
      ],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "import",
    "name": "Model",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/StageInstance.ts",
      "line": 1,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/structures/Base.ts",
      "imported": "Model"
    }
  },
  {
    "kind": "import",
    "name": "Session",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/StageInstance.ts",
      "line": 2,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/Session.ts",
      "imported": "Session"
    }
  },
  {
    "kind": "import",
    "name": "Snowflake",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/StageInstance.ts",
      "line": 3,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/Snowflake.ts",
      "imported": "Snowflake"
    }
  },
  {
    "kind": "import",
    "name": "DiscordAutoClosingStageInstance",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/StageInstance.ts",
      "line": 4,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
      "imported": "DiscordStageInstance"
    }
  },
  {
    "kind": "import",
    "name": "Routes",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/StageInstance.ts",
      "line": 5,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/Routes.ts",
      "imported": null
    }
  },
  {
    "kind": "class",
    "name": "SelectMenu",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/SelectMenuComponent.ts",
      "line": 8,
      "col": 0
    },
    "declarationKind": "export",
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "session",
              "optional": false,
              "tsType": {
                "repr": "Session",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Session"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "data",
              "optional": false,
              "tsType": {
                "repr": "DiscordComponent",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "DiscordComponent"
                }
              }
            }
          ],
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/SelectMenuComponent.ts",
            "line": 9,
            "col": 4
          }
        }
      ],
      "properties": [
        {
          "tsType": {
            "repr": "Session",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Session"
            }
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "session",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/SelectMenuComponent.ts",
            "line": 29,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "MessageComponentTypes.SelectMenu",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "MessageComponentTypes.SelectMenu"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "type",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/SelectMenuComponent.ts",
            "line": 30,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "customId",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/SelectMenuComponent.ts",
            "line": 31,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "SelectMenuOption",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "SelectMenuOption"
              }
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "options",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/SelectMenuComponent.ts",
            "line": 32,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "placeholder",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/SelectMenuComponent.ts",
            "line": 33,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "minValues",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/SelectMenuComponent.ts",
            "line": 34,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "maxValues",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/SelectMenuComponent.ts",
            "line": 35,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "disabled",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/SelectMenuComponent.ts",
            "line": 36,
            "col": 4
          }
        }
      ],
      "indexSignatures": [],
      "methods": [],
      "extends": "BaseComponent",
      "implements": [
        {
          "repr": "SelectMenuComponent",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "SelectMenuComponent"
          }
        }
      ],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "class",
    "name": "default",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/SelectMenuComponent.ts",
      "line": 8,
      "col": 0
    },
    "declarationKind": "export",
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "session",
              "optional": false,
              "tsType": {
                "repr": "Session",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Session"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "data",
              "optional": false,
              "tsType": {
                "repr": "DiscordComponent",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "DiscordComponent"
                }
              }
            }
          ],
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/SelectMenuComponent.ts",
            "line": 9,
            "col": 4
          }
        }
      ],
      "properties": [
        {
          "tsType": {
            "repr": "Session",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Session"
            }
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "session",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/SelectMenuComponent.ts",
            "line": 29,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "MessageComponentTypes.SelectMenu",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "MessageComponentTypes.SelectMenu"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "type",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/SelectMenuComponent.ts",
            "line": 30,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "customId",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/SelectMenuComponent.ts",
            "line": 31,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "SelectMenuOption",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "SelectMenuOption"
              }
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "options",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/SelectMenuComponent.ts",
            "line": 32,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "placeholder",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/SelectMenuComponent.ts",
            "line": 33,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "minValues",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/SelectMenuComponent.ts",
            "line": 34,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "maxValues",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/SelectMenuComponent.ts",
            "line": 35,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "disabled",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/SelectMenuComponent.ts",
            "line": 36,
            "col": 4
          }
        }
      ],
      "indexSignatures": [],
      "methods": [],
      "extends": "BaseComponent",
      "implements": [
        {
          "repr": "SelectMenuComponent",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "SelectMenuComponent"
          }
        }
      ],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "import",
    "name": "Session",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/SelectMenuComponent.ts",
      "line": 1,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/Session.ts",
      "imported": "Session"
    }
  },
  {
    "kind": "import",
    "name": "DiscordComponent",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/SelectMenuComponent.ts",
      "line": 2,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
      "imported": "DiscordComponent"
    }
  },
  {
    "kind": "import",
    "name": "SelectMenuComponent",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/SelectMenuComponent.ts",
      "line": 3,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/Component.ts",
      "imported": "SelectMenuComponent"
    }
  },
  {
    "kind": "import",
    "name": "SelectMenuOption",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/SelectMenuComponent.ts",
      "line": 3,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/Component.ts",
      "imported": "SelectMenuOption"
    }
  },
  {
    "kind": "import",
    "name": "MessageComponentTypes",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/SelectMenuComponent.ts",
      "line": 4,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
      "imported": "MessageComponentTypes"
    }
  },
  {
    "kind": "import",
    "name": "BaseComponent",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/SelectMenuComponent.ts",
      "line": 5,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/Component.ts",
      "imported": "default"
    }
  },
  {
    "kind": "import",
    "name": "Emoji",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/SelectMenuComponent.ts",
      "line": 6,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/structures/Emoji.ts",
      "imported": "default"
    }
  },
  {
    "kind": "class",
    "name": "ActionRowBuilder",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/components/MessageActionRow.ts",
      "line": 4,
      "col": 0
    },
    "declarationKind": "export",
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "accessibility": null,
          "name": "constructor",
          "params": [],
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/components/MessageActionRow.ts",
            "line": 5,
            "col": 4
          }
        }
      ],
      "properties": [
        {
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "T",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "T"
              }
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "components",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/components/MessageActionRow.ts",
            "line": 9,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "MessageComponentTypes.ActionRow",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "MessageComponentTypes.ActionRow"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "type",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/components/MessageActionRow.ts",
            "line": 10,
            "col": 4
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "addComponents",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "rest",
                "arg": {
                  "kind": "identifier",
                  "name": "components",
                  "optional": false,
                  "tsType": null
                },
                "tsType": {
                  "repr": "",
                  "kind": "array",
                  "array": {
                    "repr": "T",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "T"
                    }
                  }
                }
              }
            ],
            "returnType": {
              "repr": "this",
              "kind": "this",
              "this": true
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/components/MessageActionRow.ts",
            "line": 12,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setComponents",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "rest",
                "arg": {
                  "kind": "identifier",
                  "name": "components",
                  "optional": false,
                  "tsType": null
                },
                "tsType": {
                  "repr": "",
                  "kind": "array",
                  "array": {
                    "repr": "T",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "T"
                    }
                  }
                }
              }
            ],
            "returnType": {
              "repr": "this",
              "kind": "this",
              "this": true
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/components/MessageActionRow.ts",
            "line": 17,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "toJSON",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "DiscordActionRow",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "DiscordActionRow"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/components/MessageActionRow.ts",
            "line": 26,
            "col": 4
          }
        }
      ],
      "extends": null,
      "implements": [],
      "typeParams": [
        {
          "name": "T",
          "constraint": {
            "repr": "ComponentBuilder",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "ComponentBuilder"
            }
          }
        }
      ],
      "superTypeParams": []
    }
  },
  {
    "kind": "import",
    "name": "DiscordActionRow",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/components/MessageActionRow.ts",
      "line": 1,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
      "imported": "DiscordActionRow"
    }
  },
  {
    "kind": "import",
    "name": "MessageComponentTypes",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/components/MessageActionRow.ts",
      "line": 1,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
      "imported": "MessageComponentTypes"
    }
  },
  {
    "kind": "import",
    "name": "ComponentBuilder",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/components/MessageActionRow.ts",
      "line": 2,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/Util.ts",
      "imported": "ComponentBuilder"
    }
  },
  {
    "kind": "interface",
    "name": "InteractionResponse",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/BaseInteraction.ts",
      "line": 24,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "tags": [
        {
          "kind": "unsupported",
          "value": "@link https://discord.com/developers/docs/interactions/slash-commands#interaction-response"
        }
      ]
    },
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "type",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/BaseInteraction.ts",
            "line": 25,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "InteractionResponseTypes",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "InteractionResponseTypes"
            }
          },
          "typeParams": []
        },
        {
          "name": "data",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/BaseInteraction.ts",
            "line": 26,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "InteractionApplicationCommandCallbackData",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "InteractionApplicationCommandCallbackData"
            }
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "InteractionApplicationCommandCallbackData",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/BaseInteraction.ts",
      "line": 32,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "tags": [
        {
          "kind": "unsupported",
          "value": "@link https://discord.com/developers/docs/interactions/slash-commands#interaction-response-interactionapplicationcommandcallbackdata"
        }
      ]
    },
    "interfaceDef": {
      "extends": [
        {
          "repr": "Pick",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": [
              {
                "repr": "CreateMessage",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "CreateMessage"
                }
              },
              {
                "repr": "",
                "kind": "union",
                "union": [
                  {
                    "repr": "allowedMentions",
                    "kind": "literal",
                    "literal": {
                      "kind": "string",
                      "string": "allowedMentions"
                    }
                  },
                  {
                    "repr": "content",
                    "kind": "literal",
                    "literal": {
                      "kind": "string",
                      "string": "content"
                    }
                  },
                  {
                    "repr": "embeds",
                    "kind": "literal",
                    "literal": {
                      "kind": "string",
                      "string": "embeds"
                    }
                  },
                  {
                    "repr": "files",
                    "kind": "literal",
                    "literal": {
                      "kind": "string",
                      "string": "files"
                    }
                  }
                ]
              }
            ],
            "typeName": "Pick"
          }
        }
      ],
      "methods": [],
      "properties": [
        {
          "name": "customId",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/BaseInteraction.ts",
            "line": 34,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "title",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/BaseInteraction.ts",
            "line": 35,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "components",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/BaseInteraction.ts",
            "line": 36,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "DiscordMessageComponents",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "DiscordMessageComponents"
            }
          },
          "typeParams": []
        },
        {
          "name": "flags",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/BaseInteraction.ts",
            "line": 37,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "MessageFlags",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "MessageFlags"
            }
          },
          "typeParams": []
        },
        {
          "name": "choices",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/BaseInteraction.ts",
            "line": 38,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "ApplicationCommandOptionChoice",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "ApplicationCommandOptionChoice"
              }
            }
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "ApplicationCommandOptionChoice",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/BaseInteraction.ts",
      "line": 44,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "tags": [
        {
          "kind": "unsupported",
          "value": "@link https://discord.com/developers/docs/interactions/slash-commands#applicationcommandoptionchoice"
        }
      ]
    },
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "name",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/BaseInteraction.ts",
            "line": 45,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "value",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/BaseInteraction.ts",
            "line": 46,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              },
              {
                "repr": "number",
                "kind": "keyword",
                "keyword": "number"
              }
            ]
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "class",
    "name": "BaseInteraction",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/BaseInteraction.ts",
      "line": 49,
      "col": 0
    },
    "declarationKind": "export",
    "classDef": {
      "isAbstract": true,
      "constructors": [
        {
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "session",
              "optional": false,
              "tsType": {
                "repr": "Session",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Session"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "data",
              "optional": false,
              "tsType": {
                "repr": "DiscordInteraction",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "DiscordInteraction"
                }
              }
            }
          ],
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/BaseInteraction.ts",
            "line": 50,
            "col": 4
          }
        }
      ],
      "properties": [
        {
          "tsType": {
            "repr": "Session",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Session"
            }
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "session",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/BaseInteraction.ts",
            "line": 74,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "Snowflake",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Snowflake"
            }
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/BaseInteraction.ts",
            "line": 75,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "token",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/BaseInteraction.ts",
            "line": 76,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "InteractionTypes",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "InteractionTypes"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "type",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/BaseInteraction.ts",
            "line": 78,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "Snowflake",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Snowflake"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "guildId",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/BaseInteraction.ts",
            "line": 79,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "Snowflake",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Snowflake"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "channelId",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/BaseInteraction.ts",
            "line": 80,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "Snowflake",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Snowflake"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "applicationId",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/BaseInteraction.ts",
            "line": 81,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "User",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "User"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "user",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/BaseInteraction.ts",
            "line": 82,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "Member",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Member"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "member",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/BaseInteraction.ts",
            "line": 83,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "Permsisions",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Permsisions"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "appPermissions",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/BaseInteraction.ts",
            "line": 84,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "1",
            "kind": "literal",
            "literal": {
              "kind": "number",
              "number": 1.0
            }
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "version",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/BaseInteraction.ts",
            "line": 86,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "responded",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/BaseInteraction.ts",
            "line": 88,
            "col": 4
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "createdTimestamp",
          "kind": "getter",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "number",
              "kind": "keyword",
              "keyword": "number"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/BaseInteraction.ts",
            "line": 90,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "createdAt",
          "kind": "getter",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "Date",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "Date"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/BaseInteraction.ts",
            "line": 94,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "isCommand",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "this is CommandInteraction",
              "kind": "typePredicate",
              "typePredicate": {
                "asserts": false,
                "param": {
                  "type": "this"
                },
                "type": {
                  "repr": "CommandInteraction",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "CommandInteraction"
                  }
                }
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/BaseInteraction.ts",
            "line": 98,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "isAutoComplete",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "this is AutoCompleteInteraction",
              "kind": "typePredicate",
              "typePredicate": {
                "asserts": false,
                "param": {
                  "type": "this"
                },
                "type": {
                  "repr": "AutoCompleteInteraction",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "AutoCompleteInteraction"
                  }
                }
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/BaseInteraction.ts",
            "line": 102,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "isComponent",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "this is ComponentInteraction",
              "kind": "typePredicate",
              "typePredicate": {
                "asserts": false,
                "param": {
                  "type": "this"
                },
                "type": {
                  "repr": "ComponentInteraction",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "ComponentInteraction"
                  }
                }
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/BaseInteraction.ts",
            "line": 106,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "isPing",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "this is PingInteraction",
              "kind": "typePredicate",
              "typePredicate": {
                "asserts": false,
                "param": {
                  "type": "this"
                },
                "type": {
                  "repr": "PingInteraction",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "PingInteraction"
                  }
                }
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/BaseInteraction.ts",
            "line": 110,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "isModalSubmit",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "this is ModalSubmitInteraction",
              "kind": "typePredicate",
              "typePredicate": {
                "asserts": false,
                "param": {
                  "type": "this"
                },
                "type": {
                  "repr": "ModalSubmitInteraction",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "ModalSubmitInteraction"
                  }
                }
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/BaseInteraction.ts",
            "line": 114,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "inGuild",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "this is this & { guildId: Snowflake; }",
              "kind": "typePredicate",
              "typePredicate": {
                "asserts": false,
                "param": {
                  "type": "this"
                },
                "type": {
                  "repr": "",
                  "kind": "intersection",
                  "intersection": [
                    {
                      "repr": "this",
                      "kind": "this",
                      "this": true
                    },
                    {
                      "repr": "",
                      "kind": "typeLiteral",
                      "typeLiteral": {
                        "methods": [],
                        "properties": [
                          {
                            "name": "guildId",
                            "params": [],
                            "computed": false,
                            "optional": false,
                            "tsType": {
                              "repr": "Snowflake",
                              "kind": "typeRef",
                              "typeRef": {
                                "typeParams": null,
                                "typeName": "Snowflake"
                              }
                            },
                            "typeParams": []
                          }
                        ],
                        "callSignatures": [],
                        "indexSignatures": []
                      }
                    }
                  ]
                }
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/BaseInteraction.ts",
            "line": 118,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "editReply",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "options",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "intersection",
                  "intersection": [
                    {
                      "repr": "EditWebhookMessage",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "EditWebhookMessage"
                      }
                    },
                    {
                      "repr": "",
                      "kind": "typeLiteral",
                      "typeLiteral": {
                        "methods": [],
                        "properties": [
                          {
                            "name": "messageId",
                            "params": [],
                            "computed": false,
                            "optional": true,
                            "tsType": {
                              "repr": "Snowflake",
                              "kind": "typeRef",
                              "typeRef": {
                                "typeParams": null,
                                "typeName": "Snowflake"
                              }
                            },
                            "typeParams": []
                          }
                        ],
                        "callSignatures": [],
                        "indexSignatures": []
                      }
                    }
                  ]
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "",
                    "kind": "union",
                    "union": [
                      {
                        "repr": "Message",
                        "kind": "typeRef",
                        "typeRef": {
                          "typeParams": null,
                          "typeName": "Message"
                        }
                      },
                      {
                        "repr": "undefined",
                        "kind": "keyword",
                        "keyword": "undefined"
                      }
                    ]
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/BaseInteraction.ts",
            "line": 124,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "sendFollowUp",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "options",
                "optional": false,
                "tsType": {
                  "repr": "InteractionApplicationCommandCallbackData",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "InteractionApplicationCommandCallbackData"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "Message",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Message"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/BaseInteraction.ts",
            "line": 165,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "editFollowUp",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "messageId",
                "optional": false,
                "tsType": {
                  "repr": "Snowflake",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Snowflake"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "options",
                "optional": true,
                "tsType": {
                  "repr": "",
                  "kind": "typeLiteral",
                  "typeLiteral": {
                    "methods": [],
                    "properties": [
                      {
                        "name": "threadId",
                        "params": [],
                        "computed": false,
                        "optional": false,
                        "tsType": {
                          "repr": "Snowflake",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "Snowflake"
                          }
                        },
                        "typeParams": []
                      }
                    ],
                    "callSignatures": [],
                    "indexSignatures": []
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "Message",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Message"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/BaseInteraction.ts",
            "line": 175,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "deleteFollowUp",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "messageId",
                "optional": false,
                "tsType": {
                  "repr": "Snowflake",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Snowflake"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "options",
                "optional": true,
                "tsType": {
                  "repr": "",
                  "kind": "typeLiteral",
                  "typeLiteral": {
                    "methods": [],
                    "properties": [
                      {
                        "name": "threadId",
                        "params": [],
                        "computed": false,
                        "optional": true,
                        "tsType": {
                          "repr": "Snowflake",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "Snowflake"
                          }
                        },
                        "typeParams": []
                      }
                    ],
                    "callSignatures": [],
                    "indexSignatures": []
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "void",
                    "kind": "keyword",
                    "keyword": "void"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/BaseInteraction.ts",
            "line": 188,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "fetchFollowUp",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "messageId",
                "optional": false,
                "tsType": {
                  "repr": "Snowflake",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Snowflake"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "options",
                "optional": true,
                "tsType": {
                  "repr": "",
                  "kind": "typeLiteral",
                  "typeLiteral": {
                    "methods": [],
                    "properties": [
                      {
                        "name": "threadId",
                        "params": [],
                        "computed": false,
                        "optional": true,
                        "tsType": {
                          "repr": "Snowflake",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "Snowflake"
                          }
                        },
                        "typeParams": []
                      }
                    ],
                    "callSignatures": [],
                    "indexSignatures": []
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "",
                    "kind": "union",
                    "union": [
                      {
                        "repr": "Message",
                        "kind": "typeRef",
                        "typeRef": {
                          "typeParams": null,
                          "typeName": "Message"
                        }
                      },
                      {
                        "repr": "undefined",
                        "kind": "keyword",
                        "keyword": "undefined"
                      }
                    ]
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/BaseInteraction.ts",
            "line": 199,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "respond",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "resp",
                "optional": false,
                "tsType": {
                  "repr": "InteractionResponse",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "InteractionResponse"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "",
                    "kind": "union",
                    "union": [
                      {
                        "repr": "Message",
                        "kind": "typeRef",
                        "typeRef": {
                          "typeParams": null,
                          "typeName": "Message"
                        }
                      },
                      {
                        "repr": "undefined",
                        "kind": "keyword",
                        "keyword": "undefined"
                      }
                    ]
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/BaseInteraction.ts",
            "line": 215,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "respond",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "resp",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "typeLiteral",
                  "typeLiteral": {
                    "methods": [],
                    "properties": [
                      {
                        "name": "with",
                        "params": [],
                        "computed": false,
                        "optional": false,
                        "tsType": {
                          "repr": "InteractionApplicationCommandCallbackData",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "InteractionApplicationCommandCallbackData"
                          }
                        },
                        "typeParams": []
                      }
                    ],
                    "callSignatures": [],
                    "indexSignatures": []
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "",
                    "kind": "union",
                    "union": [
                      {
                        "repr": "Message",
                        "kind": "typeRef",
                        "typeRef": {
                          "typeParams": null,
                          "typeName": "Message"
                        }
                      },
                      {
                        "repr": "undefined",
                        "kind": "keyword",
                        "keyword": "undefined"
                      }
                    ]
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/BaseInteraction.ts",
            "line": 216,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "respond",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "resp",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "InteractionResponse",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "InteractionResponse"
                      }
                    },
                    {
                      "repr": "",
                      "kind": "typeLiteral",
                      "typeLiteral": {
                        "methods": [],
                        "properties": [
                          {
                            "name": "with",
                            "params": [],
                            "computed": false,
                            "optional": false,
                            "tsType": {
                              "repr": "InteractionApplicationCommandCallbackData",
                              "kind": "typeRef",
                              "typeRef": {
                                "typeParams": null,
                                "typeName": "InteractionApplicationCommandCallbackData"
                              }
                            },
                            "typeParams": []
                          }
                        ],
                        "callSignatures": [],
                        "indexSignatures": []
                      }
                    }
                  ]
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "",
                    "kind": "union",
                    "union": [
                      {
                        "repr": "Message",
                        "kind": "typeRef",
                        "typeRef": {
                          "typeParams": null,
                          "typeName": "Message"
                        }
                      },
                      {
                        "repr": "undefined",
                        "kind": "keyword",
                        "keyword": "undefined"
                      }
                    ]
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/BaseInteraction.ts",
            "line": 217,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "respondWith",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "resp",
                "optional": false,
                "tsType": {
                  "repr": "InteractionApplicationCommandCallbackData",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "InteractionApplicationCommandCallbackData"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "",
                    "kind": "union",
                    "union": [
                      {
                        "repr": "Message",
                        "kind": "typeRef",
                        "typeRef": {
                          "typeParams": null,
                          "typeName": "Message"
                        }
                      },
                      {
                        "repr": "undefined",
                        "kind": "keyword",
                        "keyword": "undefined"
                      }
                    ]
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/BaseInteraction.ts",
            "line": 255,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "defer",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": null,
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/BaseInteraction.ts",
            "line": 261,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "autocomplete",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": null,
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/BaseInteraction.ts",
            "line": 265,
            "col": 4
          }
        }
      ],
      "extends": null,
      "implements": [
        {
          "repr": "Model",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "Model"
          }
        }
      ],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "class",
    "name": "default",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/BaseInteraction.ts",
      "line": 49,
      "col": 0
    },
    "declarationKind": "export",
    "classDef": {
      "isAbstract": true,
      "constructors": [
        {
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "session",
              "optional": false,
              "tsType": {
                "repr": "Session",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Session"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "data",
              "optional": false,
              "tsType": {
                "repr": "DiscordInteraction",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "DiscordInteraction"
                }
              }
            }
          ],
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/BaseInteraction.ts",
            "line": 50,
            "col": 4
          }
        }
      ],
      "properties": [
        {
          "tsType": {
            "repr": "Session",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Session"
            }
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "session",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/BaseInteraction.ts",
            "line": 74,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "Snowflake",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Snowflake"
            }
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/BaseInteraction.ts",
            "line": 75,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "token",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/BaseInteraction.ts",
            "line": 76,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "InteractionTypes",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "InteractionTypes"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "type",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/BaseInteraction.ts",
            "line": 78,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "Snowflake",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Snowflake"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "guildId",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/BaseInteraction.ts",
            "line": 79,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "Snowflake",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Snowflake"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "channelId",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/BaseInteraction.ts",
            "line": 80,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "Snowflake",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Snowflake"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "applicationId",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/BaseInteraction.ts",
            "line": 81,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "User",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "User"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "user",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/BaseInteraction.ts",
            "line": 82,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "Member",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Member"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "member",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/BaseInteraction.ts",
            "line": 83,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "Permsisions",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Permsisions"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "appPermissions",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/BaseInteraction.ts",
            "line": 84,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "1",
            "kind": "literal",
            "literal": {
              "kind": "number",
              "number": 1.0
            }
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "version",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/BaseInteraction.ts",
            "line": 86,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "responded",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/BaseInteraction.ts",
            "line": 88,
            "col": 4
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "createdTimestamp",
          "kind": "getter",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "number",
              "kind": "keyword",
              "keyword": "number"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/BaseInteraction.ts",
            "line": 90,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "createdAt",
          "kind": "getter",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "Date",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "Date"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/BaseInteraction.ts",
            "line": 94,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "isCommand",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "this is CommandInteraction",
              "kind": "typePredicate",
              "typePredicate": {
                "asserts": false,
                "param": {
                  "type": "this"
                },
                "type": {
                  "repr": "CommandInteraction",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "CommandInteraction"
                  }
                }
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/BaseInteraction.ts",
            "line": 98,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "isAutoComplete",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "this is AutoCompleteInteraction",
              "kind": "typePredicate",
              "typePredicate": {
                "asserts": false,
                "param": {
                  "type": "this"
                },
                "type": {
                  "repr": "AutoCompleteInteraction",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "AutoCompleteInteraction"
                  }
                }
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/BaseInteraction.ts",
            "line": 102,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "isComponent",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "this is ComponentInteraction",
              "kind": "typePredicate",
              "typePredicate": {
                "asserts": false,
                "param": {
                  "type": "this"
                },
                "type": {
                  "repr": "ComponentInteraction",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "ComponentInteraction"
                  }
                }
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/BaseInteraction.ts",
            "line": 106,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "isPing",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "this is PingInteraction",
              "kind": "typePredicate",
              "typePredicate": {
                "asserts": false,
                "param": {
                  "type": "this"
                },
                "type": {
                  "repr": "PingInteraction",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "PingInteraction"
                  }
                }
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/BaseInteraction.ts",
            "line": 110,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "isModalSubmit",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "this is ModalSubmitInteraction",
              "kind": "typePredicate",
              "typePredicate": {
                "asserts": false,
                "param": {
                  "type": "this"
                },
                "type": {
                  "repr": "ModalSubmitInteraction",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "ModalSubmitInteraction"
                  }
                }
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/BaseInteraction.ts",
            "line": 114,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "inGuild",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "this is this & { guildId: Snowflake; }",
              "kind": "typePredicate",
              "typePredicate": {
                "asserts": false,
                "param": {
                  "type": "this"
                },
                "type": {
                  "repr": "",
                  "kind": "intersection",
                  "intersection": [
                    {
                      "repr": "this",
                      "kind": "this",
                      "this": true
                    },
                    {
                      "repr": "",
                      "kind": "typeLiteral",
                      "typeLiteral": {
                        "methods": [],
                        "properties": [
                          {
                            "name": "guildId",
                            "params": [],
                            "computed": false,
                            "optional": false,
                            "tsType": {
                              "repr": "Snowflake",
                              "kind": "typeRef",
                              "typeRef": {
                                "typeParams": null,
                                "typeName": "Snowflake"
                              }
                            },
                            "typeParams": []
                          }
                        ],
                        "callSignatures": [],
                        "indexSignatures": []
                      }
                    }
                  ]
                }
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/BaseInteraction.ts",
            "line": 118,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "editReply",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "options",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "intersection",
                  "intersection": [
                    {
                      "repr": "EditWebhookMessage",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "EditWebhookMessage"
                      }
                    },
                    {
                      "repr": "",
                      "kind": "typeLiteral",
                      "typeLiteral": {
                        "methods": [],
                        "properties": [
                          {
                            "name": "messageId",
                            "params": [],
                            "computed": false,
                            "optional": true,
                            "tsType": {
                              "repr": "Snowflake",
                              "kind": "typeRef",
                              "typeRef": {
                                "typeParams": null,
                                "typeName": "Snowflake"
                              }
                            },
                            "typeParams": []
                          }
                        ],
                        "callSignatures": [],
                        "indexSignatures": []
                      }
                    }
                  ]
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "",
                    "kind": "union",
                    "union": [
                      {
                        "repr": "Message",
                        "kind": "typeRef",
                        "typeRef": {
                          "typeParams": null,
                          "typeName": "Message"
                        }
                      },
                      {
                        "repr": "undefined",
                        "kind": "keyword",
                        "keyword": "undefined"
                      }
                    ]
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/BaseInteraction.ts",
            "line": 124,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "sendFollowUp",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "options",
                "optional": false,
                "tsType": {
                  "repr": "InteractionApplicationCommandCallbackData",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "InteractionApplicationCommandCallbackData"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "Message",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Message"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/BaseInteraction.ts",
            "line": 165,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "editFollowUp",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "messageId",
                "optional": false,
                "tsType": {
                  "repr": "Snowflake",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Snowflake"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "options",
                "optional": true,
                "tsType": {
                  "repr": "",
                  "kind": "typeLiteral",
                  "typeLiteral": {
                    "methods": [],
                    "properties": [
                      {
                        "name": "threadId",
                        "params": [],
                        "computed": false,
                        "optional": false,
                        "tsType": {
                          "repr": "Snowflake",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "Snowflake"
                          }
                        },
                        "typeParams": []
                      }
                    ],
                    "callSignatures": [],
                    "indexSignatures": []
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "Message",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Message"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/BaseInteraction.ts",
            "line": 175,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "deleteFollowUp",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "messageId",
                "optional": false,
                "tsType": {
                  "repr": "Snowflake",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Snowflake"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "options",
                "optional": true,
                "tsType": {
                  "repr": "",
                  "kind": "typeLiteral",
                  "typeLiteral": {
                    "methods": [],
                    "properties": [
                      {
                        "name": "threadId",
                        "params": [],
                        "computed": false,
                        "optional": true,
                        "tsType": {
                          "repr": "Snowflake",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "Snowflake"
                          }
                        },
                        "typeParams": []
                      }
                    ],
                    "callSignatures": [],
                    "indexSignatures": []
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "void",
                    "kind": "keyword",
                    "keyword": "void"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/BaseInteraction.ts",
            "line": 188,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "fetchFollowUp",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "messageId",
                "optional": false,
                "tsType": {
                  "repr": "Snowflake",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Snowflake"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "options",
                "optional": true,
                "tsType": {
                  "repr": "",
                  "kind": "typeLiteral",
                  "typeLiteral": {
                    "methods": [],
                    "properties": [
                      {
                        "name": "threadId",
                        "params": [],
                        "computed": false,
                        "optional": true,
                        "tsType": {
                          "repr": "Snowflake",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "Snowflake"
                          }
                        },
                        "typeParams": []
                      }
                    ],
                    "callSignatures": [],
                    "indexSignatures": []
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "",
                    "kind": "union",
                    "union": [
                      {
                        "repr": "Message",
                        "kind": "typeRef",
                        "typeRef": {
                          "typeParams": null,
                          "typeName": "Message"
                        }
                      },
                      {
                        "repr": "undefined",
                        "kind": "keyword",
                        "keyword": "undefined"
                      }
                    ]
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/BaseInteraction.ts",
            "line": 199,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "respond",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "resp",
                "optional": false,
                "tsType": {
                  "repr": "InteractionResponse",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "InteractionResponse"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "",
                    "kind": "union",
                    "union": [
                      {
                        "repr": "Message",
                        "kind": "typeRef",
                        "typeRef": {
                          "typeParams": null,
                          "typeName": "Message"
                        }
                      },
                      {
                        "repr": "undefined",
                        "kind": "keyword",
                        "keyword": "undefined"
                      }
                    ]
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/BaseInteraction.ts",
            "line": 215,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "respond",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "resp",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "typeLiteral",
                  "typeLiteral": {
                    "methods": [],
                    "properties": [
                      {
                        "name": "with",
                        "params": [],
                        "computed": false,
                        "optional": false,
                        "tsType": {
                          "repr": "InteractionApplicationCommandCallbackData",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "InteractionApplicationCommandCallbackData"
                          }
                        },
                        "typeParams": []
                      }
                    ],
                    "callSignatures": [],
                    "indexSignatures": []
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "",
                    "kind": "union",
                    "union": [
                      {
                        "repr": "Message",
                        "kind": "typeRef",
                        "typeRef": {
                          "typeParams": null,
                          "typeName": "Message"
                        }
                      },
                      {
                        "repr": "undefined",
                        "kind": "keyword",
                        "keyword": "undefined"
                      }
                    ]
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/BaseInteraction.ts",
            "line": 216,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "respond",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "resp",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "InteractionResponse",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "InteractionResponse"
                      }
                    },
                    {
                      "repr": "",
                      "kind": "typeLiteral",
                      "typeLiteral": {
                        "methods": [],
                        "properties": [
                          {
                            "name": "with",
                            "params": [],
                            "computed": false,
                            "optional": false,
                            "tsType": {
                              "repr": "InteractionApplicationCommandCallbackData",
                              "kind": "typeRef",
                              "typeRef": {
                                "typeParams": null,
                                "typeName": "InteractionApplicationCommandCallbackData"
                              }
                            },
                            "typeParams": []
                          }
                        ],
                        "callSignatures": [],
                        "indexSignatures": []
                      }
                    }
                  ]
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "",
                    "kind": "union",
                    "union": [
                      {
                        "repr": "Message",
                        "kind": "typeRef",
                        "typeRef": {
                          "typeParams": null,
                          "typeName": "Message"
                        }
                      },
                      {
                        "repr": "undefined",
                        "kind": "keyword",
                        "keyword": "undefined"
                      }
                    ]
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/BaseInteraction.ts",
            "line": 217,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "respondWith",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "resp",
                "optional": false,
                "tsType": {
                  "repr": "InteractionApplicationCommandCallbackData",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "InteractionApplicationCommandCallbackData"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "",
                    "kind": "union",
                    "union": [
                      {
                        "repr": "Message",
                        "kind": "typeRef",
                        "typeRef": {
                          "typeParams": null,
                          "typeName": "Message"
                        }
                      },
                      {
                        "repr": "undefined",
                        "kind": "keyword",
                        "keyword": "undefined"
                      }
                    ]
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/BaseInteraction.ts",
            "line": 255,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "defer",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": null,
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/BaseInteraction.ts",
            "line": 261,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "autocomplete",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": null,
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/BaseInteraction.ts",
            "line": 265,
            "col": 4
          }
        }
      ],
      "extends": null,
      "implements": [
        {
          "repr": "Model",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "Model"
          }
        }
      ],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "import",
    "name": "Model",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/BaseInteraction.ts",
      "line": 1,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/structures/Base.ts",
      "imported": "Model"
    }
  },
  {
    "kind": "import",
    "name": "Session",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/BaseInteraction.ts",
      "line": 2,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/Session.ts",
      "imported": "Session"
    }
  },
  {
    "kind": "import",
    "name": "DiscordInteraction",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/BaseInteraction.ts",
      "line": 3,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
      "imported": "DiscordInteraction"
    }
  },
  {
    "kind": "import",
    "name": "DiscordMessage",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/BaseInteraction.ts",
      "line": 3,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
      "imported": "DiscordMessage"
    }
  },
  {
    "kind": "import",
    "name": "DiscordMessageComponents",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/BaseInteraction.ts",
      "line": 3,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
      "imported": "DiscordMessageComponents"
    }
  },
  {
    "kind": "import",
    "name": "CommandInteraction",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/BaseInteraction.ts",
      "line": 4,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/CommandInteraction.ts",
      "imported": "default"
    }
  },
  {
    "kind": "import",
    "name": "PingInteraction",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/BaseInteraction.ts",
      "line": 5,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/PingInteraction.ts",
      "imported": "default"
    }
  },
  {
    "kind": "import",
    "name": "ComponentInteraction",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/BaseInteraction.ts",
      "line": 6,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/ComponentInteraction.ts",
      "imported": "default"
    }
  },
  {
    "kind": "import",
    "name": "ModalSubmitInteraction",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/BaseInteraction.ts",
      "line": 7,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/ModalSubmitInteraction.ts",
      "imported": "default"
    }
  },
  {
    "kind": "import",
    "name": "AutoCompleteInteraction",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/BaseInteraction.ts",
      "line": 8,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/AutoCompleteInteraction.ts",
      "imported": "default"
    }
  },
  {
    "kind": "import",
    "name": "CreateMessage",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/BaseInteraction.ts",
      "line": 9,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/structures/Message.ts",
      "imported": "CreateMessage"
    }
  },
  {
    "kind": "import",
    "name": "MessageFlags",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/BaseInteraction.ts",
      "line": 10,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/Util.ts",
      "imported": "MessageFlags"
    }
  },
  {
    "kind": "import",
    "name": "EditWebhookMessage",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/BaseInteraction.ts",
      "line": 11,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/structures/Webhook.ts",
      "imported": "EditWebhookMessage"
    }
  },
  {
    "kind": "import",
    "name": "InteractionResponseTypes",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/BaseInteraction.ts",
      "line": 12,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
      "imported": "InteractionResponseTypes"
    }
  },
  {
    "kind": "import",
    "name": "InteractionTypes",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/BaseInteraction.ts",
      "line": 12,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
      "imported": "InteractionTypes"
    }
  },
  {
    "kind": "import",
    "name": "Snowflake",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/BaseInteraction.ts",
      "line": 13,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/Snowflake.ts",
      "imported": "Snowflake"
    }
  },
  {
    "kind": "import",
    "name": "User",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/BaseInteraction.ts",
      "line": 14,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/structures/User.ts",
      "imported": "default"
    }
  },
  {
    "kind": "import",
    "name": "Member",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/BaseInteraction.ts",
      "line": 15,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/structures/Member.ts",
      "imported": "default"
    }
  },
  {
    "kind": "import",
    "name": "Message",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/BaseInteraction.ts",
      "line": 16,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/structures/Message.ts",
      "imported": "default"
    }
  },
  {
    "kind": "import",
    "name": "Permsisions",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/BaseInteraction.ts",
      "line": 17,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/structures/Permissions.ts",
      "imported": "default"
    }
  },
  {
    "kind": "import",
    "name": "Webhook",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/BaseInteraction.ts",
      "line": 18,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/structures/Webhook.ts",
      "imported": "default"
    }
  },
  {
    "kind": "import",
    "name": "Routes",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/BaseInteraction.ts",
      "line": 19,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/Routes.ts",
      "imported": null
    }
  },
  {
    "kind": "class",
    "name": "ComponentInteraction",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/ComponentInteraction.ts",
      "line": 9,
      "col": 0
    },
    "declarationKind": "export",
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "session",
              "optional": false,
              "tsType": {
                "repr": "Session",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Session"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "data",
              "optional": false,
              "tsType": {
                "repr": "DiscordInteraction",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "DiscordInteraction"
                }
              }
            }
          ],
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/ComponentInteraction.ts",
            "line": 10,
            "col": 4
          }
        }
      ],
      "properties": [
        {
          "tsType": {
            "repr": "InteractionTypes.MessageComponent",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "InteractionTypes.MessageComponent"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "type",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/ComponentInteraction.ts",
            "line": 20,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "MessageComponentTypes",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "MessageComponentTypes"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "componentType",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/ComponentInteraction.ts",
            "line": 21,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "customId",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/ComponentInteraction.ts",
            "line": 22,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "Snowflake",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Snowflake"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "targetId",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/ComponentInteraction.ts",
            "line": 23,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "values",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/ComponentInteraction.ts",
            "line": 24,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "Message",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Message"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "message",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/ComponentInteraction.ts",
            "line": 25,
            "col": 4
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "isButton",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "boolean",
              "kind": "keyword",
              "keyword": "boolean"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/ComponentInteraction.ts",
            "line": 28,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "isActionRow",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "boolean",
              "kind": "keyword",
              "keyword": "boolean"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/ComponentInteraction.ts",
            "line": 32,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "isTextInput",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "boolean",
              "kind": "keyword",
              "keyword": "boolean"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/ComponentInteraction.ts",
            "line": 36,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "isSelectMenu",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "boolean",
              "kind": "keyword",
              "keyword": "boolean"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/ComponentInteraction.ts",
            "line": 40,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "deferUpdate",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": null,
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/ComponentInteraction.ts",
            "line": 44,
            "col": 4
          }
        }
      ],
      "extends": "BaseInteraction",
      "implements": [
        {
          "repr": "Model",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "Model"
          }
        }
      ],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "class",
    "name": "default",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/ComponentInteraction.ts",
      "line": 9,
      "col": 0
    },
    "declarationKind": "export",
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "session",
              "optional": false,
              "tsType": {
                "repr": "Session",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Session"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "data",
              "optional": false,
              "tsType": {
                "repr": "DiscordInteraction",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "DiscordInteraction"
                }
              }
            }
          ],
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/ComponentInteraction.ts",
            "line": 10,
            "col": 4
          }
        }
      ],
      "properties": [
        {
          "tsType": {
            "repr": "InteractionTypes.MessageComponent",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "InteractionTypes.MessageComponent"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "type",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/ComponentInteraction.ts",
            "line": 20,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "MessageComponentTypes",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "MessageComponentTypes"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "componentType",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/ComponentInteraction.ts",
            "line": 21,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "customId",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/ComponentInteraction.ts",
            "line": 22,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "Snowflake",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Snowflake"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "targetId",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/ComponentInteraction.ts",
            "line": 23,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "values",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/ComponentInteraction.ts",
            "line": 24,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "Message",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Message"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "message",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/ComponentInteraction.ts",
            "line": 25,
            "col": 4
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "isButton",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "boolean",
              "kind": "keyword",
              "keyword": "boolean"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/ComponentInteraction.ts",
            "line": 28,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "isActionRow",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "boolean",
              "kind": "keyword",
              "keyword": "boolean"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/ComponentInteraction.ts",
            "line": 32,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "isTextInput",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "boolean",
              "kind": "keyword",
              "keyword": "boolean"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/ComponentInteraction.ts",
            "line": 36,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "isSelectMenu",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "boolean",
              "kind": "keyword",
              "keyword": "boolean"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/ComponentInteraction.ts",
            "line": 40,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "deferUpdate",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": null,
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/ComponentInteraction.ts",
            "line": 44,
            "col": 4
          }
        }
      ],
      "extends": "BaseInteraction",
      "implements": [
        {
          "repr": "Model",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "Model"
          }
        }
      ],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "import",
    "name": "Model",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/ComponentInteraction.ts",
      "line": 1,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/structures/Base.ts",
      "imported": "Model"
    }
  },
  {
    "kind": "import",
    "name": "Snowflake",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/ComponentInteraction.ts",
      "line": 2,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/Snowflake.ts",
      "imported": "Snowflake"
    }
  },
  {
    "kind": "import",
    "name": "Session",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/ComponentInteraction.ts",
      "line": 3,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/Session.ts",
      "imported": "Session"
    }
  },
  {
    "kind": "import",
    "name": "DiscordInteraction",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/ComponentInteraction.ts",
      "line": 4,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
      "imported": "DiscordInteraction"
    }
  },
  {
    "kind": "import",
    "name": "InteractionTypes",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/ComponentInteraction.ts",
      "line": 4,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
      "imported": "InteractionTypes"
    }
  },
  {
    "kind": "import",
    "name": "InteractionResponseTypes",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/ComponentInteraction.ts",
      "line": 5,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
      "imported": "InteractionResponseTypes"
    }
  },
  {
    "kind": "import",
    "name": "MessageComponentTypes",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/ComponentInteraction.ts",
      "line": 5,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
      "imported": "MessageComponentTypes"
    }
  },
  {
    "kind": "import",
    "name": "BaseInteraction",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/ComponentInteraction.ts",
      "line": 6,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/BaseInteraction.ts",
      "imported": "default"
    }
  },
  {
    "kind": "import",
    "name": "Message",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/ComponentInteraction.ts",
      "line": 7,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/structures/Message.ts",
      "imported": "default"
    }
  },
  {
    "kind": "interface",
    "name": "MessageInteraction",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/InteractionFactory.ts",
      "line": 16,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "tags": [
        {
          "kind": "unsupported",
          "value": "@link https://discord.com/developers/docs/interactions/receiving-and-responding#message-interaction-object-message-interaction-structure"
        }
      ]
    },
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/InteractionFactory.ts",
            "line": 18,
            "col": 4
          },
          "jsDoc": {
            "doc": "id of the interaction"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "Snowflake",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Snowflake"
            }
          },
          "typeParams": []
        },
        {
          "name": "type",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/InteractionFactory.ts",
            "line": 20,
            "col": 4
          },
          "jsDoc": {
            "doc": "type of interaction"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "InteractionTypes",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "InteractionTypes"
            }
          },
          "typeParams": []
        },
        {
          "name": "name",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/InteractionFactory.ts",
            "line": 22,
            "col": 4
          },
          "jsDoc": {
            "doc": "name of the application command, including subcommands and subcommand groups"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "user",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/InteractionFactory.ts",
            "line": 24,
            "col": 4
          },
          "jsDoc": {
            "doc": "user who invoked the interaction"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "User",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "User"
            }
          },
          "typeParams": []
        },
        {
          "name": "member",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/InteractionFactory.ts",
            "line": 26,
            "col": 4
          },
          "jsDoc": {
            "doc": "member who invoked the interaction in the guild"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "Partial",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": [
                {
                  "repr": "Member",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Member"
                  }
                }
              ],
              "typeName": "Partial"
            }
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "typeAlias",
    "name": "Interaction",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/InteractionFactory.ts",
      "line": 29,
      "col": 0
    },
    "declarationKind": "export",
    "typeAliasDef": {
      "tsType": {
        "repr": "",
        "kind": "union",
        "union": [
          {
            "repr": "CommandInteraction",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "CommandInteraction"
            }
          },
          {
            "repr": "ComponentInteraction",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "ComponentInteraction"
            }
          },
          {
            "repr": "PingInteraction",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "PingInteraction"
            }
          },
          {
            "repr": "AutoCompleteInteraction",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "AutoCompleteInteraction"
            }
          },
          {
            "repr": "ModalSubmitInteraction",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "ModalSubmitInteraction"
            }
          }
        ]
      },
      "typeParams": []
    }
  },
  {
    "kind": "class",
    "name": "InteractionFactory",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/InteractionFactory.ts",
      "line": 36,
      "col": 0
    },
    "declarationKind": "export",
    "classDef": {
      "isAbstract": false,
      "constructors": [],
      "properties": [],
      "indexSignatures": [],
      "methods": [
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": true,
          "name": "from",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "session",
                "optional": false,
                "tsType": {
                  "repr": "Session",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Session"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "interaction",
                "optional": false,
                "tsType": {
                  "repr": "DiscordInteraction",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "DiscordInteraction"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Interaction",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "Interaction"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/InteractionFactory.ts",
            "line": 37,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": true,
          "name": "fromMessage",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "session",
                "optional": false,
                "tsType": {
                  "repr": "Session",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Session"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "interaction",
                "optional": false,
                "tsType": {
                  "repr": "DiscordMessageInteraction",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "DiscordMessageInteraction"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "_guildId",
                "optional": true,
                "tsType": {
                  "repr": "Snowflake",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Snowflake"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "MessageInteraction",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "MessageInteraction"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/InteractionFactory.ts",
            "line": 52,
            "col": 4
          }
        }
      ],
      "extends": null,
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "class",
    "name": "default",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/InteractionFactory.ts",
      "line": 36,
      "col": 0
    },
    "declarationKind": "export",
    "classDef": {
      "isAbstract": false,
      "constructors": [],
      "properties": [],
      "indexSignatures": [],
      "methods": [
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": true,
          "name": "from",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "session",
                "optional": false,
                "tsType": {
                  "repr": "Session",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Session"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "interaction",
                "optional": false,
                "tsType": {
                  "repr": "DiscordInteraction",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "DiscordInteraction"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Interaction",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "Interaction"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/InteractionFactory.ts",
            "line": 37,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": true,
          "name": "fromMessage",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "session",
                "optional": false,
                "tsType": {
                  "repr": "Session",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Session"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "interaction",
                "optional": false,
                "tsType": {
                  "repr": "DiscordMessageInteraction",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "DiscordMessageInteraction"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "_guildId",
                "optional": true,
                "tsType": {
                  "repr": "Snowflake",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Snowflake"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "MessageInteraction",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "MessageInteraction"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/InteractionFactory.ts",
            "line": 52,
            "col": 4
          }
        }
      ],
      "extends": null,
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "import",
    "name": "Session",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/InteractionFactory.ts",
      "line": 1,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/Session.ts",
      "imported": "Session"
    }
  },
  {
    "kind": "import",
    "name": "Snowflake",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/InteractionFactory.ts",
      "line": 2,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/Snowflake.ts",
      "imported": "Snowflake"
    }
  },
  {
    "kind": "import",
    "name": "DiscordInteraction",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/InteractionFactory.ts",
      "line": 3,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
      "imported": "DiscordInteraction"
    }
  },
  {
    "kind": "import",
    "name": "DiscordMessageInteraction",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/InteractionFactory.ts",
      "line": 3,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
      "imported": "DiscordMessageInteraction"
    }
  },
  {
    "kind": "import",
    "name": "InteractionTypes",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/InteractionFactory.ts",
      "line": 4,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
      "imported": "InteractionTypes"
    }
  },
  {
    "kind": "import",
    "name": "User",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/InteractionFactory.ts",
      "line": 5,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/structures/User.ts",
      "imported": "default"
    }
  },
  {
    "kind": "import",
    "name": "Member",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/InteractionFactory.ts",
      "line": 6,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/structures/Member.ts",
      "imported": "default"
    }
  },
  {
    "kind": "import",
    "name": "CommandInteraction",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/InteractionFactory.ts",
      "line": 7,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/CommandInteraction.ts",
      "imported": "default"
    }
  },
  {
    "kind": "import",
    "name": "ComponentInteraction",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/InteractionFactory.ts",
      "line": 8,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/ComponentInteraction.ts",
      "imported": "default"
    }
  },
  {
    "kind": "import",
    "name": "PingInteraction",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/InteractionFactory.ts",
      "line": 9,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/PingInteraction.ts",
      "imported": "default"
    }
  },
  {
    "kind": "import",
    "name": "AutoCompleteInteraction",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/InteractionFactory.ts",
      "line": 10,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/AutoCompleteInteraction.ts",
      "imported": "default"
    }
  },
  {
    "kind": "import",
    "name": "ModalSubmitInteraction",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/InteractionFactory.ts",
      "line": 11,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/ModalSubmitInteraction.ts",
      "imported": "default"
    }
  },
  {
    "kind": "class",
    "name": "PingInteraction",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/PingInteraction.ts",
      "line": 9,
      "col": 0
    },
    "declarationKind": "export",
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "session",
              "optional": false,
              "tsType": {
                "repr": "Session",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Session"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "data",
              "optional": false,
              "tsType": {
                "repr": "DiscordInteraction",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "DiscordInteraction"
                }
              }
            }
          ],
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/PingInteraction.ts",
            "line": 10,
            "col": 4
          }
        }
      ],
      "properties": [
        {
          "tsType": {
            "repr": "InteractionTypes.Ping",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "InteractionTypes.Ping"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "type",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/PingInteraction.ts",
            "line": 19,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "Snowflake",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Snowflake"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "commandId",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/PingInteraction.ts",
            "line": 20,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "commandName",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/PingInteraction.ts",
            "line": 21,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "ApplicationCommandTypes",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "ApplicationCommandTypes"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "commandType",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/PingInteraction.ts",
            "line": 22,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "Snowflake",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Snowflake"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "commandGuildId",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/PingInteraction.ts",
            "line": 23,
            "col": 4
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "pong",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "void",
                    "kind": "keyword",
                    "keyword": "void"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/PingInteraction.ts",
            "line": 25,
            "col": 4
          }
        }
      ],
      "extends": "BaseInteraction",
      "implements": [
        {
          "repr": "Model",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "Model"
          }
        }
      ],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "class",
    "name": "default",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/PingInteraction.ts",
      "line": 9,
      "col": 0
    },
    "declarationKind": "export",
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "session",
              "optional": false,
              "tsType": {
                "repr": "Session",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Session"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "data",
              "optional": false,
              "tsType": {
                "repr": "DiscordInteraction",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "DiscordInteraction"
                }
              }
            }
          ],
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/PingInteraction.ts",
            "line": 10,
            "col": 4
          }
        }
      ],
      "properties": [
        {
          "tsType": {
            "repr": "InteractionTypes.Ping",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "InteractionTypes.Ping"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "type",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/PingInteraction.ts",
            "line": 19,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "Snowflake",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Snowflake"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "commandId",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/PingInteraction.ts",
            "line": 20,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "commandName",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/PingInteraction.ts",
            "line": 21,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "ApplicationCommandTypes",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "ApplicationCommandTypes"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "commandType",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/PingInteraction.ts",
            "line": 22,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "Snowflake",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Snowflake"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "commandGuildId",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/PingInteraction.ts",
            "line": 23,
            "col": 4
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "pong",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "void",
                    "kind": "keyword",
                    "keyword": "void"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/PingInteraction.ts",
            "line": 25,
            "col": 4
          }
        }
      ],
      "extends": "BaseInteraction",
      "implements": [
        {
          "repr": "Model",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "Model"
          }
        }
      ],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "import",
    "name": "Model",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/PingInteraction.ts",
      "line": 1,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/structures/Base.ts",
      "imported": "Model"
    }
  },
  {
    "kind": "import",
    "name": "Snowflake",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/PingInteraction.ts",
      "line": 2,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/Snowflake.ts",
      "imported": "Snowflake"
    }
  },
  {
    "kind": "import",
    "name": "Session",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/PingInteraction.ts",
      "line": 3,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/Session.ts",
      "imported": "Session"
    }
  },
  {
    "kind": "import",
    "name": "ApplicationCommandTypes",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/PingInteraction.ts",
      "line": 4,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
      "imported": "ApplicationCommandTypes"
    }
  },
  {
    "kind": "import",
    "name": "DiscordInteraction",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/PingInteraction.ts",
      "line": 4,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
      "imported": "DiscordInteraction"
    }
  },
  {
    "kind": "import",
    "name": "InteractionTypes",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/PingInteraction.ts",
      "line": 4,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
      "imported": "InteractionTypes"
    }
  },
  {
    "kind": "import",
    "name": "InteractionResponseTypes",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/PingInteraction.ts",
      "line": 5,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
      "imported": "InteractionResponseTypes"
    }
  },
  {
    "kind": "import",
    "name": "BaseInteraction",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/PingInteraction.ts",
      "line": 6,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/BaseInteraction.ts",
      "imported": "default"
    }
  },
  {
    "kind": "import",
    "name": "Routes",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/PingInteraction.ts",
      "line": 7,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/Routes.ts",
      "imported": null
    }
  },
  {
    "kind": "class",
    "name": "ChoiceBuilder",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/slash/ApplicationCommandOption.ts",
      "line": 4,
      "col": 0
    },
    "declarationKind": "export",
    "classDef": {
      "isAbstract": false,
      "constructors": [],
      "properties": [
        {
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "name",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/slash/ApplicationCommandOption.ts",
            "line": 5,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "value",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/slash/ApplicationCommandOption.ts",
            "line": 6,
            "col": 4
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setName",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "name",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "ChoiceBuilder",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "ChoiceBuilder"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/slash/ApplicationCommandOption.ts",
            "line": 8,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setValue",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "value",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "this",
              "kind": "this",
              "this": true
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/slash/ApplicationCommandOption.ts",
            "line": 13,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "toJSON",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "ApplicationCommandOptionChoice",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "ApplicationCommandOptionChoice"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/slash/ApplicationCommandOption.ts",
            "line": 18,
            "col": 4
          }
        }
      ],
      "extends": null,
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "class",
    "name": "OptionBuilder",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/slash/ApplicationCommandOption.ts",
      "line": 29,
      "col": 0
    },
    "declarationKind": "export",
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "type",
              "optional": true,
              "tsType": {
                "repr": "ApplicationCommandOptionTypes",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "ApplicationCommandOptionTypes"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "name",
              "optional": true,
              "tsType": {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              }
            },
            {
              "kind": "identifier",
              "name": "description",
              "optional": true,
              "tsType": {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              }
            }
          ],
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/slash/ApplicationCommandOption.ts",
            "line": 36,
            "col": 4
          }
        }
      ],
      "properties": [
        {
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "required",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/slash/ApplicationCommandOption.ts",
            "line": 30,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "autocomplete",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/slash/ApplicationCommandOption.ts",
            "line": 31,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "ApplicationCommandOptionTypes",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "ApplicationCommandOptionTypes"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "type",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/slash/ApplicationCommandOption.ts",
            "line": 32,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "name",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/slash/ApplicationCommandOption.ts",
            "line": 33,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "description",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/slash/ApplicationCommandOption.ts",
            "line": 34,
            "col": 4
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setType",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "type",
                "optional": false,
                "tsType": {
                  "repr": "ApplicationCommandOptionTypes",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "ApplicationCommandOptionTypes"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "this",
              "kind": "this",
              "this": true
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/slash/ApplicationCommandOption.ts",
            "line": 42,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setName",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "name",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "this",
              "kind": "this",
              "this": true
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/slash/ApplicationCommandOption.ts",
            "line": 46,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setDescription",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "description",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "this",
              "kind": "this",
              "this": true
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/slash/ApplicationCommandOption.ts",
            "line": 50,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setRequired",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "required",
                "optional": false,
                "tsType": {
                  "repr": "boolean",
                  "kind": "keyword",
                  "keyword": "boolean"
                }
              }
            ],
            "returnType": {
              "repr": "this",
              "kind": "this",
              "this": true
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/slash/ApplicationCommandOption.ts",
            "line": 54,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "toJSON",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "ApplicationCommandOption",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "ApplicationCommandOption"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/slash/ApplicationCommandOption.ts",
            "line": 58,
            "col": 4
          }
        }
      ],
      "extends": null,
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "class",
    "name": "OptionBuilderLimitedValues",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/slash/ApplicationCommandOption.ts",
      "line": 76,
      "col": 0
    },
    "declarationKind": "export",
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "type",
              "optional": true,
              "tsType": {
                "repr": "",
                "kind": "union",
                "union": [
                  {
                    "repr": "ApplicationCommandOptionTypes.Integer",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "ApplicationCommandOptionTypes.Integer"
                    }
                  },
                  {
                    "repr": "ApplicationCommandOptionTypes.Number",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "ApplicationCommandOptionTypes.Number"
                    }
                  }
                ]
              }
            },
            {
              "kind": "identifier",
              "name": "name",
              "optional": true,
              "tsType": {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              }
            },
            {
              "kind": "identifier",
              "name": "description",
              "optional": true,
              "tsType": {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              }
            }
          ],
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/slash/ApplicationCommandOption.ts",
            "line": 81,
            "col": 4
          }
        }
      ],
      "properties": [
        {
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "ChoiceBuilder",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "ChoiceBuilder"
              }
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "choices",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/slash/ApplicationCommandOption.ts",
            "line": 77,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "minValue",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/slash/ApplicationCommandOption.ts",
            "line": 78,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "maxValue",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/slash/ApplicationCommandOption.ts",
            "line": 79,
            "col": 4
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setMinValue",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "n",
                "optional": false,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                }
              }
            ],
            "returnType": {
              "repr": "this",
              "kind": "this",
              "this": true
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/slash/ApplicationCommandOption.ts",
            "line": 92,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setMaxValue",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "n",
                "optional": false,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                }
              }
            ],
            "returnType": {
              "repr": "this",
              "kind": "this",
              "this": true
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/slash/ApplicationCommandOption.ts",
            "line": 96,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "addChoice",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "fn",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "fnOrConstructor",
                  "fnOrConstructor": {
                    "constructor": false,
                    "tsType": {
                      "repr": "ChoiceBuilder",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "ChoiceBuilder"
                      }
                    },
                    "params": [
                      {
                        "kind": "identifier",
                        "name": "choice",
                        "optional": false,
                        "tsType": {
                          "repr": "ChoiceBuilder",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "ChoiceBuilder"
                          }
                        }
                      }
                    ],
                    "typeParams": []
                  }
                }
              }
            ],
            "returnType": {
              "repr": "this",
              "kind": "this",
              "this": true
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/slash/ApplicationCommandOption.ts",
            "line": 100,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "toJSON",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "ApplicationCommandOption",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "ApplicationCommandOption"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/slash/ApplicationCommandOption.ts",
            "line": 107,
            "col": 4
          }
        }
      ],
      "extends": "OptionBuilder",
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "class",
    "name": "OptionBuilderString",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/slash/ApplicationCommandOption.ts",
      "line": 117,
      "col": 0
    },
    "declarationKind": "export",
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "type",
              "optional": true,
              "tsType": {
                "repr": "ApplicationCommandOptionTypes.String",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "ApplicationCommandOptionTypes.String"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "name",
              "optional": true,
              "tsType": {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              }
            },
            {
              "kind": "identifier",
              "name": "description",
              "optional": true,
              "tsType": {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              }
            }
          ],
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/slash/ApplicationCommandOption.ts",
            "line": 119,
            "col": 4
          }
        }
      ],
      "properties": [
        {
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "ChoiceBuilder",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "ChoiceBuilder"
              }
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "choices",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/slash/ApplicationCommandOption.ts",
            "line": 118,
            "col": 4
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "addChoice",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "fn",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "fnOrConstructor",
                  "fnOrConstructor": {
                    "constructor": false,
                    "tsType": {
                      "repr": "ChoiceBuilder",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "ChoiceBuilder"
                      }
                    },
                    "params": [
                      {
                        "kind": "identifier",
                        "name": "choice",
                        "optional": false,
                        "tsType": {
                          "repr": "ChoiceBuilder",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "ChoiceBuilder"
                          }
                        }
                      }
                    ],
                    "typeParams": []
                  }
                }
              }
            ],
            "returnType": {
              "repr": "this",
              "kind": "this",
              "this": true
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/slash/ApplicationCommandOption.ts",
            "line": 131,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "toJSON",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "ApplicationCommandOption",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "ApplicationCommandOption"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/slash/ApplicationCommandOption.ts",
            "line": 138,
            "col": 4
          }
        }
      ],
      "extends": "OptionBuilder",
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "class",
    "name": "OptionBuilderChannel",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/slash/ApplicationCommandOption.ts",
      "line": 146,
      "col": 0
    },
    "declarationKind": "export",
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "type",
              "optional": true,
              "tsType": {
                "repr": "ApplicationCommandOptionTypes.Channel",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "ApplicationCommandOptionTypes.Channel"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "name",
              "optional": true,
              "tsType": {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              }
            },
            {
              "kind": "identifier",
              "name": "description",
              "optional": true,
              "tsType": {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              }
            }
          ],
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/slash/ApplicationCommandOption.ts",
            "line": 148,
            "col": 4
          }
        }
      ],
      "properties": [
        {
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "ChannelTypes",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "ChannelTypes"
              }
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "channelTypes",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/slash/ApplicationCommandOption.ts",
            "line": 147,
            "col": 4
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "addChannelTypes",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "rest",
                "arg": {
                  "kind": "identifier",
                  "name": "channels",
                  "optional": false,
                  "tsType": null
                },
                "tsType": {
                  "repr": "",
                  "kind": "array",
                  "array": {
                    "repr": "ChannelTypes",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "ChannelTypes"
                    }
                  }
                }
              }
            ],
            "returnType": {
              "repr": "this",
              "kind": "this",
              "this": true
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/slash/ApplicationCommandOption.ts",
            "line": 160,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "toJSON",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "ApplicationCommandOption",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "ApplicationCommandOption"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/slash/ApplicationCommandOption.ts",
            "line": 166,
            "col": 4
          }
        }
      ],
      "extends": "OptionBuilder",
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "OptionBuilderLike",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/slash/ApplicationCommandOption.ts",
      "line": 174,
      "col": 0
    },
    "declarationKind": "export",
    "interfaceDef": {
      "extends": [],
      "methods": [
        {
          "name": "toJSON",
          "kind": "method",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/slash/ApplicationCommandOption.ts",
            "line": 175,
            "col": 4
          },
          "optional": false,
          "params": [],
          "returnType": {
            "repr": "ApplicationCommandOption",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "ApplicationCommandOption"
            }
          },
          "typeParams": []
        }
      ],
      "properties": [],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "class",
    "name": "OptionBased",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/slash/ApplicationCommandOption.ts",
      "line": 178,
      "col": 0
    },
    "declarationKind": "export",
    "classDef": {
      "isAbstract": false,
      "constructors": [],
      "properties": [
        {
          "tsType": {
            "repr": "",
            "kind": "intersection",
            "intersection": [
              {
                "repr": "",
                "kind": "parenthesized",
                "parenthesized": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "",
                      "kind": "array",
                      "array": {
                        "repr": "OptionBuilder",
                        "kind": "typeRef",
                        "typeRef": {
                          "typeParams": null,
                          "typeName": "OptionBuilder"
                        }
                      }
                    },
                    {
                      "repr": "",
                      "kind": "array",
                      "array": {
                        "repr": "OptionBuilderString",
                        "kind": "typeRef",
                        "typeRef": {
                          "typeParams": null,
                          "typeName": "OptionBuilderString"
                        }
                      }
                    },
                    {
                      "repr": "",
                      "kind": "array",
                      "array": {
                        "repr": "OptionBuilderLimitedValues",
                        "kind": "typeRef",
                        "typeRef": {
                          "typeParams": null,
                          "typeName": "OptionBuilderLimitedValues"
                        }
                      }
                    },
                    {
                      "repr": "",
                      "kind": "array",
                      "array": {
                        "repr": "OptionBuilderNested",
                        "kind": "typeRef",
                        "typeRef": {
                          "typeParams": null,
                          "typeName": "OptionBuilderNested"
                        }
                      }
                    },
                    {
                      "repr": "",
                      "kind": "array",
                      "array": {
                        "repr": "OptionBuilderChannel",
                        "kind": "typeRef",
                        "typeRef": {
                          "typeParams": null,
                          "typeName": "OptionBuilderChannel"
                        }
                      }
                    }
                  ]
                }
              },
              {
                "repr": "",
                "kind": "array",
                "array": {
                  "repr": "OptionBuilderLike",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "OptionBuilderLike"
                  }
                }
              }
            ]
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "options",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/slash/ApplicationCommandOption.ts",
            "line": 179,
            "col": 4
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "addOption",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "fn",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "fnOrConstructor",
                  "fnOrConstructor": {
                    "constructor": false,
                    "tsType": {
                      "repr": "OptionBuilder",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "OptionBuilder"
                      }
                    },
                    "params": [
                      {
                        "kind": "identifier",
                        "name": "option",
                        "optional": false,
                        "tsType": {
                          "repr": "OptionBuilder",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "OptionBuilder"
                          }
                        }
                      }
                    ],
                    "typeParams": []
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "type",
                "optional": true,
                "tsType": {
                  "repr": "ApplicationCommandOptionTypes",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "ApplicationCommandOptionTypes"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "this",
              "kind": "this",
              "this": true
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/slash/ApplicationCommandOption.ts",
            "line": 189,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "addNestedOption",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "fn",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "fnOrConstructor",
                  "fnOrConstructor": {
                    "constructor": false,
                    "tsType": {
                      "repr": "OptionBuilder",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "OptionBuilder"
                      }
                    },
                    "params": [
                      {
                        "kind": "identifier",
                        "name": "option",
                        "optional": false,
                        "tsType": {
                          "repr": "OptionBuilder",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "OptionBuilder"
                          }
                        }
                      }
                    ],
                    "typeParams": []
                  }
                }
              }
            ],
            "returnType": {
              "repr": "this",
              "kind": "this",
              "this": true
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/slash/ApplicationCommandOption.ts",
            "line": 196,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "addStringOption",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "fn",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "fnOrConstructor",
                  "fnOrConstructor": {
                    "constructor": false,
                    "tsType": {
                      "repr": "OptionBuilderString",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "OptionBuilderString"
                      }
                    },
                    "params": [
                      {
                        "kind": "identifier",
                        "name": "option",
                        "optional": false,
                        "tsType": {
                          "repr": "OptionBuilderString",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "OptionBuilderString"
                          }
                        }
                      }
                    ],
                    "typeParams": []
                  }
                }
              }
            ],
            "returnType": {
              "repr": "this",
              "kind": "this",
              "this": true
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/slash/ApplicationCommandOption.ts",
            "line": 203,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "addIntegerOption",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "fn",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "fnOrConstructor",
                  "fnOrConstructor": {
                    "constructor": false,
                    "tsType": {
                      "repr": "OptionBuilderLimitedValues",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "OptionBuilderLimitedValues"
                      }
                    },
                    "params": [
                      {
                        "kind": "identifier",
                        "name": "option",
                        "optional": false,
                        "tsType": {
                          "repr": "OptionBuilderLimitedValues",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "OptionBuilderLimitedValues"
                          }
                        }
                      }
                    ],
                    "typeParams": []
                  }
                }
              }
            ],
            "returnType": {
              "repr": "this",
              "kind": "this",
              "this": true
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/slash/ApplicationCommandOption.ts",
            "line": 210,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "addNumberOption",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "fn",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "fnOrConstructor",
                  "fnOrConstructor": {
                    "constructor": false,
                    "tsType": {
                      "repr": "OptionBuilderLimitedValues",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "OptionBuilderLimitedValues"
                      }
                    },
                    "params": [
                      {
                        "kind": "identifier",
                        "name": "option",
                        "optional": false,
                        "tsType": {
                          "repr": "OptionBuilderLimitedValues",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "OptionBuilderLimitedValues"
                          }
                        }
                      }
                    ],
                    "typeParams": []
                  }
                }
              }
            ],
            "returnType": {
              "repr": "this",
              "kind": "this",
              "this": true
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/slash/ApplicationCommandOption.ts",
            "line": 217,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "addBooleanOption",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "fn",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "fnOrConstructor",
                  "fnOrConstructor": {
                    "constructor": false,
                    "tsType": {
                      "repr": "OptionBuilder",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "OptionBuilder"
                      }
                    },
                    "params": [
                      {
                        "kind": "identifier",
                        "name": "option",
                        "optional": false,
                        "tsType": {
                          "repr": "OptionBuilder",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "OptionBuilder"
                          }
                        }
                      }
                    ],
                    "typeParams": []
                  }
                }
              }
            ],
            "returnType": {
              "repr": "this",
              "kind": "this",
              "this": true
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/slash/ApplicationCommandOption.ts",
            "line": 224,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "addSubCommand",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "fn",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "fnOrConstructor",
                  "fnOrConstructor": {
                    "constructor": false,
                    "tsType": {
                      "repr": "OptionBuilderNested",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "OptionBuilderNested"
                      }
                    },
                    "params": [
                      {
                        "kind": "identifier",
                        "name": "option",
                        "optional": false,
                        "tsType": {
                          "repr": "OptionBuilderNested",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "OptionBuilderNested"
                          }
                        }
                      }
                    ],
                    "typeParams": []
                  }
                }
              }
            ],
            "returnType": {
              "repr": "this",
              "kind": "this",
              "this": true
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/slash/ApplicationCommandOption.ts",
            "line": 228,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "addSubCommandGroup",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "fn",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "fnOrConstructor",
                  "fnOrConstructor": {
                    "constructor": false,
                    "tsType": {
                      "repr": "OptionBuilderNested",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "OptionBuilderNested"
                      }
                    },
                    "params": [
                      {
                        "kind": "identifier",
                        "name": "option",
                        "optional": false,
                        "tsType": {
                          "repr": "OptionBuilderNested",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "OptionBuilderNested"
                          }
                        }
                      }
                    ],
                    "typeParams": []
                  }
                }
              }
            ],
            "returnType": {
              "repr": "this",
              "kind": "this",
              "this": true
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/slash/ApplicationCommandOption.ts",
            "line": 235,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "addUserOption",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "fn",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "fnOrConstructor",
                  "fnOrConstructor": {
                    "constructor": false,
                    "tsType": {
                      "repr": "OptionBuilder",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "OptionBuilder"
                      }
                    },
                    "params": [
                      {
                        "kind": "identifier",
                        "name": "option",
                        "optional": false,
                        "tsType": {
                          "repr": "OptionBuilder",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "OptionBuilder"
                          }
                        }
                      }
                    ],
                    "typeParams": []
                  }
                }
              }
            ],
            "returnType": {
              "repr": "this",
              "kind": "this",
              "this": true
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/slash/ApplicationCommandOption.ts",
            "line": 242,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "addChannelOption",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "fn",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "fnOrConstructor",
                  "fnOrConstructor": {
                    "constructor": false,
                    "tsType": {
                      "repr": "OptionBuilderChannel",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "OptionBuilderChannel"
                      }
                    },
                    "params": [
                      {
                        "kind": "identifier",
                        "name": "option",
                        "optional": false,
                        "tsType": {
                          "repr": "OptionBuilderChannel",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "OptionBuilderChannel"
                          }
                        }
                      }
                    ],
                    "typeParams": []
                  }
                }
              }
            ],
            "returnType": {
              "repr": "this",
              "kind": "this",
              "this": true
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/slash/ApplicationCommandOption.ts",
            "line": 246,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "addRoleOption",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "fn",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "fnOrConstructor",
                  "fnOrConstructor": {
                    "constructor": false,
                    "tsType": {
                      "repr": "OptionBuilder",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "OptionBuilder"
                      }
                    },
                    "params": [
                      {
                        "kind": "identifier",
                        "name": "option",
                        "optional": false,
                        "tsType": {
                          "repr": "OptionBuilder",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "OptionBuilder"
                          }
                        }
                      }
                    ],
                    "typeParams": []
                  }
                }
              }
            ],
            "returnType": {
              "repr": "this",
              "kind": "this",
              "this": true
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/slash/ApplicationCommandOption.ts",
            "line": 253,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "addMentionableOption",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "fn",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "fnOrConstructor",
                  "fnOrConstructor": {
                    "constructor": false,
                    "tsType": {
                      "repr": "OptionBuilder",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "OptionBuilder"
                      }
                    },
                    "params": [
                      {
                        "kind": "identifier",
                        "name": "option",
                        "optional": false,
                        "tsType": {
                          "repr": "OptionBuilder",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "OptionBuilder"
                          }
                        }
                      }
                    ],
                    "typeParams": []
                  }
                }
              }
            ],
            "returnType": {
              "repr": "this",
              "kind": "this",
              "this": true
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/slash/ApplicationCommandOption.ts",
            "line": 257,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": true,
          "name": "applyTo",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "klass",
                "optional": false,
                "tsType": {
                  "repr": "Function",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Function"
                  }
                }
              },
              {
                "kind": "assign",
                "left": {
                  "kind": "identifier",
                  "name": "ignore",
                  "optional": false,
                  "tsType": {
                    "repr": "Array",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": [
                        {
                          "repr": "",
                          "kind": "typeOperator",
                          "typeOperator": {
                            "operator": "keyof",
                            "tsType": {
                              "repr": "OptionBased",
                              "kind": "typeRef",
                              "typeRef": {
                                "typeParams": null,
                                "typeName": "OptionBased"
                              }
                            }
                          }
                        }
                      ],
                      "typeName": "Array"
                    }
                  }
                },
                "right": "[UNSUPPORTED]",
                "tsType": null
              }
            ],
            "returnType": {
              "repr": "void",
              "kind": "keyword",
              "keyword": "void"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/slash/ApplicationCommandOption.ts",
            "line": 262,
            "col": 4
          }
        }
      ],
      "extends": null,
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "class",
    "name": "OptionBuilderNested",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/slash/ApplicationCommandOption.ts",
      "line": 286,
      "col": 0
    },
    "declarationKind": "export",
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "type",
              "optional": true,
              "tsType": {
                "repr": "",
                "kind": "union",
                "union": [
                  {
                    "repr": "ApplicationCommandOptionTypes.SubCommand",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "ApplicationCommandOptionTypes.SubCommand"
                    }
                  },
                  {
                    "repr": "ApplicationCommandOptionTypes.SubCommandGroup",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "ApplicationCommandOptionTypes.SubCommandGroup"
                    }
                  }
                ]
              }
            },
            {
              "kind": "identifier",
              "name": "name",
              "optional": true,
              "tsType": {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              }
            },
            {
              "kind": "identifier",
              "name": "description",
              "optional": true,
              "tsType": {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              }
            }
          ],
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/slash/ApplicationCommandOption.ts",
            "line": 287,
            "col": 4
          }
        }
      ],
      "properties": [],
      "indexSignatures": [],
      "methods": [
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "toJSON",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "ApplicationCommandOption",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "ApplicationCommandOption"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/slash/ApplicationCommandOption.ts",
            "line": 298,
            "col": 4
          }
        }
      ],
      "extends": "OptionBuilder",
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "OptionBuilderNested",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/slash/ApplicationCommandOption.ts",
      "line": 317,
      "col": 0
    },
    "declarationKind": "export",
    "interfaceDef": {
      "extends": [
        {
          "repr": "OptionBuilder",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "OptionBuilder"
          }
        },
        {
          "repr": "OptionBased",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "OptionBased"
          }
        }
      ],
      "methods": [],
      "properties": [],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "ApplicationCommandOption",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/slash/ApplicationCommandOption.ts",
      "line": 321,
      "col": 0
    },
    "declarationKind": "export",
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "type",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/slash/ApplicationCommandOption.ts",
            "line": 323,
            "col": 4
          },
          "jsDoc": {
            "doc": "Value of Application Command Option Type"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "ApplicationCommandOptionTypes",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "ApplicationCommandOptionTypes"
            }
          },
          "typeParams": []
        },
        {
          "name": "name",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/slash/ApplicationCommandOption.ts",
            "line": 325,
            "col": 4
          },
          "jsDoc": {
            "doc": "1-32 character name matching lowercase `^[\\w-]{1,32}$`"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "nameLocalizations",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/slash/ApplicationCommandOption.ts",
            "line": 327,
            "col": 4
          },
          "jsDoc": {
            "doc": "Localization object for the `name` field. Values follow the same restrictions as `name`"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "Localization",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Localization"
            }
          },
          "typeParams": []
        },
        {
          "name": "description",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/slash/ApplicationCommandOption.ts",
            "line": 329,
            "col": 4
          },
          "jsDoc": {
            "doc": "1-100 character description"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "descriptionLocalizations",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/slash/ApplicationCommandOption.ts",
            "line": 331,
            "col": 4
          },
          "jsDoc": {
            "doc": "Localization object for the `description` field. Values follow the same restrictions as `description`"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "Localization",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Localization"
            }
          },
          "typeParams": []
        },
        {
          "name": "required",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/slash/ApplicationCommandOption.ts",
            "line": 333,
            "col": 4
          },
          "jsDoc": {
            "doc": "If the parameter is required or optional--default `false`"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        },
        {
          "name": "choices",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/slash/ApplicationCommandOption.ts",
            "line": 335,
            "col": 4
          },
          "jsDoc": {
            "doc": "Choices for `string` and `int` types for the user to pick from"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "ApplicationCommandOptionChoice",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "ApplicationCommandOptionChoice"
              }
            }
          },
          "typeParams": []
        },
        {
          "name": "options",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/slash/ApplicationCommandOption.ts",
            "line": 337,
            "col": 4
          },
          "jsDoc": {
            "doc": "If the option is a subcommand or subcommand group type, this nested options will be the parameters"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "ApplicationCommandOption",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "ApplicationCommandOption"
              }
            }
          },
          "typeParams": []
        },
        {
          "name": "autocomplete",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/slash/ApplicationCommandOption.ts",
            "line": 339,
            "col": 4
          },
          "jsDoc": {
            "doc": "if autocomplete interactions are enabled for this `String`, `Integer`, or `Number` type option"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        },
        {
          "name": "channelTypes",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/slash/ApplicationCommandOption.ts",
            "line": 341,
            "col": 4
          },
          "jsDoc": {
            "doc": "If the option is a channel type, the channels shown will be restricted to these types"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "ChannelTypes",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "ChannelTypes"
              }
            }
          },
          "typeParams": []
        },
        {
          "name": "minValue",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/slash/ApplicationCommandOption.ts",
            "line": 343,
            "col": 4
          },
          "jsDoc": {
            "doc": "Minimum number desired."
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "maxValue",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/slash/ApplicationCommandOption.ts",
            "line": 345,
            "col": 4
          },
          "jsDoc": {
            "doc": "Maximum number desired."
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "import",
    "name": "ApplicationCommandOptionTypes",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/slash/ApplicationCommandOption.ts",
      "line": 1,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
      "imported": "ApplicationCommandOptionTypes"
    }
  },
  {
    "kind": "import",
    "name": "ChannelTypes",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/slash/ApplicationCommandOption.ts",
      "line": 1,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
      "imported": "ChannelTypes"
    }
  },
  {
    "kind": "import",
    "name": "Localization",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/slash/ApplicationCommandOption.ts",
      "line": 1,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
      "imported": "Localization"
    }
  },
  {
    "kind": "import",
    "name": "ApplicationCommandOptionChoice",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/slash/ApplicationCommandOption.ts",
      "line": 2,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/BaseInteraction.ts",
      "imported": "ApplicationCommandOptionChoice"
    }
  },
  {
    "kind": "namespace",
    "name": "Routes",
    "location": {
      "filename": "./Routes.ts",
      "line": 1,
      "col": 0
    },
    "declarationKind": "export",
    "namespaceDef": {
      "elements": [
        {
          "kind": "function",
          "name": "USER_AVATAR",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/Cdn.ts",
            "line": 4,
            "col": 0
          },
          "declarationKind": "export",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "userId",
                "optional": false,
                "tsType": {
                  "repr": "Snowflake",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Snowflake"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "icon",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          }
        },
        {
          "kind": "function",
          "name": "EMOJI_URL",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/Cdn.ts",
            "line": 8,
            "col": 0
          },
          "declarationKind": "export",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "id",
                "optional": false,
                "tsType": {
                  "repr": "Snowflake",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Snowflake"
                  }
                }
              },
              {
                "kind": "assign",
                "left": {
                  "kind": "identifier",
                  "name": "animated",
                  "optional": false,
                  "tsType": null
                },
                "right": "[UNSUPPORTED]",
                "tsType": null
              }
            ],
            "returnType": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          }
        },
        {
          "kind": "function",
          "name": "USER_DEFAULT_AVATAR",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/Cdn.ts",
            "line": 12,
            "col": 0
          },
          "declarationKind": "export",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "altIcon",
                "optional": false,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                }
              }
            ],
            "returnType": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          }
        },
        {
          "kind": "function",
          "name": "GUILD_BANNER",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/Cdn.ts",
            "line": 19,
            "col": 0
          },
          "declarationKind": "export",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "guildId",
                "optional": false,
                "tsType": {
                  "repr": "Snowflake",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Snowflake"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "icon",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          }
        },
        {
          "kind": "function",
          "name": "GUILD_SPLASH",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/Cdn.ts",
            "line": 23,
            "col": 0
          },
          "declarationKind": "export",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "guildId",
                "optional": false,
                "tsType": {
                  "repr": "Snowflake",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Snowflake"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "icon",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          }
        },
        {
          "kind": "function",
          "name": "GUILD_ICON",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/Cdn.ts",
            "line": 27,
            "col": 0
          },
          "declarationKind": "export",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "guildId",
                "optional": false,
                "tsType": {
                  "repr": "Snowflake",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Snowflake"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "icon",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          }
        },
        {
          "kind": "import",
          "name": "Snowflake",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/Cdn.ts",
            "line": 1,
            "col": 0
          },
          "declarationKind": "private",
          "importDef": {
            "src": "file:///C:/code/js/biscuit/packages/biscuit/Snowflake.ts",
            "imported": "Snowflake"
          }
        },
        {
          "kind": "import",
          "name": "Endpoints",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/Cdn.ts",
            "line": 2,
            "col": 0
          },
          "declarationKind": "private",
          "importDef": {
            "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
            "imported": "baseEndpoints"
          }
        },
        {
          "kind": "function",
          "name": "USER",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/Routes.ts",
            "line": 6,
            "col": 0
          },
          "declarationKind": "export",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "userId",
                "optional": true,
                "tsType": {
                  "repr": "Snowflake",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Snowflake"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          }
        },
        {
          "kind": "function",
          "name": "GATEWAY_BOT",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/Routes.ts",
            "line": 11,
            "col": 0
          },
          "declarationKind": "export",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          }
        },
        {
          "kind": "interface",
          "name": "GetMessagesOptions",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/Routes.ts",
            "line": 15,
            "col": 0
          },
          "declarationKind": "export",
          "interfaceDef": {
            "extends": [],
            "methods": [],
            "properties": [
              {
                "name": "limit",
                "location": {
                  "filename": "file:///C:/code/js/biscuit/packages/biscuit/Routes.ts",
                  "line": 16,
                  "col": 4
                },
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                },
                "typeParams": []
              }
            ],
            "callSignatures": [],
            "indexSignatures": [],
            "typeParams": []
          }
        },
        {
          "kind": "interface",
          "name": "GetMessagesOptions",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/Routes.ts",
            "line": 19,
            "col": 0
          },
          "declarationKind": "export",
          "interfaceDef": {
            "extends": [],
            "methods": [],
            "properties": [
              {
                "name": "around",
                "location": {
                  "filename": "file:///C:/code/js/biscuit/packages/biscuit/Routes.ts",
                  "line": 20,
                  "col": 4
                },
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "Snowflake",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Snowflake"
                  }
                },
                "typeParams": []
              },
              {
                "name": "limit",
                "location": {
                  "filename": "file:///C:/code/js/biscuit/packages/biscuit/Routes.ts",
                  "line": 21,
                  "col": 4
                },
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                },
                "typeParams": []
              }
            ],
            "callSignatures": [],
            "indexSignatures": [],
            "typeParams": []
          }
        },
        {
          "kind": "interface",
          "name": "GetMessagesOptions",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/Routes.ts",
            "line": 24,
            "col": 0
          },
          "declarationKind": "export",
          "interfaceDef": {
            "extends": [],
            "methods": [],
            "properties": [
              {
                "name": "before",
                "location": {
                  "filename": "file:///C:/code/js/biscuit/packages/biscuit/Routes.ts",
                  "line": 25,
                  "col": 4
                },
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "Snowflake",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Snowflake"
                  }
                },
                "typeParams": []
              },
              {
                "name": "limit",
                "location": {
                  "filename": "file:///C:/code/js/biscuit/packages/biscuit/Routes.ts",
                  "line": 26,
                  "col": 4
                },
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                },
                "typeParams": []
              }
            ],
            "callSignatures": [],
            "indexSignatures": [],
            "typeParams": []
          }
        },
        {
          "kind": "interface",
          "name": "GetMessagesOptions",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/Routes.ts",
            "line": 29,
            "col": 0
          },
          "declarationKind": "export",
          "interfaceDef": {
            "extends": [],
            "methods": [],
            "properties": [
              {
                "name": "after",
                "location": {
                  "filename": "file:///C:/code/js/biscuit/packages/biscuit/Routes.ts",
                  "line": 30,
                  "col": 4
                },
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "Snowflake",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Snowflake"
                  }
                },
                "typeParams": []
              },
              {
                "name": "limit",
                "location": {
                  "filename": "file:///C:/code/js/biscuit/packages/biscuit/Routes.ts",
                  "line": 31,
                  "col": 4
                },
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                },
                "typeParams": []
              }
            ],
            "callSignatures": [],
            "indexSignatures": [],
            "typeParams": []
          }
        },
        {
          "kind": "function",
          "name": "CHANNEL",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/Routes.ts",
            "line": 34,
            "col": 0
          },
          "declarationKind": "export",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "channelId",
                "optional": false,
                "tsType": {
                  "repr": "Snowflake",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Snowflake"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          }
        },
        {
          "kind": "function",
          "name": "CHANNEL_INVITES",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/Routes.ts",
            "line": 38,
            "col": 0
          },
          "declarationKind": "export",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "channelId",
                "optional": false,
                "tsType": {
                  "repr": "Snowflake",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Snowflake"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          }
        },
        {
          "kind": "function",
          "name": "CHANNEL_TYPING",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/Routes.ts",
            "line": 42,
            "col": 0
          },
          "declarationKind": "export",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "channelId",
                "optional": false,
                "tsType": {
                  "repr": "Snowflake",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Snowflake"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          }
        },
        {
          "kind": "function",
          "name": "CHANNEL_CREATE_THREAD",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/Routes.ts",
            "line": 46,
            "col": 0
          },
          "declarationKind": "export",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "channelId",
                "optional": false,
                "tsType": {
                  "repr": "Snowflake",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Snowflake"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          }
        },
        {
          "kind": "function",
          "name": "MESSAGE_CREATE_THREAD",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/Routes.ts",
            "line": 50,
            "col": 0
          },
          "declarationKind": "export",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "channelId",
                "optional": false,
                "tsType": {
                  "repr": "Snowflake",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Snowflake"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "messageId",
                "optional": false,
                "tsType": {
                  "repr": "Snowflake",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Snowflake"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          }
        },
        {
          "kind": "function",
          "name": "CHANNEL_MESSAGES",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/Routes.ts",
            "line": 55,
            "col": 0
          },
          "declarationKind": "export",
          "jsDoc": {
            "doc": "used to send messages"
          },
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "channelId",
                "optional": false,
                "tsType": {
                  "repr": "Snowflake",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Snowflake"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "options",
                "optional": true,
                "tsType": {
                  "repr": "GetMessagesOptions",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "GetMessagesOptions"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          }
        },
        {
          "kind": "function",
          "name": "CHANNEL_MESSAGE",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/Routes.ts",
            "line": 69,
            "col": 0
          },
          "declarationKind": "export",
          "jsDoc": {
            "doc": "used to edit messages"
          },
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "channelId",
                "optional": false,
                "tsType": {
                  "repr": "Snowflake",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Snowflake"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "messageId",
                "optional": false,
                "tsType": {
                  "repr": "Snowflake",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Snowflake"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          }
        },
        {
          "kind": "function",
          "name": "GUILD_MEMBER",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/Routes.ts",
            "line": 74,
            "col": 0
          },
          "declarationKind": "export",
          "jsDoc": {
            "doc": "used to kick members"
          },
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "guildId",
                "optional": false,
                "tsType": {
                  "repr": "Snowflake",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Snowflake"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "userId",
                "optional": false,
                "tsType": {
                  "repr": "Snowflake",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Snowflake"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          }
        },
        {
          "kind": "function",
          "name": "GUILD_BAN",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/Routes.ts",
            "line": 79,
            "col": 0
          },
          "declarationKind": "export",
          "jsDoc": {
            "doc": "used to ban members"
          },
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "guildId",
                "optional": false,
                "tsType": {
                  "repr": "Snowflake",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Snowflake"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "userId",
                "optional": false,
                "tsType": {
                  "repr": "Snowflake",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Snowflake"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          }
        },
        {
          "kind": "interface",
          "name": "GetBans",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/Routes.ts",
            "line": 83,
            "col": 0
          },
          "declarationKind": "export",
          "interfaceDef": {
            "extends": [],
            "methods": [],
            "properties": [
              {
                "name": "limit",
                "location": {
                  "filename": "file:///C:/code/js/biscuit/packages/biscuit/Routes.ts",
                  "line": 84,
                  "col": 4
                },
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                },
                "typeParams": []
              },
              {
                "name": "before",
                "location": {
                  "filename": "file:///C:/code/js/biscuit/packages/biscuit/Routes.ts",
                  "line": 85,
                  "col": 4
                },
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "Snowflake",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Snowflake"
                  }
                },
                "typeParams": []
              },
              {
                "name": "after",
                "location": {
                  "filename": "file:///C:/code/js/biscuit/packages/biscuit/Routes.ts",
                  "line": 86,
                  "col": 4
                },
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "Snowflake",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Snowflake"
                  }
                },
                "typeParams": []
              }
            ],
            "callSignatures": [],
            "indexSignatures": [],
            "typeParams": []
          }
        },
        {
          "kind": "function",
          "name": "GUILD_BANS",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/Routes.ts",
            "line": 90,
            "col": 0
          },
          "declarationKind": "export",
          "jsDoc": {
            "doc": "used to unban members"
          },
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "guildId",
                "optional": false,
                "tsType": {
                  "repr": "Snowflake",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Snowflake"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "options",
                "optional": true,
                "tsType": {
                  "repr": "GetBans",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "GetBans"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          }
        },
        {
          "kind": "function",
          "name": "GUILD_ROLE",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/Routes.ts",
            "line": 102,
            "col": 0
          },
          "declarationKind": "export",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "guildId",
                "optional": false,
                "tsType": {
                  "repr": "Snowflake",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Snowflake"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "roleId",
                "optional": false,
                "tsType": {
                  "repr": "Snowflake",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Snowflake"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          }
        },
        {
          "kind": "function",
          "name": "GUILD_ROLES",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/Routes.ts",
            "line": 106,
            "col": 0
          },
          "declarationKind": "export",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "guildId",
                "optional": false,
                "tsType": {
                  "repr": "Snowflake",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Snowflake"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          }
        },
        {
          "kind": "function",
          "name": "USER_DM",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/Routes.ts",
            "line": 110,
            "col": 0
          },
          "declarationKind": "export",
          "functionDef": {
            "params": [],
            "returnType": null,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          }
        },
        {
          "kind": "function",
          "name": "GUILD_EMOJIS",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/Routes.ts",
            "line": 114,
            "col": 0
          },
          "declarationKind": "export",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "guildId",
                "optional": false,
                "tsType": {
                  "repr": "Snowflake",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Snowflake"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          }
        },
        {
          "kind": "function",
          "name": "GUILD_EMOJI",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/Routes.ts",
            "line": 118,
            "col": 0
          },
          "declarationKind": "export",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "guildId",
                "optional": false,
                "tsType": {
                  "repr": "Snowflake",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Snowflake"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "emojiId",
                "optional": false,
                "tsType": {
                  "repr": "Snowflake",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Snowflake"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          }
        },
        {
          "kind": "interface",
          "name": "GetInvite",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/Routes.ts",
            "line": 122,
            "col": 0
          },
          "declarationKind": "export",
          "interfaceDef": {
            "extends": [],
            "methods": [],
            "properties": [
              {
                "name": "withCounts",
                "location": {
                  "filename": "file:///C:/code/js/biscuit/packages/biscuit/Routes.ts",
                  "line": 123,
                  "col": 4
                },
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "boolean",
                  "kind": "keyword",
                  "keyword": "boolean"
                },
                "typeParams": []
              },
              {
                "name": "withExpiration",
                "location": {
                  "filename": "file:///C:/code/js/biscuit/packages/biscuit/Routes.ts",
                  "line": 124,
                  "col": 4
                },
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "boolean",
                  "kind": "keyword",
                  "keyword": "boolean"
                },
                "typeParams": []
              },
              {
                "name": "scheduledEventId",
                "location": {
                  "filename": "file:///C:/code/js/biscuit/packages/biscuit/Routes.ts",
                  "line": 125,
                  "col": 4
                },
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "Snowflake",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Snowflake"
                  }
                },
                "typeParams": []
              }
            ],
            "callSignatures": [],
            "indexSignatures": [],
            "typeParams": []
          }
        },
        {
          "kind": "function",
          "name": "GUILDS",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/Routes.ts",
            "line": 128,
            "col": 0
          },
          "declarationKind": "export",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          }
        },
        {
          "kind": "function",
          "name": "AUTO_MODERATION_RULES",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/Routes.ts",
            "line": 132,
            "col": 0
          },
          "declarationKind": "export",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "guildId",
                "optional": false,
                "tsType": {
                  "repr": "Snowflake",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Snowflake"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "ruleId",
                "optional": true,
                "tsType": {
                  "repr": "Snowflake",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Snowflake"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          }
        },
        {
          "kind": "function",
          "name": "INVITE",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/Routes.ts",
            "line": 139,
            "col": 0
          },
          "declarationKind": "export",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "inviteCode",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "options",
                "optional": true,
                "tsType": {
                  "repr": "GetInvite",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "GetInvite"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          }
        },
        {
          "kind": "function",
          "name": "GUILD_INVITES",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/Routes.ts",
            "line": 151,
            "col": 0
          },
          "declarationKind": "export",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "guildId",
                "optional": false,
                "tsType": {
                  "repr": "Snowflake",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Snowflake"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          }
        },
        {
          "kind": "function",
          "name": "INTERACTION_ID_TOKEN",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/Routes.ts",
            "line": 155,
            "col": 0
          },
          "declarationKind": "export",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "interactionId",
                "optional": false,
                "tsType": {
                  "repr": "Snowflake",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Snowflake"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "token",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          }
        },
        {
          "kind": "function",
          "name": "WEBHOOK_MESSAGE_ORIGINAL",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/Routes.ts",
            "line": 159,
            "col": 0
          },
          "declarationKind": "export",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "webhookId",
                "optional": false,
                "tsType": {
                  "repr": "Snowflake",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Snowflake"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "token",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "options",
                "optional": true,
                "tsType": {
                  "repr": "",
                  "kind": "typeLiteral",
                  "typeLiteral": {
                    "methods": [],
                    "properties": [
                      {
                        "name": "threadId",
                        "params": [],
                        "computed": false,
                        "optional": true,
                        "tsType": {
                          "repr": "bigint",
                          "kind": "keyword",
                          "keyword": "bigint"
                        },
                        "typeParams": []
                      }
                    ],
                    "callSignatures": [],
                    "indexSignatures": []
                  }
                }
              }
            ],
            "returnType": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          }
        },
        {
          "kind": "function",
          "name": "WEBHOOK_MESSAGE",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/Routes.ts",
            "line": 169,
            "col": 0
          },
          "declarationKind": "export",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "webhookId",
                "optional": false,
                "tsType": {
                  "repr": "Snowflake",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Snowflake"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "token",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "messageId",
                "optional": false,
                "tsType": {
                  "repr": "Snowflake",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Snowflake"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "options",
                "optional": true,
                "tsType": {
                  "repr": "",
                  "kind": "typeLiteral",
                  "typeLiteral": {
                    "methods": [],
                    "properties": [
                      {
                        "name": "threadId",
                        "params": [],
                        "computed": false,
                        "optional": true,
                        "tsType": {
                          "repr": "Snowflake",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "Snowflake"
                          }
                        },
                        "typeParams": []
                      }
                    ],
                    "callSignatures": [],
                    "indexSignatures": []
                  }
                }
              }
            ],
            "returnType": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          }
        },
        {
          "kind": "function",
          "name": "WEBHOOK_TOKEN",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/Routes.ts",
            "line": 184,
            "col": 0
          },
          "declarationKind": "export",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "webhookId",
                "optional": false,
                "tsType": {
                  "repr": "Snowflake",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Snowflake"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "token",
                "optional": true,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          }
        },
        {
          "kind": "interface",
          "name": "WebhookOptions",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/Routes.ts",
            "line": 189,
            "col": 0
          },
          "declarationKind": "export",
          "interfaceDef": {
            "extends": [],
            "methods": [],
            "properties": [
              {
                "name": "wait",
                "location": {
                  "filename": "file:///C:/code/js/biscuit/packages/biscuit/Routes.ts",
                  "line": 190,
                  "col": 4
                },
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "boolean",
                  "kind": "keyword",
                  "keyword": "boolean"
                },
                "typeParams": []
              },
              {
                "name": "threadId",
                "location": {
                  "filename": "file:///C:/code/js/biscuit/packages/biscuit/Routes.ts",
                  "line": 191,
                  "col": 4
                },
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "Snowflake",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Snowflake"
                  }
                },
                "typeParams": []
              }
            ],
            "callSignatures": [],
            "indexSignatures": [],
            "typeParams": []
          }
        },
        {
          "kind": "function",
          "name": "WEBHOOK",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/Routes.ts",
            "line": 194,
            "col": 0
          },
          "declarationKind": "export",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "webhookId",
                "optional": false,
                "tsType": {
                  "repr": "Snowflake",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Snowflake"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "token",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "options",
                "optional": true,
                "tsType": {
                  "repr": "WebhookOptions",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "WebhookOptions"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          }
        },
        {
          "kind": "function",
          "name": "USER_NICK",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/Routes.ts",
            "line": 204,
            "col": 0
          },
          "declarationKind": "export",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "guildId",
                "optional": false,
                "tsType": {
                  "repr": "Snowflake",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Snowflake"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          }
        },
        {
          "kind": "interface",
          "name": "GetGuildPruneCountQuery",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/Routes.ts",
            "line": 211,
            "col": 0
          },
          "declarationKind": "export",
          "jsDoc": {
            "tags": [
              {
                "kind": "unsupported",
                "value": "@link https://discord.com/developers/docs/resources/guild#get-guild-prune-count"
              }
            ]
          },
          "interfaceDef": {
            "extends": [],
            "methods": [],
            "properties": [
              {
                "name": "days",
                "location": {
                  "filename": "file:///C:/code/js/biscuit/packages/biscuit/Routes.ts",
                  "line": 212,
                  "col": 4
                },
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                },
                "typeParams": []
              },
              {
                "name": "includeRoles",
                "location": {
                  "filename": "file:///C:/code/js/biscuit/packages/biscuit/Routes.ts",
                  "line": 213,
                  "col": 4
                },
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "Snowflake",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "Snowflake"
                      }
                    },
                    {
                      "repr": "",
                      "kind": "array",
                      "array": {
                        "repr": "Snowflake",
                        "kind": "typeRef",
                        "typeRef": {
                          "typeParams": null,
                          "typeName": "Snowflake"
                        }
                      }
                    }
                  ]
                },
                "typeParams": []
              }
            ],
            "callSignatures": [],
            "indexSignatures": [],
            "typeParams": []
          }
        },
        {
          "kind": "function",
          "name": "GUILD_PRUNE",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/Routes.ts",
            "line": 216,
            "col": 0
          },
          "declarationKind": "export",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "guildId",
                "optional": false,
                "tsType": {
                  "repr": "Snowflake",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Snowflake"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "options",
                "optional": true,
                "tsType": {
                  "repr": "GetGuildPruneCountQuery",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "GetGuildPruneCountQuery"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          }
        },
        {
          "kind": "function",
          "name": "CHANNEL_PIN",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/Routes.ts",
            "line": 225,
            "col": 0
          },
          "declarationKind": "export",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "channelId",
                "optional": false,
                "tsType": {
                  "repr": "Snowflake",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Snowflake"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "messageId",
                "optional": false,
                "tsType": {
                  "repr": "Snowflake",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Snowflake"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          }
        },
        {
          "kind": "function",
          "name": "CHANNEL_PINS",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/Routes.ts",
            "line": 229,
            "col": 0
          },
          "declarationKind": "export",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "channelId",
                "optional": false,
                "tsType": {
                  "repr": "Snowflake",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Snowflake"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          }
        },
        {
          "kind": "function",
          "name": "CHANNEL_MESSAGE_REACTION_ME",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/Routes.ts",
            "line": 233,
            "col": 0
          },
          "declarationKind": "export",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "channelId",
                "optional": false,
                "tsType": {
                  "repr": "Snowflake",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Snowflake"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "messageId",
                "optional": false,
                "tsType": {
                  "repr": "Snowflake",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Snowflake"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "emoji",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          }
        },
        {
          "kind": "function",
          "name": "CHANNEL_MESSAGE_REACTION_USER",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/Routes.ts",
            "line": 237,
            "col": 0
          },
          "declarationKind": "export",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "channelId",
                "optional": false,
                "tsType": {
                  "repr": "Snowflake",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Snowflake"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "messageId",
                "optional": false,
                "tsType": {
                  "repr": "Snowflake",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Snowflake"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "emoji",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "userId",
                "optional": false,
                "tsType": {
                  "repr": "Snowflake",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Snowflake"
                  }
                }
              }
            ],
            "returnType": null,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          }
        },
        {
          "kind": "function",
          "name": "CHANNEL_MESSAGE_REACTIONS",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/Routes.ts",
            "line": 246,
            "col": 0
          },
          "declarationKind": "export",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "channelId",
                "optional": false,
                "tsType": {
                  "repr": "Snowflake",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Snowflake"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "messageId",
                "optional": false,
                "tsType": {
                  "repr": "Snowflake",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Snowflake"
                  }
                }
              }
            ],
            "returnType": null,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          }
        },
        {
          "kind": "interface",
          "name": "GetReactions",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/Routes.ts",
            "line": 253,
            "col": 0
          },
          "declarationKind": "export",
          "jsDoc": {
            "tags": [
              {
                "kind": "unsupported",
                "value": "@link https://discord.com/developers/docs/resources/channel#get-reactions-query-string-params"
              }
            ]
          },
          "interfaceDef": {
            "extends": [],
            "methods": [],
            "properties": [
              {
                "name": "after",
                "location": {
                  "filename": "file:///C:/code/js/biscuit/packages/biscuit/Routes.ts",
                  "line": 254,
                  "col": 4
                },
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                "typeParams": []
              },
              {
                "name": "limit",
                "location": {
                  "filename": "file:///C:/code/js/biscuit/packages/biscuit/Routes.ts",
                  "line": 255,
                  "col": 4
                },
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                },
                "typeParams": []
              }
            ],
            "callSignatures": [],
            "indexSignatures": [],
            "typeParams": []
          }
        },
        {
          "kind": "function",
          "name": "CHANNEL_MESSAGE_REACTION",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/Routes.ts",
            "line": 258,
            "col": 0
          },
          "declarationKind": "export",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "channelId",
                "optional": false,
                "tsType": {
                  "repr": "Snowflake",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Snowflake"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "messageId",
                "optional": false,
                "tsType": {
                  "repr": "Snowflake",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Snowflake"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "emoji",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "options",
                "optional": true,
                "tsType": {
                  "repr": "GetReactions",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "GetReactions"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          }
        },
        {
          "kind": "function",
          "name": "CHANNEL_MESSAGE_CROSSPOST",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/Routes.ts",
            "line": 272,
            "col": 0
          },
          "declarationKind": "export",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "channelId",
                "optional": false,
                "tsType": {
                  "repr": "Snowflake",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Snowflake"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "messageId",
                "optional": false,
                "tsType": {
                  "repr": "Snowflake",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Snowflake"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          }
        },
        {
          "kind": "function",
          "name": "GUILD_MEMBER_ROLE",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/Routes.ts",
            "line": 276,
            "col": 0
          },
          "declarationKind": "export",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "guildId",
                "optional": false,
                "tsType": {
                  "repr": "Snowflake",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Snowflake"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "memberId",
                "optional": false,
                "tsType": {
                  "repr": "Snowflake",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Snowflake"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "roleId",
                "optional": false,
                "tsType": {
                  "repr": "Snowflake",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Snowflake"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          }
        },
        {
          "kind": "function",
          "name": "CHANNEL_WEBHOOKS",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/Routes.ts",
            "line": 280,
            "col": 0
          },
          "declarationKind": "export",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "channelId",
                "optional": false,
                "tsType": {
                  "repr": "Snowflake",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Snowflake"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          }
        },
        {
          "kind": "function",
          "name": "THREAD_START_PUBLIC",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/Routes.ts",
            "line": 284,
            "col": 0
          },
          "declarationKind": "export",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "channelId",
                "optional": false,
                "tsType": {
                  "repr": "Snowflake",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Snowflake"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "messageId",
                "optional": false,
                "tsType": {
                  "repr": "Snowflake",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Snowflake"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          }
        },
        {
          "kind": "function",
          "name": "THREAD_START_PRIVATE",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/Routes.ts",
            "line": 288,
            "col": 0
          },
          "declarationKind": "export",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "channelId",
                "optional": false,
                "tsType": {
                  "repr": "Snowflake",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Snowflake"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          }
        },
        {
          "kind": "function",
          "name": "THREAD_ACTIVE",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/Routes.ts",
            "line": 292,
            "col": 0
          },
          "declarationKind": "export",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "guildId",
                "optional": false,
                "tsType": {
                  "repr": "Snowflake",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Snowflake"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          }
        },
        {
          "kind": "interface",
          "name": "ListArchivedThreads",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/Routes.ts",
            "line": 296,
            "col": 0
          },
          "declarationKind": "export",
          "interfaceDef": {
            "extends": [],
            "methods": [],
            "properties": [
              {
                "name": "before",
                "location": {
                  "filename": "file:///C:/code/js/biscuit/packages/biscuit/Routes.ts",
                  "line": 297,
                  "col": 4
                },
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                },
                "typeParams": []
              },
              {
                "name": "limit",
                "location": {
                  "filename": "file:///C:/code/js/biscuit/packages/biscuit/Routes.ts",
                  "line": 298,
                  "col": 4
                },
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                },
                "typeParams": []
              }
            ],
            "callSignatures": [],
            "indexSignatures": [],
            "typeParams": []
          }
        },
        {
          "kind": "function",
          "name": "THREAD_ME",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/Routes.ts",
            "line": 301,
            "col": 0
          },
          "declarationKind": "export",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "channelId",
                "optional": false,
                "tsType": {
                  "repr": "Snowflake",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Snowflake"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          }
        },
        {
          "kind": "function",
          "name": "THREAD_MEMBERS",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/Routes.ts",
            "line": 305,
            "col": 0
          },
          "declarationKind": "export",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "channelId",
                "optional": false,
                "tsType": {
                  "repr": "Snowflake",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Snowflake"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          }
        },
        {
          "kind": "function",
          "name": "THREAD_USER",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/Routes.ts",
            "line": 309,
            "col": 0
          },
          "declarationKind": "export",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "channelId",
                "optional": false,
                "tsType": {
                  "repr": "Snowflake",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Snowflake"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "userId",
                "optional": false,
                "tsType": {
                  "repr": "Snowflake",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Snowflake"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          }
        },
        {
          "kind": "function",
          "name": "THREAD_ARCHIVED",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/Routes.ts",
            "line": 313,
            "col": 0
          },
          "declarationKind": "export",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "channelId",
                "optional": false,
                "tsType": {
                  "repr": "Snowflake",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Snowflake"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          }
        },
        {
          "kind": "function",
          "name": "THREAD_ARCHIVED_PUBLIC",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/Routes.ts",
            "line": 317,
            "col": 0
          },
          "declarationKind": "export",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "channelId",
                "optional": false,
                "tsType": {
                  "repr": "Snowflake",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Snowflake"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "options",
                "optional": true,
                "tsType": {
                  "repr": "ListArchivedThreads",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "ListArchivedThreads"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          }
        },
        {
          "kind": "function",
          "name": "THREAD_ARCHIVED_PRIVATE",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/Routes.ts",
            "line": 328,
            "col": 0
          },
          "declarationKind": "export",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "channelId",
                "optional": false,
                "tsType": {
                  "repr": "Snowflake",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Snowflake"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "options",
                "optional": true,
                "tsType": {
                  "repr": "ListArchivedThreads",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "ListArchivedThreads"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          }
        },
        {
          "kind": "function",
          "name": "THREAD_ARCHIVED_PRIVATE_JOINED",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/Routes.ts",
            "line": 339,
            "col": 0
          },
          "declarationKind": "export",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "channelId",
                "optional": false,
                "tsType": {
                  "repr": "Snowflake",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Snowflake"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "options",
                "optional": true,
                "tsType": {
                  "repr": "ListArchivedThreads",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "ListArchivedThreads"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          }
        },
        {
          "kind": "function",
          "name": "FORUM_START",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/Routes.ts",
            "line": 350,
            "col": 0
          },
          "declarationKind": "export",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "channelId",
                "optional": false,
                "tsType": {
                  "repr": "Snowflake",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Snowflake"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          }
        },
        {
          "kind": "function",
          "name": "STAGE_INSTANCES",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/Routes.ts",
            "line": 354,
            "col": 0
          },
          "declarationKind": "export",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          }
        },
        {
          "kind": "function",
          "name": "STAGE_INSTANCE",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/Routes.ts",
            "line": 358,
            "col": 0
          },
          "declarationKind": "export",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "channelId",
                "optional": false,
                "tsType": {
                  "repr": "Snowflake",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Snowflake"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          }
        },
        {
          "kind": "function",
          "name": "APPLICATION_COMMANDS",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/Routes.ts",
            "line": 362,
            "col": 0
          },
          "declarationKind": "export",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "appId",
                "optional": false,
                "tsType": {
                  "repr": "Snowflake",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Snowflake"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "commandId",
                "optional": true,
                "tsType": {
                  "repr": "Snowflake",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Snowflake"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          }
        },
        {
          "kind": "function",
          "name": "GUILD_APPLICATION_COMMANDS",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/Routes.ts",
            "line": 367,
            "col": 0
          },
          "declarationKind": "export",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "appId",
                "optional": false,
                "tsType": {
                  "repr": "Snowflake",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Snowflake"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "guildId",
                "optional": false,
                "tsType": {
                  "repr": "Snowflake",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Snowflake"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "commandId",
                "optional": true,
                "tsType": {
                  "repr": "Snowflake",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Snowflake"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          }
        },
        {
          "kind": "function",
          "name": "GUILD_APPLICATION_COMMANDS_PERMISSIONS",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/Routes.ts",
            "line": 372,
            "col": 0
          },
          "declarationKind": "export",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "appId",
                "optional": false,
                "tsType": {
                  "repr": "Snowflake",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Snowflake"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "guildId",
                "optional": false,
                "tsType": {
                  "repr": "Snowflake",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Snowflake"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "commandId",
                "optional": true,
                "tsType": {
                  "repr": "Snowflake",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Snowflake"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          }
        },
        {
          "kind": "function",
          "name": "APPLICATION_COMMANDS_LOCALIZATIONS",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/Routes.ts",
            "line": 381,
            "col": 0
          },
          "declarationKind": "export",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "appId",
                "optional": false,
                "tsType": {
                  "repr": "Snowflake",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Snowflake"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "commandId",
                "optional": false,
                "tsType": {
                  "repr": "Snowflake",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Snowflake"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "withLocalizations",
                "optional": true,
                "tsType": {
                  "repr": "boolean",
                  "kind": "keyword",
                  "keyword": "boolean"
                }
              }
            ],
            "returnType": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          }
        },
        {
          "kind": "function",
          "name": "GUILD_APPLICATION_COMMANDS_LOCALIZATIONS",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/Routes.ts",
            "line": 395,
            "col": 0
          },
          "declarationKind": "export",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "appId",
                "optional": false,
                "tsType": {
                  "repr": "Snowflake",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Snowflake"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "guildId",
                "optional": false,
                "tsType": {
                  "repr": "Snowflake",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Snowflake"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "commandId",
                "optional": false,
                "tsType": {
                  "repr": "Snowflake",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Snowflake"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "withLocalizations",
                "optional": true,
                "tsType": {
                  "repr": "boolean",
                  "kind": "keyword",
                  "keyword": "boolean"
                }
              }
            ],
            "returnType": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          }
        },
        {
          "kind": "function",
          "name": "STICKER",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/Routes.ts",
            "line": 410,
            "col": 0
          },
          "declarationKind": "export",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "id",
                "optional": false,
                "tsType": {
                  "repr": "Snowflake",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Snowflake"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          }
        },
        {
          "kind": "function",
          "name": "STICKER_PACKS",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/Routes.ts",
            "line": 414,
            "col": 0
          },
          "declarationKind": "export",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          }
        },
        {
          "kind": "function",
          "name": "GUILD_STICKERS",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/Routes.ts",
            "line": 418,
            "col": 0
          },
          "declarationKind": "export",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "guildId",
                "optional": false,
                "tsType": {
                  "repr": "Snowflake",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Snowflake"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "stickerId",
                "optional": true,
                "tsType": {
                  "repr": "Snowflake",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Snowflake"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          }
        },
        {
          "kind": "import",
          "name": "Snowflake",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/Routes.ts",
            "line": 1,
            "col": 0
          },
          "declarationKind": "private",
          "importDef": {
            "src": "file:///C:/code/js/biscuit/packages/biscuit/Snowflake.ts",
            "imported": "Snowflake"
          }
        }
      ]
    }
  },
  {
    "kind": "typeAlias",
    "name": "DiscordRawEventHandler",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/Session.ts",
      "line": 36,
      "col": 0
    },
    "declarationKind": "export",
    "typeAliasDef": {
      "tsType": {
        "repr": "",
        "kind": "fnOrConstructor",
        "fnOrConstructor": {
          "constructor": false,
          "tsType": {
            "repr": "unknown",
            "kind": "keyword",
            "keyword": "unknown"
          },
          "params": [
            {
              "kind": "identifier",
              "name": "shard",
              "optional": false,
              "tsType": {
                "repr": "Shard",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Shard"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "data",
              "optional": false,
              "tsType": {
                "repr": "DiscordGatewayPayload",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "DiscordGatewayPayload"
                }
              }
            }
          ],
          "typeParams": []
        }
      },
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "CreateApplicationCommand",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/Session.ts",
      "line": 43,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "tags": [
        {
          "kind": "unsupported",
          "value": "@link https://discord.com/developers/docs/interactions/application-commands#endpoints-json-params"
        }
      ]
    },
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "name",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/Session.ts",
            "line": 44,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "nameLocalizations",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/Session.ts",
            "line": 45,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "Localization",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Localization"
            }
          },
          "typeParams": []
        },
        {
          "name": "description",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/Session.ts",
            "line": 46,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "descriptionLocalizations",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/Session.ts",
            "line": 47,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "Localization",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Localization"
            }
          },
          "typeParams": []
        },
        {
          "name": "type",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/Session.ts",
            "line": 48,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "ApplicationCommandTypes",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "ApplicationCommandTypes"
            }
          },
          "typeParams": []
        },
        {
          "name": "options",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/Session.ts",
            "line": 49,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "DiscordApplicationCommandOption",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "DiscordApplicationCommandOption"
              }
            }
          },
          "typeParams": []
        },
        {
          "name": "defaultMemberPermissions",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/Session.ts",
            "line": 50,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "PermissionResolvable",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "PermissionResolvable"
            }
          },
          "typeParams": []
        },
        {
          "name": "dmPermission",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/Session.ts",
            "line": 51,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "CreateContextApplicationCommand",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/Session.ts",
      "line": 57,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "tags": [
        {
          "kind": "unsupported",
          "value": "@link https://discord.com/developers/docs/interactions/application-commands#endpoints-json-params"
        }
      ]
    },
    "interfaceDef": {
      "extends": [
        {
          "repr": "Omit",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": [
              {
                "repr": "CreateApplicationCommand",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "CreateApplicationCommand"
                }
              },
              {
                "repr": "options",
                "kind": "literal",
                "literal": {
                  "kind": "string",
                  "string": "options"
                }
              }
            ],
            "typeName": "Omit"
          }
        }
      ],
      "methods": [],
      "properties": [
        {
          "name": "type",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/Session.ts",
            "line": 58,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "ApplicationCommandTypes.Message",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "ApplicationCommandTypes.Message"
                }
              },
              {
                "repr": "ApplicationCommandTypes.User",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "ApplicationCommandTypes.User"
                }
              }
            ]
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "GetApplicationCommand",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/Session.ts",
      "line": 64,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "tags": [
        {
          "kind": "unsupported",
          "value": "@link https://discord.com/developers/docs/interactions/application-commands#endpoints-query-string-params"
        }
      ]
    },
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "guildId",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/Session.ts",
            "line": 65,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "Snowflake",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Snowflake"
            }
          },
          "typeParams": []
        },
        {
          "name": "withLocalizations",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/Session.ts",
            "line": 66,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "UpsertApplicationCommands",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/Session.ts",
      "line": 69,
      "col": 0
    },
    "declarationKind": "export",
    "interfaceDef": {
      "extends": [
        {
          "repr": "CreateApplicationCommand",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "CreateApplicationCommand"
          }
        }
      ],
      "methods": [],
      "properties": [
        {
          "name": "id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/Session.ts",
            "line": 70,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "Snowflake",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Snowflake"
            }
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "ApplicationCommandPermissions",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/Session.ts",
      "line": 76,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "tags": [
        {
          "kind": "unsupported",
          "value": "@link https://discord.com/developers/docs/interactions/application-commands#edit-application-command-permissions"
        }
      ]
    },
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/Session.ts",
            "line": 77,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "Snowflake",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Snowflake"
            }
          },
          "typeParams": []
        },
        {
          "name": "type",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/Session.ts",
            "line": 78,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "ApplicationCommandPermissionTypes",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "ApplicationCommandPermissionTypes"
            }
          },
          "typeParams": []
        },
        {
          "name": "permission",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/Session.ts",
            "line": 79,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "ApplicationCommandPermissions",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/Session.ts",
      "line": 85,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "tags": [
        {
          "kind": "unsupported",
          "value": "@link https://discord.com/developers/docs/interactions/application-commands#edit-application-command-permissions"
        }
      ]
    },
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/Session.ts",
            "line": 86,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "Snowflake",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Snowflake"
            }
          },
          "typeParams": []
        },
        {
          "name": "type",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/Session.ts",
            "line": 87,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "ApplicationCommandPermissionTypes",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "ApplicationCommandPermissionTypes"
            }
          },
          "typeParams": []
        },
        {
          "name": "permission",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/Session.ts",
            "line": 88,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "RestOptions",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/Session.ts",
      "line": 93,
      "col": 0
    },
    "declarationKind": "export",
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "secretKey",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/Session.ts",
            "line": 94,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "applicationId",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/Session.ts",
            "line": 95,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "Snowflake",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Snowflake"
            }
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "GatewayOptions",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/Session.ts",
      "line": 98,
      "col": 0
    },
    "declarationKind": "export",
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "botId",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/Session.ts",
            "line": 99,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "Snowflake",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Snowflake"
            }
          },
          "typeParams": []
        },
        {
          "name": "data",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/Session.ts",
            "line": 100,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "GatewayBot",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "GatewayBot"
            }
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "SessionOptions",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/Session.ts",
      "line": 103,
      "col": 0
    },
    "declarationKind": "export",
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "token",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/Session.ts",
            "line": 104,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "rawHandler",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/Session.ts",
            "line": 105,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "DiscordRawEventHandler",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "DiscordRawEventHandler"
            }
          },
          "typeParams": []
        },
        {
          "name": "intents",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/Session.ts",
            "line": 106,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "GatewayIntents",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "GatewayIntents"
            }
          },
          "typeParams": []
        },
        {
          "name": "rest",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/Session.ts",
            "line": 107,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "RestOptions",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "RestOptions"
            }
          },
          "typeParams": []
        },
        {
          "name": "gateway",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/Session.ts",
            "line": 108,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "GatewayOptions",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "GatewayOptions"
            }
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "StatusUpdate",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/Session.ts",
      "line": 114,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "tags": [
        {
          "kind": "unsupported",
          "value": "@link https://discord.com/developers/docs/topics/gateway#update-status"
        }
      ]
    },
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "activities",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/Session.ts",
            "line": 115,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "Activities",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "Activities"
              }
            }
          },
          "typeParams": []
        },
        {
          "name": "status",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/Session.ts",
            "line": 116,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "StatusTypes",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "StatusTypes"
            }
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "class",
    "name": "Session",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/Session.ts",
      "line": 123,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "Receives a Token, connects\nMost of the command implementations were adapted from Discordeno (https://github.com/discordeno/discordeno)"
    },
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "options",
              "optional": false,
              "tsType": {
                "repr": "SessionOptions",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "SessionOptions"
                }
              }
            }
          ],
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/Session.ts",
            "line": 148,
            "col": 4
          }
        }
      ],
      "properties": [
        {
          "tsType": {
            "repr": "SessionOptions",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "SessionOptions"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "options",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/Session.ts",
            "line": 124,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "ReturnType",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": [
                {
                  "repr": "createRestManager",
                  "kind": "typeQuery",
                  "typeQuery": "createRestManager"
                }
              ],
              "typeName": "ReturnType"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "rest",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/Session.ts",
            "line": 126,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "ReturnType",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": [
                {
                  "repr": "createGatewayManager",
                  "kind": "typeQuery",
                  "typeQuery": "createGatewayManager"
                }
              ],
              "typeName": "ReturnType"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "gateway",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/Session.ts",
            "line": 127,
            "col": 4
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "applicationId",
          "kind": "setter",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "id",
                "optional": false,
                "tsType": {
                  "repr": "Snowflake",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Snowflake"
                  }
                }
              }
            ],
            "returnType": null,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/Session.ts",
            "line": 132,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "applicationId",
          "kind": "getter",
          "functionDef": {
            "params": [],
            "returnType": null,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/Session.ts",
            "line": 136,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "botId",
          "kind": "setter",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "id",
                "optional": false,
                "tsType": {
                  "repr": "Snowflake",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Snowflake"
                  }
                }
              }
            ],
            "returnType": null,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/Session.ts",
            "line": 140,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "botId",
          "kind": "getter",
          "functionDef": {
            "params": [],
            "returnType": null,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/Session.ts",
            "line": 144,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "on",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "event",
                "optional": false,
                "tsType": {
                  "repr": "K",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "K"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "func",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "indexedAccess",
                  "indexedAccess": {
                    "readonly": false,
                    "objType": {
                      "repr": "Events",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "Events"
                      }
                    },
                    "indexType": {
                      "repr": "K",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "K"
                      }
                    }
                  }
                }
              }
            ],
            "returnType": {
              "repr": "this",
              "kind": "this",
              "this": true
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": [
              {
                "name": "K",
                "constraint": {
                  "repr": "",
                  "kind": "typeOperator",
                  "typeOperator": {
                    "operator": "keyof",
                    "tsType": {
                      "repr": "Events",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "Events"
                      }
                    }
                  }
                }
              }
            ]
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/Session.ts",
            "line": 184,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "on",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "event",
                "optional": false,
                "tsType": {
                  "repr": "K",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "K"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "func",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "fnOrConstructor",
                  "fnOrConstructor": {
                    "constructor": false,
                    "tsType": {
                      "repr": "unknown",
                      "kind": "keyword",
                      "keyword": "unknown"
                    },
                    "params": [
                      {
                        "kind": "rest",
                        "arg": {
                          "kind": "identifier",
                          "name": "args",
                          "optional": false,
                          "tsType": null
                        },
                        "tsType": {
                          "repr": "",
                          "kind": "array",
                          "array": {
                            "repr": "unknown",
                            "kind": "keyword",
                            "keyword": "unknown"
                          }
                        }
                      }
                    ],
                    "typeParams": []
                  }
                }
              }
            ],
            "returnType": {
              "repr": "this",
              "kind": "this",
              "this": true
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": [
              {
                "name": "K",
                "constraint": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ]
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/Session.ts",
            "line": 185,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "off",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "event",
                "optional": false,
                "tsType": {
                  "repr": "K",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "K"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "func",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "indexedAccess",
                  "indexedAccess": {
                    "readonly": false,
                    "objType": {
                      "repr": "Events",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "Events"
                      }
                    },
                    "indexType": {
                      "repr": "K",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "K"
                      }
                    }
                  }
                }
              }
            ],
            "returnType": {
              "repr": "this",
              "kind": "this",
              "this": true
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": [
              {
                "name": "K",
                "constraint": {
                  "repr": "",
                  "kind": "typeOperator",
                  "typeOperator": {
                    "operator": "keyof",
                    "tsType": {
                      "repr": "Events",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "Events"
                      }
                    }
                  }
                }
              }
            ]
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/Session.ts",
            "line": 189,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "off",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "event",
                "optional": false,
                "tsType": {
                  "repr": "K",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "K"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "func",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "fnOrConstructor",
                  "fnOrConstructor": {
                    "constructor": false,
                    "tsType": {
                      "repr": "unknown",
                      "kind": "keyword",
                      "keyword": "unknown"
                    },
                    "params": [
                      {
                        "kind": "rest",
                        "arg": {
                          "kind": "identifier",
                          "name": "args",
                          "optional": false,
                          "tsType": null
                        },
                        "tsType": {
                          "repr": "",
                          "kind": "array",
                          "array": {
                            "repr": "unknown",
                            "kind": "keyword",
                            "keyword": "unknown"
                          }
                        }
                      }
                    ],
                    "typeParams": []
                  }
                }
              }
            ],
            "returnType": {
              "repr": "this",
              "kind": "this",
              "this": true
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": [
              {
                "name": "K",
                "constraint": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ]
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/Session.ts",
            "line": 190,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "once",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "event",
                "optional": false,
                "tsType": {
                  "repr": "K",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "K"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "func",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "indexedAccess",
                  "indexedAccess": {
                    "readonly": false,
                    "objType": {
                      "repr": "Events",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "Events"
                      }
                    },
                    "indexType": {
                      "repr": "K",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "K"
                      }
                    }
                  }
                }
              }
            ],
            "returnType": {
              "repr": "this",
              "kind": "this",
              "this": true
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": [
              {
                "name": "K",
                "constraint": {
                  "repr": "",
                  "kind": "typeOperator",
                  "typeOperator": {
                    "operator": "keyof",
                    "tsType": {
                      "repr": "Events",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "Events"
                      }
                    }
                  }
                }
              }
            ]
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/Session.ts",
            "line": 194,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "once",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "event",
                "optional": false,
                "tsType": {
                  "repr": "K",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "K"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "func",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "fnOrConstructor",
                  "fnOrConstructor": {
                    "constructor": false,
                    "tsType": {
                      "repr": "unknown",
                      "kind": "keyword",
                      "keyword": "unknown"
                    },
                    "params": [
                      {
                        "kind": "rest",
                        "arg": {
                          "kind": "identifier",
                          "name": "args",
                          "optional": false,
                          "tsType": null
                        },
                        "tsType": {
                          "repr": "",
                          "kind": "array",
                          "array": {
                            "repr": "unknown",
                            "kind": "keyword",
                            "keyword": "unknown"
                          }
                        }
                      }
                    ],
                    "typeParams": []
                  }
                }
              }
            ],
            "returnType": {
              "repr": "this",
              "kind": "this",
              "this": true
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": [
              {
                "name": "K",
                "constraint": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ]
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/Session.ts",
            "line": 195,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "emit",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "event",
                "optional": false,
                "tsType": {
                  "repr": "K",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "K"
                  }
                }
              },
              {
                "kind": "rest",
                "arg": {
                  "kind": "identifier",
                  "name": "params",
                  "optional": false,
                  "tsType": null
                },
                "tsType": {
                  "repr": "Parameters",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": [
                      {
                        "repr": "",
                        "kind": "indexedAccess",
                        "indexedAccess": {
                          "readonly": false,
                          "objType": {
                            "repr": "Events",
                            "kind": "typeRef",
                            "typeRef": {
                              "typeParams": null,
                              "typeName": "Events"
                            }
                          },
                          "indexType": {
                            "repr": "K",
                            "kind": "typeRef",
                            "typeRef": {
                              "typeParams": null,
                              "typeName": "K"
                            }
                          }
                        }
                      }
                    ],
                    "typeName": "Parameters"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "boolean",
              "kind": "keyword",
              "keyword": "boolean"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": [
              {
                "name": "K",
                "constraint": {
                  "repr": "",
                  "kind": "typeOperator",
                  "typeOperator": {
                    "operator": "keyof",
                    "tsType": {
                      "repr": "Events",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "Events"
                      }
                    }
                  }
                }
              }
            ]
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/Session.ts",
            "line": 199,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "emit",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "event",
                "optional": false,
                "tsType": {
                  "repr": "K",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "K"
                  }
                }
              },
              {
                "kind": "rest",
                "arg": {
                  "kind": "identifier",
                  "name": "params",
                  "optional": false,
                  "tsType": null
                },
                "tsType": {
                  "repr": "",
                  "kind": "array",
                  "array": {
                    "repr": "unknown",
                    "kind": "keyword",
                    "keyword": "unknown"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "boolean",
              "kind": "keyword",
              "keyword": "boolean"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": [
              {
                "name": "K",
                "constraint": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ]
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/Session.ts",
            "line": 200,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "editProfile",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "nick",
                "optional": true,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "avatarURL",
                "optional": true,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    {
                      "repr": "null",
                      "kind": "keyword",
                      "keyword": "null"
                    }
                  ]
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "User",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "User"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/Session.ts",
            "line": 204,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "Edit bot's status\ntip: execute this on the ready event if possible",
            "tags": [
              {
                "kind": "example",
                "doc": "for (const { id } of session.gateway.manager.shards) {\n   session.editStatus(id, data);\n}"
              }
            ]
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "editStatus",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "shardId",
                "optional": false,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                }
              },
              {
                "kind": "identifier",
                "name": "status",
                "optional": false,
                "tsType": {
                  "repr": "StatusUpdate",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "StatusUpdate"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "void",
              "kind": "keyword",
              "keyword": "void"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/Session.ts",
            "line": 221,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "fetchUser",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "id",
                "optional": false,
                "tsType": {
                  "repr": "Snowflake",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Snowflake"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "",
                    "kind": "union",
                    "union": [
                      {
                        "repr": "User",
                        "kind": "typeRef",
                        "typeRef": {
                          "typeParams": null,
                          "typeName": "User"
                        }
                      },
                      {
                        "repr": "undefined",
                        "kind": "keyword",
                        "keyword": "undefined"
                      }
                    ]
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/Session.ts",
            "line": 268,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "createApplicationCommand",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "options",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "CreateApplicationCommand",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "CreateApplicationCommand"
                      }
                    },
                    {
                      "repr": "CreateContextApplicationCommand",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "CreateContextApplicationCommand"
                      }
                    }
                  ]
                }
              },
              {
                "kind": "identifier",
                "name": "guildId",
                "optional": true,
                "tsType": {
                  "repr": "Snowflake",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Snowflake"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "DiscordApplicationCommand",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "DiscordApplicationCommand"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/Session.ts",
            "line": 276,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "deleteApplicationCommand",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "id",
                "optional": false,
                "tsType": {
                  "repr": "Snowflake",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Snowflake"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "guildId",
                "optional": true,
                "tsType": {
                  "repr": "Snowflake",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Snowflake"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "undefined",
                    "kind": "keyword",
                    "keyword": "undefined"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/Session.ts",
            "line": 307,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "updateApplicationCommandPermissions",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "guildId",
                "optional": false,
                "tsType": {
                  "repr": "Snowflake",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Snowflake"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "id",
                "optional": false,
                "tsType": {
                  "repr": "Snowflake",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Snowflake"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "bearerToken",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "options",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "array",
                  "array": {
                    "repr": "ApplicationCommandPermissions",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "ApplicationCommandPermissions"
                    }
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "DiscordGuildApplicationCommandPermissions",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "DiscordGuildApplicationCommandPermissions"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/Session.ts",
            "line": 317,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "fetchApplicationCommand",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "id",
                "optional": false,
                "tsType": {
                  "repr": "Snowflake",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Snowflake"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "options",
                "optional": true,
                "tsType": {
                  "repr": "GetApplicationCommand",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "GetApplicationCommand"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "DiscordApplicationCommand",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "DiscordApplicationCommand"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/Session.ts",
            "line": 336,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "fetchApplicationCommandPermissions",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "guildId",
                "optional": false,
                "tsType": {
                  "repr": "Snowflake",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Snowflake"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "",
                    "kind": "array",
                    "array": {
                      "repr": "DiscordGuildApplicationCommandPermissions",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "DiscordGuildApplicationCommandPermissions"
                      }
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/Session.ts",
            "line": 351,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "fetchApplicationCommandPermission",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "guildId",
                "optional": false,
                "tsType": {
                  "repr": "Snowflake",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Snowflake"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "id",
                "optional": false,
                "tsType": {
                  "repr": "Snowflake",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Snowflake"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "DiscordGuildApplicationCommandPermissions",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "DiscordGuildApplicationCommandPermissions"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/Session.ts",
            "line": 359,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "upsertApplicationCommand",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "id",
                "optional": false,
                "tsType": {
                  "repr": "Snowflake",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Snowflake"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "options",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "AtLeastOne",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": [
                          {
                            "repr": "CreateApplicationCommand",
                            "kind": "typeRef",
                            "typeRef": {
                              "typeParams": null,
                              "typeName": "CreateApplicationCommand"
                            }
                          }
                        ],
                        "typeName": "AtLeastOne"
                      }
                    },
                    {
                      "repr": "AtLeastOne",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": [
                          {
                            "repr": "CreateContextApplicationCommand",
                            "kind": "typeRef",
                            "typeRef": {
                              "typeParams": null,
                              "typeName": "CreateContextApplicationCommand"
                            }
                          }
                        ],
                        "typeName": "AtLeastOne"
                      }
                    }
                  ]
                }
              },
              {
                "kind": "identifier",
                "name": "guildId",
                "optional": true,
                "tsType": {
                  "repr": "Snowflake",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Snowflake"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "DiscordApplicationCommand",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "DiscordApplicationCommand"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/Session.ts",
            "line": 370,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "upsertApplicationCommands",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "options",
                "optional": false,
                "tsType": {
                  "repr": "Array",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": [
                      {
                        "repr": "",
                        "kind": "union",
                        "union": [
                          {
                            "repr": "UpsertApplicationCommands",
                            "kind": "typeRef",
                            "typeRef": {
                              "typeParams": null,
                              "typeName": "UpsertApplicationCommands"
                            }
                          },
                          {
                            "repr": "CreateContextApplicationCommand",
                            "kind": "typeRef",
                            "typeRef": {
                              "typeParams": null,
                              "typeName": "CreateContextApplicationCommand"
                            }
                          }
                        ]
                      }
                    ],
                    "typeName": "Array"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "guildId",
                "optional": true,
                "tsType": {
                  "repr": "Snowflake",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Snowflake"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "",
                    "kind": "array",
                    "array": {
                      "repr": "DiscordApplicationCommand",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "DiscordApplicationCommand"
                      }
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/Session.ts",
            "line": 395,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "fetchCommands",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "guildId",
                "optional": true,
                "tsType": {
                  "repr": "Snowflake",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Snowflake"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "",
                    "kind": "array",
                    "array": {
                      "repr": "DiscordApplicationCommand",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "DiscordApplicationCommand"
                      }
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/Session.ts",
            "line": 421,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "isContextApplicationCommand",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "cmd",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "AtLeastOne",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": [
                          {
                            "repr": "CreateContextApplicationCommand",
                            "kind": "typeRef",
                            "typeRef": {
                              "typeParams": null,
                              "typeName": "CreateContextApplicationCommand"
                            }
                          }
                        ],
                        "typeName": "AtLeastOne"
                      }
                    },
                    {
                      "repr": "AtLeastOne",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": [
                          {
                            "repr": "CreateApplicationCommand",
                            "kind": "typeRef",
                            "typeRef": {
                              "typeParams": null,
                              "typeName": "CreateApplicationCommand"
                            }
                          }
                        ],
                        "typeName": "AtLeastOne"
                      }
                    }
                  ]
                }
              }
            ],
            "returnType": {
              "repr": "cmd is AtLeastOne<CreateContextApplicationCommand>",
              "kind": "typePredicate",
              "typePredicate": {
                "asserts": false,
                "param": {
                  "type": "identifier",
                  "name": "cmd"
                },
                "type": {
                  "repr": "AtLeastOne",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": [
                      {
                        "repr": "CreateContextApplicationCommand",
                        "kind": "typeRef",
                        "typeRef": {
                          "typeParams": null,
                          "typeName": "CreateContextApplicationCommand"
                        }
                      }
                    ],
                    "typeName": "AtLeastOne"
                  }
                }
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/Session.ts",
            "line": 432,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "start",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "void",
                    "kind": "keyword",
                    "keyword": "void"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/Session.ts",
            "line": 436,
            "col": 4
          }
        }
      ],
      "extends": "EventEmitter",
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "import",
    "name": "ApplicationCommandPermissionTypes",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/Session.ts",
      "line": 1,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
      "imported": "ApplicationCommandPermissionTypes"
    }
  },
  {
    "kind": "import",
    "name": "AtLeastOne",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/Session.ts",
      "line": 1,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
      "imported": "AtLeastOne"
    }
  },
  {
    "kind": "import",
    "name": "DiscordApplicationCommand",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/Session.ts",
      "line": 1,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
      "imported": "DiscordApplicationCommand"
    }
  },
  {
    "kind": "import",
    "name": "DiscordApplicationCommandOption",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/Session.ts",
      "line": 1,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
      "imported": "DiscordApplicationCommandOption"
    }
  },
  {
    "kind": "import",
    "name": "DiscordGetGatewayBot",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/Session.ts",
      "line": 1,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
      "imported": "DiscordGetGatewayBot"
    }
  },
  {
    "kind": "import",
    "name": "DiscordGuildApplicationCommandPermissions",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/Session.ts",
      "line": 1,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
      "imported": "DiscordGuildApplicationCommandPermissions"
    }
  },
  {
    "kind": "import",
    "name": "DiscordUser",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/Session.ts",
      "line": 1,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
      "imported": "DiscordUser"
    }
  },
  {
    "kind": "import",
    "name": "GatewayBot",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/Session.ts",
      "line": 1,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
      "imported": "GatewayBot"
    }
  },
  {
    "kind": "import",
    "name": "GatewayIntents",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/Session.ts",
      "line": 1,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
      "imported": "GatewayIntents"
    }
  },
  {
    "kind": "import",
    "name": "Localization",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/Session.ts",
      "line": 1,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
      "imported": "Localization"
    }
  },
  {
    "kind": "import",
    "name": "DiscordGatewayPayload",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/Session.ts",
      "line": 14,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
      "imported": "DiscordGatewayPayload"
    }
  },
  {
    "kind": "import",
    "name": "Shard",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/Session.ts",
      "line": 14,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
      "imported": "Shard"
    }
  },
  {
    "kind": "import",
    "name": "Events",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/Session.ts",
      "line": 15,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/Actions.ts",
      "imported": "Events"
    }
  },
  {
    "kind": "import",
    "name": "PermissionResolvable",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/Session.ts",
      "line": 16,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/structures/Permissions.ts",
      "imported": "PermissionResolvable"
    }
  },
  {
    "kind": "import",
    "name": "Activities",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/Session.ts",
      "line": 17,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/structures/Presence.ts",
      "imported": "Activities"
    }
  },
  {
    "kind": "import",
    "name": "StatusTypes",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/Session.ts",
      "line": 17,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/structures/Presence.ts",
      "imported": "StatusTypes"
    }
  },
  {
    "kind": "import",
    "name": "Permissions",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/Session.ts",
      "line": 19,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/structures/Permissions.ts",
      "imported": "Permissions"
    }
  },
  {
    "kind": "import",
    "name": "Snowflake",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/Session.ts",
      "line": 20,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/Snowflake.ts",
      "imported": "Snowflake"
    }
  },
  {
    "kind": "import",
    "name": "EventEmitter",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/Session.ts",
      "line": 21,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/util/EventEmmiter.ts",
      "imported": "EventEmitter"
    }
  },
  {
    "kind": "import",
    "name": "ApplicationCommandTypes",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/Session.ts",
      "line": 22,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
      "imported": "ApplicationCommandTypes"
    }
  },
  {
    "kind": "import",
    "name": "createGatewayManager",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/Session.ts",
      "line": 22,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
      "imported": "createGatewayManager"
    }
  },
  {
    "kind": "import",
    "name": "createRestManager",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/Session.ts",
      "line": 22,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
      "imported": "createRestManager"
    }
  },
  {
    "kind": "import",
    "name": "GatewayOpcodes",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/Session.ts",
      "line": 22,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
      "imported": "GatewayOpcodes"
    }
  },
  {
    "kind": "import",
    "name": "getBotIdFromToken",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/Session.ts",
      "line": 22,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
      "imported": "getBotIdFromToken"
    }
  },
  {
    "kind": "import",
    "name": "User",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/Session.ts",
      "line": 30,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/structures/User.ts",
      "imported": "default"
    }
  },
  {
    "kind": "import",
    "name": "urlToBase64",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/Session.ts",
      "line": 31,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/util/urlToBase64.ts",
      "imported": "urlToBase64"
    }
  },
  {
    "kind": "import",
    "name": "Routes",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/Session.ts",
      "line": 33,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/Routes.ts",
      "imported": null
    }
  },
  {
    "kind": "import",
    "name": "Actions",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/Session.ts",
      "line": 34,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/Actions.ts",
      "imported": null
    }
  },
  {
    "kind": "interface",
    "name": "StickerItem",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Sticker.ts",
      "line": 8,
      "col": 0
    },
    "declarationKind": "export",
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Sticker.ts",
            "line": 9,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "Snowflake",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Snowflake"
            }
          },
          "typeParams": []
        },
        {
          "name": "name",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Sticker.ts",
            "line": 10,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "formatType",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Sticker.ts",
            "line": 11,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "StickerFormatTypes",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "StickerFormatTypes"
            }
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "StickerPack",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Sticker.ts",
      "line": 14,
      "col": 0
    },
    "declarationKind": "export",
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Sticker.ts",
            "line": 15,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "Snowflake",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Snowflake"
            }
          },
          "typeParams": []
        },
        {
          "name": "stickers",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Sticker.ts",
            "line": 16,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "Sticker",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "Sticker"
              }
            }
          },
          "typeParams": []
        },
        {
          "name": "name",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Sticker.ts",
            "line": 17,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "skuId",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Sticker.ts",
            "line": 18,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "Snowflake",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Snowflake"
            }
          },
          "typeParams": []
        },
        {
          "name": "coverStickerId",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Sticker.ts",
            "line": 19,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "Snowflake",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Snowflake"
            }
          },
          "typeParams": []
        },
        {
          "name": "description",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Sticker.ts",
            "line": 20,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "bannerAssetId",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Sticker.ts",
            "line": 21,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "Snowflake",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Snowflake"
            }
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "class",
    "name": "Sticker",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Sticker.ts",
      "line": 24,
      "col": 0
    },
    "declarationKind": "export",
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "session",
              "optional": false,
              "tsType": {
                "repr": "Session",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Session"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "data",
              "optional": false,
              "tsType": {
                "repr": "DiscordSticker",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "DiscordSticker"
                }
              }
            }
          ],
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Sticker.ts",
            "line": 25,
            "col": 4
          }
        }
      ],
      "properties": [
        {
          "tsType": {
            "repr": "Session",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Session"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "session",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Sticker.ts",
            "line": 39,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "Snowflake",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Snowflake"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Sticker.ts",
            "line": 40,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "Snowflake",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Snowflake"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "packId",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Sticker.ts",
            "line": 41,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "name",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Sticker.ts",
            "line": 42,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "description",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Sticker.ts",
            "line": 43,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "tags",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Sticker.ts",
            "line": 44,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "StickerTypes",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "StickerTypes"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "type",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Sticker.ts",
            "line": 45,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "StickerFormatTypes",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "StickerFormatTypes"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "formatType",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Sticker.ts",
            "line": 46,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "available",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Sticker.ts",
            "line": 47,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "Snowflake",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Snowflake"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "guildId",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Sticker.ts",
            "line": 48,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "User",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "User"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "user",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Sticker.ts",
            "line": 49,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "sortValue",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Sticker.ts",
            "line": 50,
            "col": 4
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "fetchPremiumPack",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "StickerPack",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "StickerPack"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Sticker.ts",
            "line": 52,
            "col": 4
          }
        }
      ],
      "extends": null,
      "implements": [
        {
          "repr": "Model",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "Model"
          }
        }
      ],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "class",
    "name": "default",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Sticker.ts",
      "line": 24,
      "col": 0
    },
    "declarationKind": "export",
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "session",
              "optional": false,
              "tsType": {
                "repr": "Session",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Session"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "data",
              "optional": false,
              "tsType": {
                "repr": "DiscordSticker",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "DiscordSticker"
                }
              }
            }
          ],
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Sticker.ts",
            "line": 25,
            "col": 4
          }
        }
      ],
      "properties": [
        {
          "tsType": {
            "repr": "Session",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Session"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "session",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Sticker.ts",
            "line": 39,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "Snowflake",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Snowflake"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Sticker.ts",
            "line": 40,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "Snowflake",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Snowflake"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "packId",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Sticker.ts",
            "line": 41,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "name",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Sticker.ts",
            "line": 42,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "description",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Sticker.ts",
            "line": 43,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "tags",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Sticker.ts",
            "line": 44,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "StickerTypes",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "StickerTypes"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "type",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Sticker.ts",
            "line": 45,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "StickerFormatTypes",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "StickerFormatTypes"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "formatType",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Sticker.ts",
            "line": 46,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "available",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Sticker.ts",
            "line": 47,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "Snowflake",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Snowflake"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "guildId",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Sticker.ts",
            "line": 48,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "User",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "User"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "user",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Sticker.ts",
            "line": 49,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "sortValue",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Sticker.ts",
            "line": 50,
            "col": 4
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "fetchPremiumPack",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "StickerPack",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "StickerPack"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Sticker.ts",
            "line": 52,
            "col": 4
          }
        }
      ],
      "extends": null,
      "implements": [
        {
          "repr": "Model",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "Model"
          }
        }
      ],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "import",
    "name": "DiscordSticker",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Sticker.ts",
      "line": 1,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
      "imported": "DiscordSticker"
    }
  },
  {
    "kind": "import",
    "name": "DiscordStickerPack",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Sticker.ts",
      "line": 1,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
      "imported": "DiscordStickerPack"
    }
  },
  {
    "kind": "import",
    "name": "StickerFormatTypes",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Sticker.ts",
      "line": 1,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
      "imported": "StickerFormatTypes"
    }
  },
  {
    "kind": "import",
    "name": "StickerTypes",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Sticker.ts",
      "line": 1,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
      "imported": "StickerTypes"
    }
  },
  {
    "kind": "import",
    "name": "Model",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Sticker.ts",
      "line": 2,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/structures/Base.ts",
      "imported": "Model"
    }
  },
  {
    "kind": "import",
    "name": "Snowflake",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Sticker.ts",
      "line": 3,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/Snowflake.ts",
      "imported": "Snowflake"
    }
  },
  {
    "kind": "import",
    "name": "Session",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Sticker.ts",
      "line": 4,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/Session.ts",
      "imported": "Session"
    }
  },
  {
    "kind": "import",
    "name": "User",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Sticker.ts",
      "line": 5,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/structures/User.ts",
      "imported": "User"
    }
  },
  {
    "kind": "import",
    "name": "Routes",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Sticker.ts",
      "line": 6,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/Routes.ts",
      "imported": null
    }
  },
  {
    "kind": "function",
    "name": "transformOasisInteractionDataOption",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/CommandInteractionOptionResolver.ts",
      "line": 4,
      "col": 0
    },
    "declarationKind": "export",
    "functionDef": {
      "params": [
        {
          "kind": "identifier",
          "name": "o",
          "optional": false,
          "tsType": {
            "repr": "DiscordInteractionDataOption",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "DiscordInteractionDataOption"
            }
          }
        }
      ],
      "returnType": {
        "repr": "CommandInteractionOption",
        "kind": "typeRef",
        "typeRef": {
          "typeParams": null,
          "typeName": "CommandInteractionOption"
        }
      },
      "isAsync": false,
      "isGenerator": false,
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "CommandInteractionOption",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/CommandInteractionOptionResolver.ts",
      "line": 40,
      "col": 0
    },
    "declarationKind": "export",
    "interfaceDef": {
      "extends": [
        {
          "repr": "Omit",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": [
              {
                "repr": "DiscordInteractionDataOption",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "DiscordInteractionDataOption"
                }
              },
              {
                "repr": "value",
                "kind": "literal",
                "literal": {
                  "kind": "string",
                  "string": "value"
                }
              }
            ],
            "typeName": "Omit"
          }
        }
      ],
      "methods": [],
      "properties": [
        {
          "name": "Attachment",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/CommandInteractionOptionResolver.ts",
            "line": 41,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "Boolean",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/CommandInteractionOptionResolver.ts",
            "line": 42,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        },
        {
          "name": "User",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/CommandInteractionOptionResolver.ts",
            "line": 43,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "bigint",
            "kind": "keyword",
            "keyword": "bigint"
          },
          "typeParams": []
        },
        {
          "name": "Role",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/CommandInteractionOptionResolver.ts",
            "line": 44,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "bigint",
            "kind": "keyword",
            "keyword": "bigint"
          },
          "typeParams": []
        },
        {
          "name": "Number",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/CommandInteractionOptionResolver.ts",
            "line": 45,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "Integer",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/CommandInteractionOptionResolver.ts",
            "line": 46,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "Channel",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/CommandInteractionOptionResolver.ts",
            "line": 47,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "bigint",
            "kind": "keyword",
            "keyword": "bigint"
          },
          "typeParams": []
        },
        {
          "name": "String",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/CommandInteractionOptionResolver.ts",
            "line": 48,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "Mentionable",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/CommandInteractionOptionResolver.ts",
            "line": 49,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "Otherwise",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/CommandInteractionOptionResolver.ts",
            "line": 50,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              },
              {
                "repr": "number",
                "kind": "keyword",
                "keyword": "number"
              },
              {
                "repr": "boolean",
                "kind": "keyword",
                "keyword": "boolean"
              },
              {
                "repr": "bigint",
                "kind": "keyword",
                "keyword": "bigint"
              },
              {
                "repr": "undefined",
                "kind": "keyword",
                "keyword": "undefined"
              }
            ]
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "class",
    "name": "CommandInteractionOptionResolver",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/CommandInteractionOptionResolver.ts",
      "line": 58,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "Utility class to get the resolved options for a command\nIt is really typesafe",
      "tags": [
        {
          "kind": "example",
          "doc": "const option = ctx.options.getStringOption(\"name\");"
        }
      ]
    },
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "options",
              "optional": true,
              "tsType": {
                "repr": "",
                "kind": "array",
                "array": {
                  "repr": "DiscordInteractionDataOption",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "DiscordInteractionDataOption"
                  }
                }
              }
            },
            {
              "kind": "identifier",
              "name": "resolved",
              "optional": true,
              "tsType": {
                "repr": "DiscordInteractionDataResolved",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "DiscordInteractionDataResolved"
                }
              }
            }
          ],
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/CommandInteractionOptionResolver.ts",
            "line": 65,
            "col": 4
          }
        }
      ],
      "properties": [
        {
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "CommandInteractionOption",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "CommandInteractionOption"
              }
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "hoistedOptions",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/CommandInteractionOptionResolver.ts",
            "line": 62,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "DiscordInteractionDataResolved",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "DiscordInteractionDataResolved"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "resolved",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/CommandInteractionOptionResolver.ts",
            "line": 63,
            "col": 4
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "accessibility": "private",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getTypedOption",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "name",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    {
                      "repr": "number",
                      "kind": "keyword",
                      "keyword": "number"
                    }
                  ]
                }
              },
              {
                "kind": "identifier",
                "name": "type",
                "optional": false,
                "tsType": {
                  "repr": "ApplicationCommandOptionTypes",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "ApplicationCommandOptionTypes"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "properties",
                "optional": false,
                "tsType": {
                  "repr": "Array",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": [
                      {
                        "repr": "",
                        "kind": "typeOperator",
                        "typeOperator": {
                          "operator": "keyof",
                          "tsType": {
                            "repr": "CommandInteractionOption",
                            "kind": "typeRef",
                            "typeRef": {
                              "typeParams": null,
                              "typeName": "CommandInteractionOption"
                            }
                          }
                        }
                      }
                    ],
                    "typeName": "Array"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "required",
                "optional": false,
                "tsType": {
                  "repr": "boolean",
                  "kind": "keyword",
                  "keyword": "boolean"
                }
              }
            ],
            "returnType": {
              "repr": "",
              "kind": "union",
              "union": [
                {
                  "repr": "CommandInteractionOption",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "CommandInteractionOption"
                  }
                },
                {
                  "repr": "void",
                  "kind": "keyword",
                  "keyword": "void"
                }
              ]
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/CommandInteractionOptionResolver.ts",
            "line": 83,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "get",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "name",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    {
                      "repr": "number",
                      "kind": "keyword",
                      "keyword": "number"
                    }
                  ]
                }
              },
              {
                "kind": "identifier",
                "name": "required",
                "optional": false,
                "tsType": {
                  "repr": "true",
                  "kind": "literal",
                  "literal": {
                    "kind": "boolean",
                    "boolean": true
                  }
                }
              }
            ],
            "returnType": {
              "repr": "CommandInteractionOption",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "CommandInteractionOption"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/CommandInteractionOptionResolver.ts",
            "line": 106,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "get",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "name",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    {
                      "repr": "number",
                      "kind": "keyword",
                      "keyword": "number"
                    }
                  ]
                }
              },
              {
                "kind": "identifier",
                "name": "required",
                "optional": false,
                "tsType": {
                  "repr": "boolean",
                  "kind": "keyword",
                  "keyword": "boolean"
                }
              }
            ],
            "returnType": {
              "repr": "",
              "kind": "union",
              "union": [
                {
                  "repr": "CommandInteractionOption",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "CommandInteractionOption"
                  }
                },
                {
                  "repr": "undefined",
                  "kind": "keyword",
                  "keyword": "undefined"
                }
              ]
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/CommandInteractionOptionResolver.ts",
            "line": 107,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "get",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "name",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    {
                      "repr": "number",
                      "kind": "keyword",
                      "keyword": "number"
                    }
                  ]
                }
              },
              {
                "kind": "identifier",
                "name": "required",
                "optional": true,
                "tsType": {
                  "repr": "boolean",
                  "kind": "keyword",
                  "keyword": "boolean"
                }
              }
            ],
            "returnType": null,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/CommandInteractionOptionResolver.ts",
            "line": 108,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "searches for a string option"
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getString",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "name",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    {
                      "repr": "number",
                      "kind": "keyword",
                      "keyword": "number"
                    }
                  ]
                }
              },
              {
                "kind": "identifier",
                "name": "required",
                "optional": false,
                "tsType": {
                  "repr": "true",
                  "kind": "literal",
                  "literal": {
                    "kind": "boolean",
                    "boolean": true
                  }
                }
              }
            ],
            "returnType": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/CommandInteractionOptionResolver.ts",
            "line": 125,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getString",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "name",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    {
                      "repr": "number",
                      "kind": "keyword",
                      "keyword": "number"
                    }
                  ]
                }
              },
              {
                "kind": "identifier",
                "name": "required",
                "optional": true,
                "tsType": {
                  "repr": "boolean",
                  "kind": "keyword",
                  "keyword": "boolean"
                }
              }
            ],
            "returnType": {
              "repr": "",
              "kind": "union",
              "union": [
                {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                {
                  "repr": "undefined",
                  "kind": "keyword",
                  "keyword": "undefined"
                }
              ]
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/CommandInteractionOptionResolver.ts",
            "line": 126,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getString",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "name",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    {
                      "repr": "number",
                      "kind": "keyword",
                      "keyword": "number"
                    }
                  ]
                }
              },
              {
                "kind": "assign",
                "left": {
                  "kind": "identifier",
                  "name": "required",
                  "optional": false,
                  "tsType": null
                },
                "right": "[UNSUPPORTED]",
                "tsType": null
              }
            ],
            "returnType": null,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/CommandInteractionOptionResolver.ts",
            "line": 127,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "searches for a number option"
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getNumber",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "name",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    {
                      "repr": "number",
                      "kind": "keyword",
                      "keyword": "number"
                    }
                  ]
                }
              },
              {
                "kind": "identifier",
                "name": "required",
                "optional": false,
                "tsType": {
                  "repr": "true",
                  "kind": "literal",
                  "literal": {
                    "kind": "boolean",
                    "boolean": true
                  }
                }
              }
            ],
            "returnType": {
              "repr": "number",
              "kind": "keyword",
              "keyword": "number"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/CommandInteractionOptionResolver.ts",
            "line": 139,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getNumber",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "name",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    {
                      "repr": "number",
                      "kind": "keyword",
                      "keyword": "number"
                    }
                  ]
                }
              },
              {
                "kind": "identifier",
                "name": "required",
                "optional": true,
                "tsType": {
                  "repr": "boolean",
                  "kind": "keyword",
                  "keyword": "boolean"
                }
              }
            ],
            "returnType": {
              "repr": "",
              "kind": "union",
              "union": [
                {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                },
                {
                  "repr": "undefined",
                  "kind": "keyword",
                  "keyword": "undefined"
                }
              ]
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/CommandInteractionOptionResolver.ts",
            "line": 140,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getNumber",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "name",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    {
                      "repr": "number",
                      "kind": "keyword",
                      "keyword": "number"
                    }
                  ]
                }
              },
              {
                "kind": "assign",
                "left": {
                  "kind": "identifier",
                  "name": "required",
                  "optional": false,
                  "tsType": null
                },
                "right": "[UNSUPPORTED]",
                "tsType": null
              }
            ],
            "returnType": null,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/CommandInteractionOptionResolver.ts",
            "line": 141,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "searhces for an integer option"
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getInteger",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "name",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    {
                      "repr": "number",
                      "kind": "keyword",
                      "keyword": "number"
                    }
                  ]
                }
              },
              {
                "kind": "identifier",
                "name": "required",
                "optional": false,
                "tsType": {
                  "repr": "true",
                  "kind": "literal",
                  "literal": {
                    "kind": "boolean",
                    "boolean": true
                  }
                }
              }
            ],
            "returnType": {
              "repr": "number",
              "kind": "keyword",
              "keyword": "number"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/CommandInteractionOptionResolver.ts",
            "line": 153,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getInteger",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "name",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    {
                      "repr": "number",
                      "kind": "keyword",
                      "keyword": "number"
                    }
                  ]
                }
              },
              {
                "kind": "identifier",
                "name": "required",
                "optional": true,
                "tsType": {
                  "repr": "boolean",
                  "kind": "keyword",
                  "keyword": "boolean"
                }
              }
            ],
            "returnType": {
              "repr": "",
              "kind": "union",
              "union": [
                {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                },
                {
                  "repr": "undefined",
                  "kind": "keyword",
                  "keyword": "undefined"
                }
              ]
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/CommandInteractionOptionResolver.ts",
            "line": 154,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getInteger",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "name",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    {
                      "repr": "number",
                      "kind": "keyword",
                      "keyword": "number"
                    }
                  ]
                }
              },
              {
                "kind": "assign",
                "left": {
                  "kind": "identifier",
                  "name": "required",
                  "optional": false,
                  "tsType": null
                },
                "right": "[UNSUPPORTED]",
                "tsType": null
              }
            ],
            "returnType": null,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/CommandInteractionOptionResolver.ts",
            "line": 155,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "searches for a boolean option"
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getBoolean",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "name",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    {
                      "repr": "number",
                      "kind": "keyword",
                      "keyword": "number"
                    }
                  ]
                }
              },
              {
                "kind": "identifier",
                "name": "required",
                "optional": false,
                "tsType": {
                  "repr": "true",
                  "kind": "literal",
                  "literal": {
                    "kind": "boolean",
                    "boolean": true
                  }
                }
              }
            ],
            "returnType": {
              "repr": "boolean",
              "kind": "keyword",
              "keyword": "boolean"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/CommandInteractionOptionResolver.ts",
            "line": 167,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getBoolean",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "name",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    {
                      "repr": "number",
                      "kind": "keyword",
                      "keyword": "number"
                    }
                  ]
                }
              },
              {
                "kind": "identifier",
                "name": "required",
                "optional": true,
                "tsType": {
                  "repr": "boolean",
                  "kind": "keyword",
                  "keyword": "boolean"
                }
              }
            ],
            "returnType": {
              "repr": "",
              "kind": "union",
              "union": [
                {
                  "repr": "boolean",
                  "kind": "keyword",
                  "keyword": "boolean"
                },
                {
                  "repr": "undefined",
                  "kind": "keyword",
                  "keyword": "undefined"
                }
              ]
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/CommandInteractionOptionResolver.ts",
            "line": 168,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getBoolean",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "name",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    {
                      "repr": "number",
                      "kind": "keyword",
                      "keyword": "number"
                    }
                  ]
                }
              },
              {
                "kind": "assign",
                "left": {
                  "kind": "identifier",
                  "name": "required",
                  "optional": false,
                  "tsType": null
                },
                "right": "[UNSUPPORTED]",
                "tsType": null
              }
            ],
            "returnType": null,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/CommandInteractionOptionResolver.ts",
            "line": 169,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "searches for a user option"
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getUser",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "name",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    {
                      "repr": "number",
                      "kind": "keyword",
                      "keyword": "number"
                    }
                  ]
                }
              },
              {
                "kind": "identifier",
                "name": "required",
                "optional": false,
                "tsType": {
                  "repr": "true",
                  "kind": "literal",
                  "literal": {
                    "kind": "boolean",
                    "boolean": true
                  }
                }
              }
            ],
            "returnType": {
              "repr": "bigint",
              "kind": "keyword",
              "keyword": "bigint"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/CommandInteractionOptionResolver.ts",
            "line": 181,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getUser",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "name",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    {
                      "repr": "number",
                      "kind": "keyword",
                      "keyword": "number"
                    }
                  ]
                }
              },
              {
                "kind": "identifier",
                "name": "required",
                "optional": true,
                "tsType": {
                  "repr": "boolean",
                  "kind": "keyword",
                  "keyword": "boolean"
                }
              }
            ],
            "returnType": {
              "repr": "",
              "kind": "union",
              "union": [
                {
                  "repr": "bigint",
                  "kind": "keyword",
                  "keyword": "bigint"
                },
                {
                  "repr": "undefined",
                  "kind": "keyword",
                  "keyword": "undefined"
                }
              ]
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/CommandInteractionOptionResolver.ts",
            "line": 182,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getUser",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "name",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    {
                      "repr": "number",
                      "kind": "keyword",
                      "keyword": "number"
                    }
                  ]
                }
              },
              {
                "kind": "assign",
                "left": {
                  "kind": "identifier",
                  "name": "required",
                  "optional": false,
                  "tsType": null
                },
                "right": "[UNSUPPORTED]",
                "tsType": null
              }
            ],
            "returnType": null,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/CommandInteractionOptionResolver.ts",
            "line": 183,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "searches for a channel option"
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getChannel",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "name",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    {
                      "repr": "number",
                      "kind": "keyword",
                      "keyword": "number"
                    }
                  ]
                }
              },
              {
                "kind": "identifier",
                "name": "required",
                "optional": false,
                "tsType": {
                  "repr": "true",
                  "kind": "literal",
                  "literal": {
                    "kind": "boolean",
                    "boolean": true
                  }
                }
              }
            ],
            "returnType": {
              "repr": "bigint",
              "kind": "keyword",
              "keyword": "bigint"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/CommandInteractionOptionResolver.ts",
            "line": 192,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getChannel",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "name",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    {
                      "repr": "number",
                      "kind": "keyword",
                      "keyword": "number"
                    }
                  ]
                }
              },
              {
                "kind": "identifier",
                "name": "required",
                "optional": true,
                "tsType": {
                  "repr": "boolean",
                  "kind": "keyword",
                  "keyword": "boolean"
                }
              }
            ],
            "returnType": {
              "repr": "",
              "kind": "union",
              "union": [
                {
                  "repr": "bigint",
                  "kind": "keyword",
                  "keyword": "bigint"
                },
                {
                  "repr": "undefined",
                  "kind": "keyword",
                  "keyword": "undefined"
                }
              ]
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/CommandInteractionOptionResolver.ts",
            "line": 193,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getChannel",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "name",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    {
                      "repr": "number",
                      "kind": "keyword",
                      "keyword": "number"
                    }
                  ]
                }
              },
              {
                "kind": "assign",
                "left": {
                  "kind": "identifier",
                  "name": "required",
                  "optional": false,
                  "tsType": null
                },
                "right": "[UNSUPPORTED]",
                "tsType": null
              }
            ],
            "returnType": null,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/CommandInteractionOptionResolver.ts",
            "line": 194,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "searches for a mentionable-based option"
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getMentionable",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "name",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    {
                      "repr": "number",
                      "kind": "keyword",
                      "keyword": "number"
                    }
                  ]
                }
              },
              {
                "kind": "identifier",
                "name": "required",
                "optional": false,
                "tsType": {
                  "repr": "true",
                  "kind": "literal",
                  "literal": {
                    "kind": "boolean",
                    "boolean": true
                  }
                }
              }
            ],
            "returnType": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/CommandInteractionOptionResolver.ts",
            "line": 206,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getMentionable",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "name",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    {
                      "repr": "number",
                      "kind": "keyword",
                      "keyword": "number"
                    }
                  ]
                }
              },
              {
                "kind": "identifier",
                "name": "required",
                "optional": true,
                "tsType": {
                  "repr": "boolean",
                  "kind": "keyword",
                  "keyword": "boolean"
                }
              }
            ],
            "returnType": {
              "repr": "",
              "kind": "union",
              "union": [
                {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                {
                  "repr": "undefined",
                  "kind": "keyword",
                  "keyword": "undefined"
                }
              ]
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/CommandInteractionOptionResolver.ts",
            "line": 207,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getMentionable",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "name",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    {
                      "repr": "number",
                      "kind": "keyword",
                      "keyword": "number"
                    }
                  ]
                }
              },
              {
                "kind": "assign",
                "left": {
                  "kind": "identifier",
                  "name": "required",
                  "optional": false,
                  "tsType": null
                },
                "right": "[UNSUPPORTED]",
                "tsType": null
              }
            ],
            "returnType": null,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/CommandInteractionOptionResolver.ts",
            "line": 208,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "searches for a mentionable-based option"
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getRole",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "name",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    {
                      "repr": "number",
                      "kind": "keyword",
                      "keyword": "number"
                    }
                  ]
                }
              },
              {
                "kind": "identifier",
                "name": "required",
                "optional": false,
                "tsType": {
                  "repr": "true",
                  "kind": "literal",
                  "literal": {
                    "kind": "boolean",
                    "boolean": true
                  }
                }
              }
            ],
            "returnType": {
              "repr": "bigint",
              "kind": "keyword",
              "keyword": "bigint"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/CommandInteractionOptionResolver.ts",
            "line": 220,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getRole",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "name",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    {
                      "repr": "number",
                      "kind": "keyword",
                      "keyword": "number"
                    }
                  ]
                }
              },
              {
                "kind": "identifier",
                "name": "required",
                "optional": true,
                "tsType": {
                  "repr": "boolean",
                  "kind": "keyword",
                  "keyword": "boolean"
                }
              }
            ],
            "returnType": {
              "repr": "",
              "kind": "union",
              "union": [
                {
                  "repr": "bigint",
                  "kind": "keyword",
                  "keyword": "bigint"
                },
                {
                  "repr": "undefined",
                  "kind": "keyword",
                  "keyword": "undefined"
                }
              ]
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/CommandInteractionOptionResolver.ts",
            "line": 221,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getRole",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "name",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    {
                      "repr": "number",
                      "kind": "keyword",
                      "keyword": "number"
                    }
                  ]
                }
              },
              {
                "kind": "assign",
                "left": {
                  "kind": "identifier",
                  "name": "required",
                  "optional": false,
                  "tsType": null
                },
                "right": "[UNSUPPORTED]",
                "tsType": null
              }
            ],
            "returnType": null,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/CommandInteractionOptionResolver.ts",
            "line": 222,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "searches for an attachment option"
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getAttachment",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "name",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    {
                      "repr": "number",
                      "kind": "keyword",
                      "keyword": "number"
                    }
                  ]
                }
              },
              {
                "kind": "identifier",
                "name": "required",
                "optional": false,
                "tsType": {
                  "repr": "true",
                  "kind": "literal",
                  "literal": {
                    "kind": "boolean",
                    "boolean": true
                  }
                }
              }
            ],
            "returnType": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/CommandInteractionOptionResolver.ts",
            "line": 231,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getAttachment",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "name",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    {
                      "repr": "number",
                      "kind": "keyword",
                      "keyword": "number"
                    }
                  ]
                }
              },
              {
                "kind": "identifier",
                "name": "required",
                "optional": true,
                "tsType": {
                  "repr": "boolean",
                  "kind": "keyword",
                  "keyword": "boolean"
                }
              }
            ],
            "returnType": {
              "repr": "",
              "kind": "union",
              "union": [
                {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                {
                  "repr": "undefined",
                  "kind": "keyword",
                  "keyword": "undefined"
                }
              ]
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/CommandInteractionOptionResolver.ts",
            "line": 232,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getAttachment",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "name",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    {
                      "repr": "number",
                      "kind": "keyword",
                      "keyword": "number"
                    }
                  ]
                }
              },
              {
                "kind": "assign",
                "left": {
                  "kind": "identifier",
                  "name": "required",
                  "optional": false,
                  "tsType": null
                },
                "right": "[UNSUPPORTED]",
                "tsType": null
              }
            ],
            "returnType": null,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/CommandInteractionOptionResolver.ts",
            "line": 233,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "searches for the focused option"
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getFocused",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "assign",
                "left": {
                  "kind": "identifier",
                  "name": "full",
                  "optional": false,
                  "tsType": null
                },
                "right": "[UNSUPPORTED]",
                "tsType": null
              }
            ],
            "returnType": {
              "repr": "",
              "kind": "union",
              "union": [
                {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                },
                {
                  "repr": "bigint",
                  "kind": "keyword",
                  "keyword": "bigint"
                },
                {
                  "repr": "boolean",
                  "kind": "keyword",
                  "keyword": "boolean"
                },
                {
                  "repr": "undefined",
                  "kind": "keyword",
                  "keyword": "undefined"
                },
                {
                  "repr": "CommandInteractionOption",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "CommandInteractionOption"
                  }
                }
              ]
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/CommandInteractionOptionResolver.ts",
            "line": 245,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getSubCommand",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "assign",
                "left": {
                  "kind": "identifier",
                  "name": "required",
                  "optional": false,
                  "tsType": null
                },
                "right": "[UNSUPPORTED]",
                "tsType": null
              }
            ],
            "returnType": {
              "repr": "",
              "kind": "array",
              "array": {
                "repr": "",
                "kind": "parenthesized",
                "parenthesized": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    {
                      "repr": "",
                      "kind": "array",
                      "array": {
                        "repr": "CommandInteractionOption",
                        "kind": "typeRef",
                        "typeRef": {
                          "typeParams": null,
                          "typeName": "CommandInteractionOption"
                        }
                      }
                    },
                    {
                      "repr": "undefined",
                      "kind": "keyword",
                      "keyword": "undefined"
                    }
                  ]
                }
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/CommandInteractionOptionResolver.ts",
            "line": 255,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getSubCommandGroup",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "assign",
                "left": {
                  "kind": "identifier",
                  "name": "required",
                  "optional": false,
                  "tsType": null
                },
                "right": "[UNSUPPORTED]",
                "tsType": null
              }
            ],
            "returnType": {
              "repr": "",
              "kind": "array",
              "array": {
                "repr": "",
                "kind": "parenthesized",
                "parenthesized": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    {
                      "repr": "",
                      "kind": "array",
                      "array": {
                        "repr": "CommandInteractionOption",
                        "kind": "typeRef",
                        "typeRef": {
                          "typeParams": null,
                          "typeName": "CommandInteractionOption"
                        }
                      }
                    },
                    {
                      "repr": "undefined",
                      "kind": "keyword",
                      "keyword": "undefined"
                    }
                  ]
                }
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/CommandInteractionOptionResolver.ts",
            "line": 263,
            "col": 4
          }
        }
      ],
      "extends": null,
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "class",
    "name": "default",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/CommandInteractionOptionResolver.ts",
      "line": 58,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "Utility class to get the resolved options for a command\nIt is really typesafe",
      "tags": [
        {
          "kind": "example",
          "doc": "const option = ctx.options.getStringOption(\"name\");"
        }
      ]
    },
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "options",
              "optional": true,
              "tsType": {
                "repr": "",
                "kind": "array",
                "array": {
                  "repr": "DiscordInteractionDataOption",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "DiscordInteractionDataOption"
                  }
                }
              }
            },
            {
              "kind": "identifier",
              "name": "resolved",
              "optional": true,
              "tsType": {
                "repr": "DiscordInteractionDataResolved",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "DiscordInteractionDataResolved"
                }
              }
            }
          ],
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/CommandInteractionOptionResolver.ts",
            "line": 65,
            "col": 4
          }
        }
      ],
      "properties": [
        {
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "CommandInteractionOption",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "CommandInteractionOption"
              }
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "hoistedOptions",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/CommandInteractionOptionResolver.ts",
            "line": 62,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "DiscordInteractionDataResolved",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "DiscordInteractionDataResolved"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "resolved",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/CommandInteractionOptionResolver.ts",
            "line": 63,
            "col": 4
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "accessibility": "private",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getTypedOption",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "name",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    {
                      "repr": "number",
                      "kind": "keyword",
                      "keyword": "number"
                    }
                  ]
                }
              },
              {
                "kind": "identifier",
                "name": "type",
                "optional": false,
                "tsType": {
                  "repr": "ApplicationCommandOptionTypes",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "ApplicationCommandOptionTypes"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "properties",
                "optional": false,
                "tsType": {
                  "repr": "Array",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": [
                      {
                        "repr": "",
                        "kind": "typeOperator",
                        "typeOperator": {
                          "operator": "keyof",
                          "tsType": {
                            "repr": "CommandInteractionOption",
                            "kind": "typeRef",
                            "typeRef": {
                              "typeParams": null,
                              "typeName": "CommandInteractionOption"
                            }
                          }
                        }
                      }
                    ],
                    "typeName": "Array"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "required",
                "optional": false,
                "tsType": {
                  "repr": "boolean",
                  "kind": "keyword",
                  "keyword": "boolean"
                }
              }
            ],
            "returnType": {
              "repr": "",
              "kind": "union",
              "union": [
                {
                  "repr": "CommandInteractionOption",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "CommandInteractionOption"
                  }
                },
                {
                  "repr": "void",
                  "kind": "keyword",
                  "keyword": "void"
                }
              ]
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/CommandInteractionOptionResolver.ts",
            "line": 83,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "get",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "name",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    {
                      "repr": "number",
                      "kind": "keyword",
                      "keyword": "number"
                    }
                  ]
                }
              },
              {
                "kind": "identifier",
                "name": "required",
                "optional": false,
                "tsType": {
                  "repr": "true",
                  "kind": "literal",
                  "literal": {
                    "kind": "boolean",
                    "boolean": true
                  }
                }
              }
            ],
            "returnType": {
              "repr": "CommandInteractionOption",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "CommandInteractionOption"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/CommandInteractionOptionResolver.ts",
            "line": 106,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "get",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "name",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    {
                      "repr": "number",
                      "kind": "keyword",
                      "keyword": "number"
                    }
                  ]
                }
              },
              {
                "kind": "identifier",
                "name": "required",
                "optional": false,
                "tsType": {
                  "repr": "boolean",
                  "kind": "keyword",
                  "keyword": "boolean"
                }
              }
            ],
            "returnType": {
              "repr": "",
              "kind": "union",
              "union": [
                {
                  "repr": "CommandInteractionOption",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "CommandInteractionOption"
                  }
                },
                {
                  "repr": "undefined",
                  "kind": "keyword",
                  "keyword": "undefined"
                }
              ]
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/CommandInteractionOptionResolver.ts",
            "line": 107,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "get",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "name",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    {
                      "repr": "number",
                      "kind": "keyword",
                      "keyword": "number"
                    }
                  ]
                }
              },
              {
                "kind": "identifier",
                "name": "required",
                "optional": true,
                "tsType": {
                  "repr": "boolean",
                  "kind": "keyword",
                  "keyword": "boolean"
                }
              }
            ],
            "returnType": null,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/CommandInteractionOptionResolver.ts",
            "line": 108,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "searches for a string option"
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getString",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "name",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    {
                      "repr": "number",
                      "kind": "keyword",
                      "keyword": "number"
                    }
                  ]
                }
              },
              {
                "kind": "identifier",
                "name": "required",
                "optional": false,
                "tsType": {
                  "repr": "true",
                  "kind": "literal",
                  "literal": {
                    "kind": "boolean",
                    "boolean": true
                  }
                }
              }
            ],
            "returnType": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/CommandInteractionOptionResolver.ts",
            "line": 125,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getString",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "name",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    {
                      "repr": "number",
                      "kind": "keyword",
                      "keyword": "number"
                    }
                  ]
                }
              },
              {
                "kind": "identifier",
                "name": "required",
                "optional": true,
                "tsType": {
                  "repr": "boolean",
                  "kind": "keyword",
                  "keyword": "boolean"
                }
              }
            ],
            "returnType": {
              "repr": "",
              "kind": "union",
              "union": [
                {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                {
                  "repr": "undefined",
                  "kind": "keyword",
                  "keyword": "undefined"
                }
              ]
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/CommandInteractionOptionResolver.ts",
            "line": 126,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getString",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "name",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    {
                      "repr": "number",
                      "kind": "keyword",
                      "keyword": "number"
                    }
                  ]
                }
              },
              {
                "kind": "assign",
                "left": {
                  "kind": "identifier",
                  "name": "required",
                  "optional": false,
                  "tsType": null
                },
                "right": "[UNSUPPORTED]",
                "tsType": null
              }
            ],
            "returnType": null,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/CommandInteractionOptionResolver.ts",
            "line": 127,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "searches for a number option"
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getNumber",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "name",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    {
                      "repr": "number",
                      "kind": "keyword",
                      "keyword": "number"
                    }
                  ]
                }
              },
              {
                "kind": "identifier",
                "name": "required",
                "optional": false,
                "tsType": {
                  "repr": "true",
                  "kind": "literal",
                  "literal": {
                    "kind": "boolean",
                    "boolean": true
                  }
                }
              }
            ],
            "returnType": {
              "repr": "number",
              "kind": "keyword",
              "keyword": "number"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/CommandInteractionOptionResolver.ts",
            "line": 139,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getNumber",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "name",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    {
                      "repr": "number",
                      "kind": "keyword",
                      "keyword": "number"
                    }
                  ]
                }
              },
              {
                "kind": "identifier",
                "name": "required",
                "optional": true,
                "tsType": {
                  "repr": "boolean",
                  "kind": "keyword",
                  "keyword": "boolean"
                }
              }
            ],
            "returnType": {
              "repr": "",
              "kind": "union",
              "union": [
                {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                },
                {
                  "repr": "undefined",
                  "kind": "keyword",
                  "keyword": "undefined"
                }
              ]
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/CommandInteractionOptionResolver.ts",
            "line": 140,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getNumber",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "name",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    {
                      "repr": "number",
                      "kind": "keyword",
                      "keyword": "number"
                    }
                  ]
                }
              },
              {
                "kind": "assign",
                "left": {
                  "kind": "identifier",
                  "name": "required",
                  "optional": false,
                  "tsType": null
                },
                "right": "[UNSUPPORTED]",
                "tsType": null
              }
            ],
            "returnType": null,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/CommandInteractionOptionResolver.ts",
            "line": 141,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "searhces for an integer option"
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getInteger",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "name",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    {
                      "repr": "number",
                      "kind": "keyword",
                      "keyword": "number"
                    }
                  ]
                }
              },
              {
                "kind": "identifier",
                "name": "required",
                "optional": false,
                "tsType": {
                  "repr": "true",
                  "kind": "literal",
                  "literal": {
                    "kind": "boolean",
                    "boolean": true
                  }
                }
              }
            ],
            "returnType": {
              "repr": "number",
              "kind": "keyword",
              "keyword": "number"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/CommandInteractionOptionResolver.ts",
            "line": 153,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getInteger",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "name",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    {
                      "repr": "number",
                      "kind": "keyword",
                      "keyword": "number"
                    }
                  ]
                }
              },
              {
                "kind": "identifier",
                "name": "required",
                "optional": true,
                "tsType": {
                  "repr": "boolean",
                  "kind": "keyword",
                  "keyword": "boolean"
                }
              }
            ],
            "returnType": {
              "repr": "",
              "kind": "union",
              "union": [
                {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                },
                {
                  "repr": "undefined",
                  "kind": "keyword",
                  "keyword": "undefined"
                }
              ]
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/CommandInteractionOptionResolver.ts",
            "line": 154,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getInteger",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "name",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    {
                      "repr": "number",
                      "kind": "keyword",
                      "keyword": "number"
                    }
                  ]
                }
              },
              {
                "kind": "assign",
                "left": {
                  "kind": "identifier",
                  "name": "required",
                  "optional": false,
                  "tsType": null
                },
                "right": "[UNSUPPORTED]",
                "tsType": null
              }
            ],
            "returnType": null,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/CommandInteractionOptionResolver.ts",
            "line": 155,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "searches for a boolean option"
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getBoolean",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "name",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    {
                      "repr": "number",
                      "kind": "keyword",
                      "keyword": "number"
                    }
                  ]
                }
              },
              {
                "kind": "identifier",
                "name": "required",
                "optional": false,
                "tsType": {
                  "repr": "true",
                  "kind": "literal",
                  "literal": {
                    "kind": "boolean",
                    "boolean": true
                  }
                }
              }
            ],
            "returnType": {
              "repr": "boolean",
              "kind": "keyword",
              "keyword": "boolean"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/CommandInteractionOptionResolver.ts",
            "line": 167,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getBoolean",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "name",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    {
                      "repr": "number",
                      "kind": "keyword",
                      "keyword": "number"
                    }
                  ]
                }
              },
              {
                "kind": "identifier",
                "name": "required",
                "optional": true,
                "tsType": {
                  "repr": "boolean",
                  "kind": "keyword",
                  "keyword": "boolean"
                }
              }
            ],
            "returnType": {
              "repr": "",
              "kind": "union",
              "union": [
                {
                  "repr": "boolean",
                  "kind": "keyword",
                  "keyword": "boolean"
                },
                {
                  "repr": "undefined",
                  "kind": "keyword",
                  "keyword": "undefined"
                }
              ]
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/CommandInteractionOptionResolver.ts",
            "line": 168,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getBoolean",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "name",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    {
                      "repr": "number",
                      "kind": "keyword",
                      "keyword": "number"
                    }
                  ]
                }
              },
              {
                "kind": "assign",
                "left": {
                  "kind": "identifier",
                  "name": "required",
                  "optional": false,
                  "tsType": null
                },
                "right": "[UNSUPPORTED]",
                "tsType": null
              }
            ],
            "returnType": null,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/CommandInteractionOptionResolver.ts",
            "line": 169,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "searches for a user option"
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getUser",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "name",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    {
                      "repr": "number",
                      "kind": "keyword",
                      "keyword": "number"
                    }
                  ]
                }
              },
              {
                "kind": "identifier",
                "name": "required",
                "optional": false,
                "tsType": {
                  "repr": "true",
                  "kind": "literal",
                  "literal": {
                    "kind": "boolean",
                    "boolean": true
                  }
                }
              }
            ],
            "returnType": {
              "repr": "bigint",
              "kind": "keyword",
              "keyword": "bigint"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/CommandInteractionOptionResolver.ts",
            "line": 181,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getUser",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "name",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    {
                      "repr": "number",
                      "kind": "keyword",
                      "keyword": "number"
                    }
                  ]
                }
              },
              {
                "kind": "identifier",
                "name": "required",
                "optional": true,
                "tsType": {
                  "repr": "boolean",
                  "kind": "keyword",
                  "keyword": "boolean"
                }
              }
            ],
            "returnType": {
              "repr": "",
              "kind": "union",
              "union": [
                {
                  "repr": "bigint",
                  "kind": "keyword",
                  "keyword": "bigint"
                },
                {
                  "repr": "undefined",
                  "kind": "keyword",
                  "keyword": "undefined"
                }
              ]
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/CommandInteractionOptionResolver.ts",
            "line": 182,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getUser",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "name",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    {
                      "repr": "number",
                      "kind": "keyword",
                      "keyword": "number"
                    }
                  ]
                }
              },
              {
                "kind": "assign",
                "left": {
                  "kind": "identifier",
                  "name": "required",
                  "optional": false,
                  "tsType": null
                },
                "right": "[UNSUPPORTED]",
                "tsType": null
              }
            ],
            "returnType": null,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/CommandInteractionOptionResolver.ts",
            "line": 183,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "searches for a channel option"
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getChannel",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "name",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    {
                      "repr": "number",
                      "kind": "keyword",
                      "keyword": "number"
                    }
                  ]
                }
              },
              {
                "kind": "identifier",
                "name": "required",
                "optional": false,
                "tsType": {
                  "repr": "true",
                  "kind": "literal",
                  "literal": {
                    "kind": "boolean",
                    "boolean": true
                  }
                }
              }
            ],
            "returnType": {
              "repr": "bigint",
              "kind": "keyword",
              "keyword": "bigint"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/CommandInteractionOptionResolver.ts",
            "line": 192,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getChannel",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "name",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    {
                      "repr": "number",
                      "kind": "keyword",
                      "keyword": "number"
                    }
                  ]
                }
              },
              {
                "kind": "identifier",
                "name": "required",
                "optional": true,
                "tsType": {
                  "repr": "boolean",
                  "kind": "keyword",
                  "keyword": "boolean"
                }
              }
            ],
            "returnType": {
              "repr": "",
              "kind": "union",
              "union": [
                {
                  "repr": "bigint",
                  "kind": "keyword",
                  "keyword": "bigint"
                },
                {
                  "repr": "undefined",
                  "kind": "keyword",
                  "keyword": "undefined"
                }
              ]
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/CommandInteractionOptionResolver.ts",
            "line": 193,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getChannel",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "name",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    {
                      "repr": "number",
                      "kind": "keyword",
                      "keyword": "number"
                    }
                  ]
                }
              },
              {
                "kind": "assign",
                "left": {
                  "kind": "identifier",
                  "name": "required",
                  "optional": false,
                  "tsType": null
                },
                "right": "[UNSUPPORTED]",
                "tsType": null
              }
            ],
            "returnType": null,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/CommandInteractionOptionResolver.ts",
            "line": 194,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "searches for a mentionable-based option"
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getMentionable",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "name",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    {
                      "repr": "number",
                      "kind": "keyword",
                      "keyword": "number"
                    }
                  ]
                }
              },
              {
                "kind": "identifier",
                "name": "required",
                "optional": false,
                "tsType": {
                  "repr": "true",
                  "kind": "literal",
                  "literal": {
                    "kind": "boolean",
                    "boolean": true
                  }
                }
              }
            ],
            "returnType": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/CommandInteractionOptionResolver.ts",
            "line": 206,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getMentionable",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "name",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    {
                      "repr": "number",
                      "kind": "keyword",
                      "keyword": "number"
                    }
                  ]
                }
              },
              {
                "kind": "identifier",
                "name": "required",
                "optional": true,
                "tsType": {
                  "repr": "boolean",
                  "kind": "keyword",
                  "keyword": "boolean"
                }
              }
            ],
            "returnType": {
              "repr": "",
              "kind": "union",
              "union": [
                {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                {
                  "repr": "undefined",
                  "kind": "keyword",
                  "keyword": "undefined"
                }
              ]
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/CommandInteractionOptionResolver.ts",
            "line": 207,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getMentionable",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "name",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    {
                      "repr": "number",
                      "kind": "keyword",
                      "keyword": "number"
                    }
                  ]
                }
              },
              {
                "kind": "assign",
                "left": {
                  "kind": "identifier",
                  "name": "required",
                  "optional": false,
                  "tsType": null
                },
                "right": "[UNSUPPORTED]",
                "tsType": null
              }
            ],
            "returnType": null,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/CommandInteractionOptionResolver.ts",
            "line": 208,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "searches for a mentionable-based option"
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getRole",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "name",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    {
                      "repr": "number",
                      "kind": "keyword",
                      "keyword": "number"
                    }
                  ]
                }
              },
              {
                "kind": "identifier",
                "name": "required",
                "optional": false,
                "tsType": {
                  "repr": "true",
                  "kind": "literal",
                  "literal": {
                    "kind": "boolean",
                    "boolean": true
                  }
                }
              }
            ],
            "returnType": {
              "repr": "bigint",
              "kind": "keyword",
              "keyword": "bigint"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/CommandInteractionOptionResolver.ts",
            "line": 220,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getRole",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "name",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    {
                      "repr": "number",
                      "kind": "keyword",
                      "keyword": "number"
                    }
                  ]
                }
              },
              {
                "kind": "identifier",
                "name": "required",
                "optional": true,
                "tsType": {
                  "repr": "boolean",
                  "kind": "keyword",
                  "keyword": "boolean"
                }
              }
            ],
            "returnType": {
              "repr": "",
              "kind": "union",
              "union": [
                {
                  "repr": "bigint",
                  "kind": "keyword",
                  "keyword": "bigint"
                },
                {
                  "repr": "undefined",
                  "kind": "keyword",
                  "keyword": "undefined"
                }
              ]
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/CommandInteractionOptionResolver.ts",
            "line": 221,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getRole",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "name",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    {
                      "repr": "number",
                      "kind": "keyword",
                      "keyword": "number"
                    }
                  ]
                }
              },
              {
                "kind": "assign",
                "left": {
                  "kind": "identifier",
                  "name": "required",
                  "optional": false,
                  "tsType": null
                },
                "right": "[UNSUPPORTED]",
                "tsType": null
              }
            ],
            "returnType": null,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/CommandInteractionOptionResolver.ts",
            "line": 222,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "searches for an attachment option"
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getAttachment",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "name",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    {
                      "repr": "number",
                      "kind": "keyword",
                      "keyword": "number"
                    }
                  ]
                }
              },
              {
                "kind": "identifier",
                "name": "required",
                "optional": false,
                "tsType": {
                  "repr": "true",
                  "kind": "literal",
                  "literal": {
                    "kind": "boolean",
                    "boolean": true
                  }
                }
              }
            ],
            "returnType": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/CommandInteractionOptionResolver.ts",
            "line": 231,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getAttachment",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "name",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    {
                      "repr": "number",
                      "kind": "keyword",
                      "keyword": "number"
                    }
                  ]
                }
              },
              {
                "kind": "identifier",
                "name": "required",
                "optional": true,
                "tsType": {
                  "repr": "boolean",
                  "kind": "keyword",
                  "keyword": "boolean"
                }
              }
            ],
            "returnType": {
              "repr": "",
              "kind": "union",
              "union": [
                {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                {
                  "repr": "undefined",
                  "kind": "keyword",
                  "keyword": "undefined"
                }
              ]
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/CommandInteractionOptionResolver.ts",
            "line": 232,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getAttachment",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "name",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    {
                      "repr": "number",
                      "kind": "keyword",
                      "keyword": "number"
                    }
                  ]
                }
              },
              {
                "kind": "assign",
                "left": {
                  "kind": "identifier",
                  "name": "required",
                  "optional": false,
                  "tsType": null
                },
                "right": "[UNSUPPORTED]",
                "tsType": null
              }
            ],
            "returnType": null,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/CommandInteractionOptionResolver.ts",
            "line": 233,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "searches for the focused option"
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getFocused",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "assign",
                "left": {
                  "kind": "identifier",
                  "name": "full",
                  "optional": false,
                  "tsType": null
                },
                "right": "[UNSUPPORTED]",
                "tsType": null
              }
            ],
            "returnType": {
              "repr": "",
              "kind": "union",
              "union": [
                {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                },
                {
                  "repr": "bigint",
                  "kind": "keyword",
                  "keyword": "bigint"
                },
                {
                  "repr": "boolean",
                  "kind": "keyword",
                  "keyword": "boolean"
                },
                {
                  "repr": "undefined",
                  "kind": "keyword",
                  "keyword": "undefined"
                },
                {
                  "repr": "CommandInteractionOption",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "CommandInteractionOption"
                  }
                }
              ]
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/CommandInteractionOptionResolver.ts",
            "line": 245,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getSubCommand",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "assign",
                "left": {
                  "kind": "identifier",
                  "name": "required",
                  "optional": false,
                  "tsType": null
                },
                "right": "[UNSUPPORTED]",
                "tsType": null
              }
            ],
            "returnType": {
              "repr": "",
              "kind": "array",
              "array": {
                "repr": "",
                "kind": "parenthesized",
                "parenthesized": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    {
                      "repr": "",
                      "kind": "array",
                      "array": {
                        "repr": "CommandInteractionOption",
                        "kind": "typeRef",
                        "typeRef": {
                          "typeParams": null,
                          "typeName": "CommandInteractionOption"
                        }
                      }
                    },
                    {
                      "repr": "undefined",
                      "kind": "keyword",
                      "keyword": "undefined"
                    }
                  ]
                }
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/CommandInteractionOptionResolver.ts",
            "line": 255,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getSubCommandGroup",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "assign",
                "left": {
                  "kind": "identifier",
                  "name": "required",
                  "optional": false,
                  "tsType": null
                },
                "right": "[UNSUPPORTED]",
                "tsType": null
              }
            ],
            "returnType": {
              "repr": "",
              "kind": "array",
              "array": {
                "repr": "",
                "kind": "parenthesized",
                "parenthesized": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    {
                      "repr": "",
                      "kind": "array",
                      "array": {
                        "repr": "CommandInteractionOption",
                        "kind": "typeRef",
                        "typeRef": {
                          "typeParams": null,
                          "typeName": "CommandInteractionOption"
                        }
                      }
                    },
                    {
                      "repr": "undefined",
                      "kind": "keyword",
                      "keyword": "undefined"
                    }
                  ]
                }
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/CommandInteractionOptionResolver.ts",
            "line": 263,
            "col": 4
          }
        }
      ],
      "extends": null,
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "import",
    "name": "DiscordInteractionDataOption",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/CommandInteractionOptionResolver.ts",
      "line": 1,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
      "imported": "DiscordInteractionDataOption"
    }
  },
  {
    "kind": "import",
    "name": "DiscordInteractionDataResolved",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/CommandInteractionOptionResolver.ts",
      "line": 1,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
      "imported": "DiscordInteractionDataResolved"
    }
  },
  {
    "kind": "import",
    "name": "ApplicationCommandOptionTypes",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/CommandInteractionOptionResolver.ts",
      "line": 2,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
      "imported": "ApplicationCommandOptionTypes"
    }
  },
  {
    "kind": "interface",
    "name": "ActivityAssets",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Presence.ts",
      "line": 13,
      "col": 0
    },
    "declarationKind": "export",
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "largeImage",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Presence.ts",
            "line": 14,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "largeText",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Presence.ts",
            "line": 15,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "smallImage",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Presence.ts",
            "line": 16,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "smallText",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Presence.ts",
            "line": 17,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "Activities",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Presence.ts",
      "line": 20,
      "col": 0
    },
    "declarationKind": "export",
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "name",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Presence.ts",
            "line": 21,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "type",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Presence.ts",
            "line": 22,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "ActivityTypes",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "ActivityTypes"
            }
          },
          "typeParams": []
        },
        {
          "name": "url",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Presence.ts",
            "line": 23,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "createdAt",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Presence.ts",
            "line": 24,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "timestamps",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Presence.ts",
            "line": 25,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "typeLiteral",
            "typeLiteral": {
              "methods": [],
              "properties": [
                {
                  "name": "start",
                  "params": [],
                  "computed": false,
                  "optional": true,
                  "tsType": {
                    "repr": "number",
                    "kind": "keyword",
                    "keyword": "number"
                  },
                  "typeParams": []
                },
                {
                  "name": "end",
                  "params": [],
                  "computed": false,
                  "optional": true,
                  "tsType": {
                    "repr": "number",
                    "kind": "keyword",
                    "keyword": "number"
                  },
                  "typeParams": []
                }
              ],
              "callSignatures": [],
              "indexSignatures": []
            }
          },
          "typeParams": []
        },
        {
          "name": "applicationId",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Presence.ts",
            "line": 29,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "Snowflake",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Snowflake"
            }
          },
          "typeParams": []
        },
        {
          "name": "details",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Presence.ts",
            "line": 30,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "state",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Presence.ts",
            "line": 31,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "emoji",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Presence.ts",
            "line": 32,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "ComponentEmoji",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "ComponentEmoji"
            }
          },
          "typeParams": []
        },
        {
          "name": "party",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Presence.ts",
            "line": 33,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "typeLiteral",
            "typeLiteral": {
              "methods": [],
              "properties": [
                {
                  "name": "id",
                  "params": [],
                  "computed": false,
                  "optional": true,
                  "tsType": {
                    "repr": "string",
                    "kind": "keyword",
                    "keyword": "string"
                  },
                  "typeParams": []
                },
                {
                  "name": "size",
                  "params": [],
                  "computed": false,
                  "optional": true,
                  "tsType": {
                    "repr": "",
                    "kind": "array",
                    "array": {
                      "repr": "number",
                      "kind": "keyword",
                      "keyword": "number"
                    }
                  },
                  "typeParams": []
                }
              ],
              "callSignatures": [],
              "indexSignatures": []
            }
          },
          "typeParams": []
        },
        {
          "name": "assets",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Presence.ts",
            "line": 37,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "ActivityAssets",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "ActivityAssets"
            }
          },
          "typeParams": []
        },
        {
          "name": "secrets",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Presence.ts",
            "line": 38,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "DiscordActivitySecrets",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "DiscordActivitySecrets"
            }
          },
          "typeParams": []
        },
        {
          "name": "instance",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Presence.ts",
            "line": 39,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        },
        {
          "name": "flags",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Presence.ts",
            "line": 40,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "buttons",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Presence.ts",
            "line": 41,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "DiscordActivityButton",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "DiscordActivityButton"
            }
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "enum",
    "name": "StatusTypes",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Presence.ts",
      "line": 44,
      "col": 0
    },
    "declarationKind": "export",
    "enumDef": {
      "members": [
        {
          "name": "online",
          "init": {
            "repr": "0",
            "kind": "literal",
            "literal": {
              "kind": "number",
              "number": 0.0
            }
          }
        },
        {
          "name": "dnd",
          "init": {
            "repr": "1",
            "kind": "literal",
            "literal": {
              "kind": "number",
              "number": 1.0
            }
          }
        },
        {
          "name": "idle",
          "init": {
            "repr": "2",
            "kind": "literal",
            "literal": {
              "kind": "number",
              "number": 2.0
            }
          }
        },
        {
          "name": "invisible",
          "init": {
            "repr": "3",
            "kind": "literal",
            "literal": {
              "kind": "number",
              "number": 3.0
            }
          }
        },
        {
          "name": "offline",
          "init": {
            "repr": "4",
            "kind": "literal",
            "literal": {
              "kind": "number",
              "number": 4.0
            }
          }
        }
      ]
    }
  },
  {
    "kind": "class",
    "name": "Presence",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Presence.ts",
      "line": 52,
      "col": 0
    },
    "declarationKind": "export",
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "session",
              "optional": false,
              "tsType": {
                "repr": "Session",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Session"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "data",
              "optional": false,
              "tsType": {
                "repr": "DiscordPresenceUpdate",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "DiscordPresenceUpdate"
                }
              }
            }
          ],
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Presence.ts",
            "line": 53,
            "col": 4
          }
        }
      ],
      "properties": [
        {
          "tsType": {
            "repr": "Session",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Session"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "session",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Presence.ts",
            "line": 86,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "User",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "User"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "user",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Presence.ts",
            "line": 87,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "Snowflake",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Snowflake"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "guildId",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Presence.ts",
            "line": 88,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "StatusTypes",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "StatusTypes"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "status",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Presence.ts",
            "line": 89,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "Activities",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "Activities"
              }
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "activities",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Presence.ts",
            "line": 90,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "DiscordClientStatus",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "DiscordClientStatus"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "clientStatus",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Presence.ts",
            "line": 91,
            "col": 4
          }
        }
      ],
      "indexSignatures": [],
      "methods": [],
      "extends": null,
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "import",
    "name": "ActivityTypes",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Presence.ts",
      "line": 1,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
      "imported": "ActivityTypes"
    }
  },
  {
    "kind": "import",
    "name": "DiscordActivityButton",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Presence.ts",
      "line": 1,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
      "imported": "DiscordActivityButton"
    }
  },
  {
    "kind": "import",
    "name": "DiscordActivitySecrets",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Presence.ts",
      "line": 1,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
      "imported": "DiscordActivitySecrets"
    }
  },
  {
    "kind": "import",
    "name": "DiscordClientStatus",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Presence.ts",
      "line": 1,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
      "imported": "DiscordClientStatus"
    }
  },
  {
    "kind": "import",
    "name": "DiscordPresenceUpdate",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Presence.ts",
      "line": 1,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
      "imported": "DiscordPresenceUpdate"
    }
  },
  {
    "kind": "import",
    "name": "Session",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Presence.ts",
      "line": 8,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/Session.ts",
      "imported": "Session"
    }
  },
  {
    "kind": "import",
    "name": "User",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Presence.ts",
      "line": 9,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/structures/User.ts",
      "imported": "User"
    }
  },
  {
    "kind": "import",
    "name": "Snowflake",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Presence.ts",
      "line": 10,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/Snowflake.ts",
      "imported": "Snowflake"
    }
  },
  {
    "kind": "import",
    "name": "ComponentEmoji",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Presence.ts",
      "line": 11,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/Util.ts",
      "imported": "ComponentEmoji"
    }
  },
  {
    "kind": "function",
    "name": "urlToBase64",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/util/urlToBase64.ts",
      "line": 2,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "Converts a url to base 64. Useful for example, uploading/creating server emojis."
    },
    "functionDef": {
      "params": [
        {
          "kind": "identifier",
          "name": "url",
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          }
        }
      ],
      "returnType": {
        "repr": "Promise",
        "kind": "typeRef",
        "typeRef": {
          "typeParams": [
            {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            }
          ],
          "typeName": "Promise"
        }
      },
      "isAsync": true,
      "isGenerator": false,
      "typeParams": []
    }
  },
  {
    "kind": "function",
    "name": "encode",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/util/urlToBase64.ts",
      "line": 40,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "CREDIT: https://gist.github.com/enepomnyaschih/72c423f727d395eeaa09697058238727\nEncodes a given Uint8Array, ArrayBuffer or string into RFC4648 base64 representation",
      "tags": [
        {
          "kind": "param",
          "name": "data"
        }
      ]
    },
    "functionDef": {
      "params": [
        {
          "kind": "identifier",
          "name": "data",
          "optional": false,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "ArrayBuffer",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "ArrayBuffer"
                }
              },
              {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              }
            ]
          }
        }
      ],
      "returnType": {
        "repr": "string",
        "kind": "keyword",
        "keyword": "string"
      },
      "isAsync": false,
      "isGenerator": false,
      "typeParams": []
    }
  },
  {
    "kind": "class",
    "name": "EventEmitter",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/util/EventEmmiter.ts",
      "line": 8,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "An event emitter (observer pattern)"
    },
    "classDef": {
      "isAbstract": false,
      "constructors": [],
      "properties": [
        {
          "tsType": {
            "repr": "Map",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": [
                {
                  "repr": "PropertyKey",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "PropertyKey"
                  }
                },
                {
                  "repr": "",
                  "kind": "array",
                  "array": {
                    "repr": "Function",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Function"
                    }
                  }
                }
              ],
              "typeName": "Map"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "listeners",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/util/EventEmmiter.ts",
            "line": 9,
            "col": 4
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "on",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "event",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "func",
                "optional": false,
                "tsType": {
                  "repr": "Function",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Function"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "this",
              "kind": "this",
              "this": true
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/util/EventEmmiter.ts",
            "line": 17,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "off",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "event",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "func",
                "optional": false,
                "tsType": {
                  "repr": "Function",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Function"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "this",
              "kind": "this",
              "this": true
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/util/EventEmmiter.ts",
            "line": 37,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "once",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "event",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "func",
                "optional": false,
                "tsType": {
                  "repr": "Function",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Function"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "this",
              "kind": "this",
              "this": true
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/util/EventEmmiter.ts",
            "line": 41,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "emit",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "event",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "rest",
                "arg": {
                  "kind": "identifier",
                  "name": "args",
                  "optional": false,
                  "tsType": null
                },
                "tsType": {
                  "repr": "",
                  "kind": "array",
                  "array": {
                    "repr": "unknown",
                    "kind": "keyword",
                    "keyword": "unknown"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "boolean",
              "kind": "keyword",
              "keyword": "boolean"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/util/EventEmmiter.ts",
            "line": 55,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "listenerCount",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "eventName",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "number",
              "kind": "keyword",
              "keyword": "number"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/util/EventEmmiter.ts",
            "line": 67,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "rawListeners",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "eventName",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "",
              "kind": "union",
              "union": [
                {
                  "repr": "",
                  "kind": "array",
                  "array": {
                    "repr": "Function",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Function"
                    }
                  }
                },
                {
                  "repr": "undefined",
                  "kind": "keyword",
                  "keyword": "undefined"
                }
              ]
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/util/EventEmmiter.ts",
            "line": 71,
            "col": 4
          }
        }
      ],
      "extends": null,
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "class",
    "name": "default",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/util/EventEmmiter.ts",
      "line": 8,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "An event emitter (observer pattern)"
    },
    "classDef": {
      "isAbstract": false,
      "constructors": [],
      "properties": [
        {
          "tsType": {
            "repr": "Map",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": [
                {
                  "repr": "PropertyKey",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "PropertyKey"
                  }
                },
                {
                  "repr": "",
                  "kind": "array",
                  "array": {
                    "repr": "Function",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Function"
                    }
                  }
                }
              ],
              "typeName": "Map"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "listeners",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/util/EventEmmiter.ts",
            "line": 9,
            "col": 4
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "on",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "event",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "func",
                "optional": false,
                "tsType": {
                  "repr": "Function",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Function"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "this",
              "kind": "this",
              "this": true
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/util/EventEmmiter.ts",
            "line": 17,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "off",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "event",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "func",
                "optional": false,
                "tsType": {
                  "repr": "Function",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Function"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "this",
              "kind": "this",
              "this": true
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/util/EventEmmiter.ts",
            "line": 37,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "once",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "event",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "func",
                "optional": false,
                "tsType": {
                  "repr": "Function",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Function"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "this",
              "kind": "this",
              "this": true
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/util/EventEmmiter.ts",
            "line": 41,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "emit",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "event",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "rest",
                "arg": {
                  "kind": "identifier",
                  "name": "args",
                  "optional": false,
                  "tsType": null
                },
                "tsType": {
                  "repr": "",
                  "kind": "array",
                  "array": {
                    "repr": "unknown",
                    "kind": "keyword",
                    "keyword": "unknown"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "boolean",
              "kind": "keyword",
              "keyword": "boolean"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/util/EventEmmiter.ts",
            "line": 55,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "listenerCount",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "eventName",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "number",
              "kind": "keyword",
              "keyword": "number"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/util/EventEmmiter.ts",
            "line": 67,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "rawListeners",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "eventName",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "",
              "kind": "union",
              "union": [
                {
                  "repr": "",
                  "kind": "array",
                  "array": {
                    "repr": "Function",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Function"
                    }
                  }
                },
                {
                  "repr": "undefined",
                  "kind": "keyword",
                  "keyword": "undefined"
                }
              ]
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/util/EventEmmiter.ts",
            "line": 71,
            "col": 4
          }
        }
      ],
      "extends": null,
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "typeAlias",
    "name": "Snowflake",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/Snowflake.ts",
      "line": 2,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "snowflake type"
    },
    "typeAliasDef": {
      "tsType": {
        "repr": "string",
        "kind": "keyword",
        "keyword": "string"
      },
      "typeParams": []
    }
  },
  {
    "kind": "variable",
    "name": "DiscordEpoch",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/Snowflake.ts",
      "line": 5,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "Discord epoch"
    },
    "variableDef": {
      "tsType": {
        "repr": "1420070400000",
        "kind": "literal",
        "literal": {
          "kind": "number",
          "number": 1420070400000.0
        }
      },
      "kind": "const"
    }
  },
  {
    "kind": "variable",
    "name": "Snowflake",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/Snowflake.ts",
      "line": 8,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "utilities for Snowflakes"
    },
    "variableDef": {
      "tsType": null,
      "kind": "const"
    }
  },
  {
    "kind": "class",
    "name": "WelcomeScreen",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/WelcomeScreen.ts",
      "line": 8,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "tags": [
        {
          "kind": "unsupported",
          "value": "@link https://discord.com/developers/docs/resources/guild#welcome-screen-object"
        }
      ]
    },
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "session",
              "optional": false,
              "tsType": {
                "repr": "Session",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Session"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "data",
              "optional": false,
              "tsType": {
                "repr": "DiscordWelcomeScreen",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "DiscordWelcomeScreen"
                }
              }
            }
          ],
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/WelcomeScreen.ts",
            "line": 9,
            "col": 4
          }
        }
      ],
      "properties": [
        {
          "tsType": {
            "repr": "Session",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Session"
            }
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "session",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/WelcomeScreen.ts",
            "line": 20,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "description",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/WelcomeScreen.ts",
            "line": 22,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "WelcomeChannel",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "WelcomeChannel"
              }
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "welcomeChannels",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/WelcomeScreen.ts",
            "line": 23,
            "col": 4
          }
        }
      ],
      "indexSignatures": [],
      "methods": [],
      "extends": null,
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "class",
    "name": "default",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/WelcomeScreen.ts",
      "line": 8,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "tags": [
        {
          "kind": "unsupported",
          "value": "@link https://discord.com/developers/docs/resources/guild#welcome-screen-object"
        }
      ]
    },
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "session",
              "optional": false,
              "tsType": {
                "repr": "Session",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Session"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "data",
              "optional": false,
              "tsType": {
                "repr": "DiscordWelcomeScreen",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "DiscordWelcomeScreen"
                }
              }
            }
          ],
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/WelcomeScreen.ts",
            "line": 9,
            "col": 4
          }
        }
      ],
      "properties": [
        {
          "tsType": {
            "repr": "Session",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Session"
            }
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "session",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/WelcomeScreen.ts",
            "line": 20,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "description",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/WelcomeScreen.ts",
            "line": 22,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "WelcomeChannel",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "WelcomeChannel"
              }
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "welcomeChannels",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/WelcomeScreen.ts",
            "line": 23,
            "col": 4
          }
        }
      ],
      "indexSignatures": [],
      "methods": [],
      "extends": null,
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "import",
    "name": "Session",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/WelcomeScreen.ts",
      "line": 1,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/Session.ts",
      "imported": "Session"
    }
  },
  {
    "kind": "import",
    "name": "DiscordWelcomeScreen",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/WelcomeScreen.ts",
      "line": 2,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
      "imported": "DiscordWelcomeScreen"
    }
  },
  {
    "kind": "import",
    "name": "WelcomeChannel",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/WelcomeScreen.ts",
      "line": 3,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/structures/WelcomeChannel.ts",
      "imported": "default"
    }
  },
  {
    "kind": "interface",
    "name": "Team",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Application.ts",
      "line": 15,
      "col": 0
    },
    "declarationKind": "export",
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "icon",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Application.ts",
            "line": 17,
            "col": 4
          },
          "jsDoc": {
            "doc": "a hash of the image of the team's icon"
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Application.ts",
            "line": 19,
            "col": 4
          },
          "jsDoc": {
            "doc": "the unique id of the team"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "members",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Application.ts",
            "line": 21,
            "col": 4
          },
          "jsDoc": {
            "doc": "the members of the team"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "TeamMember",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "TeamMember"
              }
            }
          },
          "typeParams": []
        },
        {
          "name": "ownerUserId",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Application.ts",
            "line": 23,
            "col": 4
          },
          "jsDoc": {
            "doc": "user id of the current team owner"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "name",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Application.ts",
            "line": 25,
            "col": 4
          },
          "jsDoc": {
            "doc": "team name"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "TeamMember",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Application.ts",
      "line": 28,
      "col": 0
    },
    "declarationKind": "export",
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "membershipState",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Application.ts",
            "line": 30,
            "col": 4
          },
          "jsDoc": {
            "doc": "the user's membership state on the team"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "TeamMembershipStates",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "TeamMembershipStates"
            }
          },
          "typeParams": []
        },
        {
          "name": "permissions",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Application.ts",
            "line": 31,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "*",
              "kind": "literal",
              "literal": {
                "kind": "string",
                "string": "*"
              }
            }
          },
          "typeParams": []
        },
        {
          "name": "teamId",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Application.ts",
            "line": 33,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "user",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Application.ts",
            "line": 35,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "",
            "kind": "intersection",
            "intersection": [
              {
                "repr": "Partial",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": [
                    {
                      "repr": "User",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "User"
                      }
                    }
                  ],
                  "typeName": "Partial"
                }
              },
              {
                "repr": "Pick",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": [
                    {
                      "repr": "User",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "User"
                      }
                    },
                    {
                      "repr": "",
                      "kind": "union",
                      "union": [
                        {
                          "repr": "avatarHash",
                          "kind": "literal",
                          "literal": {
                            "kind": "string",
                            "string": "avatarHash"
                          }
                        },
                        {
                          "repr": "discriminator",
                          "kind": "literal",
                          "literal": {
                            "kind": "string",
                            "string": "discriminator"
                          }
                        },
                        {
                          "repr": "id",
                          "kind": "literal",
                          "literal": {
                            "kind": "string",
                            "string": "id"
                          }
                        },
                        {
                          "repr": "username",
                          "kind": "literal",
                          "literal": {
                            "kind": "string",
                            "string": "username"
                          }
                        }
                      ]
                    }
                  ],
                  "typeName": "Pick"
                }
              }
            ]
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "function",
    "name": "NewTeam",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Application.ts",
      "line": 39,
      "col": 0
    },
    "declarationKind": "export",
    "functionDef": {
      "params": [
        {
          "kind": "identifier",
          "name": "session",
          "optional": false,
          "tsType": {
            "repr": "Session",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Session"
            }
          }
        },
        {
          "kind": "identifier",
          "name": "data",
          "optional": false,
          "tsType": {
            "repr": "DiscordTeam",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "DiscordTeam"
            }
          }
        }
      ],
      "returnType": {
        "repr": "Team",
        "kind": "typeRef",
        "typeRef": {
          "typeParams": null,
          "typeName": "Team"
        }
      },
      "isAsync": false,
      "isGenerator": false,
      "typeParams": []
    }
  },
  {
    "kind": "class",
    "name": "Application",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Application.ts",
      "line": 58,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "tags": [
        {
          "kind": "unsupported",
          "value": "@link https://discord.com/developers/docs/resources/application#application-object"
        }
      ]
    },
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "session",
              "optional": false,
              "tsType": {
                "repr": "Session",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Session"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "data",
              "optional": false,
              "tsType": {
                "repr": "DiscordApplication",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "DiscordApplication"
                }
              }
            }
          ],
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Application.ts",
            "line": 59,
            "col": 4
          }
        }
      ],
      "properties": [
        {
          "tsType": {
            "repr": "Session",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Session"
            }
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "session",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Application.ts",
            "line": 82,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "Snowflake",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Snowflake"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Application.ts",
            "line": 83,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "name",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Application.ts",
            "line": 84,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "icon",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Application.ts",
            "line": 85,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "description",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Application.ts",
            "line": 86,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "rpcOrigins",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Application.ts",
            "line": 87,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "botPublic",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Application.ts",
            "line": 88,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "botRequireCodeGrant",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Application.ts",
            "line": 89,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "termsOfServiceURL",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Application.ts",
            "line": 90,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "privacyPolicyURL",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Application.ts",
            "line": 91,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "Partial",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": [
                {
                  "repr": "User",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "User"
                  }
                }
              ],
              "typeName": "Partial"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "owner",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Application.ts",
            "line": 92,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "SummaryDeprecated",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "SummaryDeprecated"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "summary",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Application.ts",
            "line": 93,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "verifyKey",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Application.ts",
            "line": 94,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "Team",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Team"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "team",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Application.ts",
            "line": 95,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "Snowflake",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Snowflake"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "guildId",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Application.ts",
            "line": 96,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "Snowflake",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Snowflake"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "primarySkuId",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Application.ts",
            "line": 97,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "slug",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Application.ts",
            "line": 98,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "coverImage",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Application.ts",
            "line": 99,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "flags",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Application.ts",
            "line": 100,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "tags",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Application.ts",
            "line": 101,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "DiscordInstallParams",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "DiscordInstallParams"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "installParams",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Application.ts",
            "line": 102,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "customInstallURL",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Application.ts",
            "line": 103,
            "col": 4
          }
        }
      ],
      "indexSignatures": [],
      "methods": [],
      "extends": null,
      "implements": [
        {
          "repr": "Model",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "Model"
          }
        }
      ],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "class",
    "name": "default",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Application.ts",
      "line": 58,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "tags": [
        {
          "kind": "unsupported",
          "value": "@link https://discord.com/developers/docs/resources/application#application-object"
        }
      ]
    },
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "session",
              "optional": false,
              "tsType": {
                "repr": "Session",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Session"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "data",
              "optional": false,
              "tsType": {
                "repr": "DiscordApplication",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "DiscordApplication"
                }
              }
            }
          ],
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Application.ts",
            "line": 59,
            "col": 4
          }
        }
      ],
      "properties": [
        {
          "tsType": {
            "repr": "Session",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Session"
            }
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "session",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Application.ts",
            "line": 82,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "Snowflake",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Snowflake"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Application.ts",
            "line": 83,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "name",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Application.ts",
            "line": 84,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "icon",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Application.ts",
            "line": 85,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "description",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Application.ts",
            "line": 86,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "rpcOrigins",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Application.ts",
            "line": 87,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "botPublic",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Application.ts",
            "line": 88,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "botRequireCodeGrant",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Application.ts",
            "line": 89,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "termsOfServiceURL",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Application.ts",
            "line": 90,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "privacyPolicyURL",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Application.ts",
            "line": 91,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "Partial",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": [
                {
                  "repr": "User",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "User"
                  }
                }
              ],
              "typeName": "Partial"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "owner",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Application.ts",
            "line": 92,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "SummaryDeprecated",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "SummaryDeprecated"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "summary",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Application.ts",
            "line": 93,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "verifyKey",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Application.ts",
            "line": 94,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "Team",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Team"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "team",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Application.ts",
            "line": 95,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "Snowflake",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Snowflake"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "guildId",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Application.ts",
            "line": 96,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "Snowflake",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Snowflake"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "primarySkuId",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Application.ts",
            "line": 97,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "slug",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Application.ts",
            "line": 98,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "coverImage",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Application.ts",
            "line": 99,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "flags",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Application.ts",
            "line": 100,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "tags",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Application.ts",
            "line": 101,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "DiscordInstallParams",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "DiscordInstallParams"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "installParams",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Application.ts",
            "line": 102,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "customInstallURL",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Application.ts",
            "line": 103,
            "col": 4
          }
        }
      ],
      "indexSignatures": [],
      "methods": [],
      "extends": null,
      "implements": [
        {
          "repr": "Model",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "Model"
          }
        }
      ],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "import",
    "name": "Model",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Application.ts",
      "line": 1,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/structures/Base.ts",
      "imported": "Model"
    }
  },
  {
    "kind": "import",
    "name": "Snowflake",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Application.ts",
      "line": 2,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/Snowflake.ts",
      "imported": "Snowflake"
    }
  },
  {
    "kind": "import",
    "name": "Session",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Application.ts",
      "line": 3,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/Session.ts",
      "imported": "Session"
    }
  },
  {
    "kind": "import",
    "name": "DiscordApplication",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Application.ts",
      "line": 4,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
      "imported": "DiscordApplication"
    }
  },
  {
    "kind": "import",
    "name": "DiscordInstallParams",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Application.ts",
      "line": 4,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
      "imported": "DiscordInstallParams"
    }
  },
  {
    "kind": "import",
    "name": "DiscordTeam",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Application.ts",
      "line": 4,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
      "imported": "DiscordTeam"
    }
  },
  {
    "kind": "import",
    "name": "DiscordUser",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Application.ts",
      "line": 4,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
      "imported": "DiscordUser"
    }
  },
  {
    "kind": "import",
    "name": "TeamMembershipStates",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Application.ts",
      "line": 4,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
      "imported": "TeamMembershipStates"
    }
  },
  {
    "kind": "import",
    "name": "User",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Application.ts",
      "line": 11,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/structures/User.ts",
      "imported": "default"
    }
  },
  {
    "kind": "class",
    "name": "TextInput",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/TextInputComponent.ts",
      "line": 7,
      "col": 0
    },
    "declarationKind": "export",
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "session",
              "optional": false,
              "tsType": {
                "repr": "Session",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Session"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "data",
              "optional": false,
              "tsType": {
                "repr": "DiscordInputTextComponent",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "DiscordInputTextComponent"
                }
              }
            }
          ],
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/TextInputComponent.ts",
            "line": 8,
            "col": 4
          }
        }
      ],
      "properties": [
        {
          "tsType": {
            "repr": "Session",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Session"
            }
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "session",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/TextInputComponent.ts",
            "line": 24,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "MessageComponentTypes.InputText",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "MessageComponentTypes.InputText"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "type",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/TextInputComponent.ts",
            "line": 25,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "TextStyles",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "TextStyles"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "style",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/TextInputComponent.ts",
            "line": 26,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "customId",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/TextInputComponent.ts",
            "line": 27,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "label",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/TextInputComponent.ts",
            "line": 28,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "placeholder",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/TextInputComponent.ts",
            "line": 29,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "value",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/TextInputComponent.ts",
            "line": 30,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "minLength",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/TextInputComponent.ts",
            "line": 31,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "maxLength",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/TextInputComponent.ts",
            "line": 32,
            "col": 4
          }
        }
      ],
      "indexSignatures": [],
      "methods": [],
      "extends": "BaseComponent",
      "implements": [
        {
          "repr": "TextInputComponent",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "TextInputComponent"
          }
        }
      ],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "class",
    "name": "default",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/TextInputComponent.ts",
      "line": 7,
      "col": 0
    },
    "declarationKind": "export",
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "session",
              "optional": false,
              "tsType": {
                "repr": "Session",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Session"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "data",
              "optional": false,
              "tsType": {
                "repr": "DiscordInputTextComponent",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "DiscordInputTextComponent"
                }
              }
            }
          ],
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/TextInputComponent.ts",
            "line": 8,
            "col": 4
          }
        }
      ],
      "properties": [
        {
          "tsType": {
            "repr": "Session",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Session"
            }
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "session",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/TextInputComponent.ts",
            "line": 24,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "MessageComponentTypes.InputText",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "MessageComponentTypes.InputText"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "type",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/TextInputComponent.ts",
            "line": 25,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "TextStyles",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "TextStyles"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "style",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/TextInputComponent.ts",
            "line": 26,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "customId",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/TextInputComponent.ts",
            "line": 27,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "label",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/TextInputComponent.ts",
            "line": 28,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "placeholder",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/TextInputComponent.ts",
            "line": 29,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "value",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/TextInputComponent.ts",
            "line": 30,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "minLength",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/TextInputComponent.ts",
            "line": 31,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "maxLength",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/TextInputComponent.ts",
            "line": 32,
            "col": 4
          }
        }
      ],
      "indexSignatures": [],
      "methods": [],
      "extends": "BaseComponent",
      "implements": [
        {
          "repr": "TextInputComponent",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "TextInputComponent"
          }
        }
      ],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "import",
    "name": "Session",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/TextInputComponent.ts",
      "line": 1,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/Session.ts",
      "imported": "Session"
    }
  },
  {
    "kind": "import",
    "name": "DiscordInputTextComponent",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/TextInputComponent.ts",
      "line": 2,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
      "imported": "DiscordInputTextComponent"
    }
  },
  {
    "kind": "import",
    "name": "TextInputComponent",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/TextInputComponent.ts",
      "line": 3,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/Component.ts",
      "imported": "TextInputComponent"
    }
  },
  {
    "kind": "import",
    "name": "MessageComponentTypes",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/TextInputComponent.ts",
      "line": 4,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
      "imported": "MessageComponentTypes"
    }
  },
  {
    "kind": "import",
    "name": "TextStyles",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/TextInputComponent.ts",
      "line": 4,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
      "imported": "TextStyles"
    }
  },
  {
    "kind": "import",
    "name": "BaseComponent",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/TextInputComponent.ts",
      "line": 5,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/Component.ts",
      "imported": "default"
    }
  },
  {
    "kind": "interface",
    "name": "SymCache",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/Util.ts",
      "line": 8,
      "col": 0
    },
    "declarationKind": "export",
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "cache",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/Util.ts",
            "line": 9,
            "col": 4
          },
          "params": [],
          "readonly": true,
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "symbol",
            "kind": "keyword",
            "keyword": "symbol"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "enum",
    "name": "MessageFlags",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/Util.ts",
      "line": 15,
      "col": 0
    },
    "declarationKind": "export",
    "enumDef": {
      "members": [
        {
          "name": "CrossPosted",
          "jsDoc": {
            "doc": "this message has been published to subscribed channels (via Channel Following)"
          }
        },
        {
          "name": "IsCrosspost",
          "jsDoc": {
            "doc": "this message originated from a message in another channel (via Channel Following)"
          }
        },
        {
          "name": "SupressEmbeds",
          "jsDoc": {
            "doc": "do not include any embeds when serializing this message"
          }
        },
        {
          "name": "SourceMessageDeleted",
          "jsDoc": {
            "doc": "the source message for this crosspost has been deleted (via Channel Following)"
          }
        },
        {
          "name": "Urgent",
          "jsDoc": {
            "doc": "this message came from the urgent message system"
          }
        },
        {
          "name": "HasThread",
          "jsDoc": {
            "doc": "this message has an associated thread, with the same id as the message"
          }
        },
        {
          "name": "Ephemeral",
          "jsDoc": {
            "doc": "this message is only visible to the user who invoked the Interaction"
          }
        },
        {
          "name": "Loading",
          "jsDoc": {
            "doc": "this message is an Interaction Response and the bot is \"thinking\""
          }
        },
        {
          "name": "FailedToMentionSomeRolesInThread",
          "jsDoc": {
            "doc": "this message failed to mention some roles and add their members to the thread"
          }
        }
      ]
    }
  },
  {
    "kind": "typeAlias",
    "name": "ComponentBuilder",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/Util.ts",
      "line": 36,
      "col": 0
    },
    "declarationKind": "export",
    "typeAliasDef": {
      "tsType": {
        "repr": "",
        "kind": "union",
        "union": [
          {
            "repr": "InputTextBuilder",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "InputTextBuilder"
            }
          },
          {
            "repr": "SelectMenuBuilder",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "SelectMenuBuilder"
            }
          },
          {
            "repr": "ButtonBuilder",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "ButtonBuilder"
            }
          }
        ]
      },
      "typeParams": []
    }
  },
  {
    "kind": "typeAlias",
    "name": "ComponentEmoji",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/Util.ts",
      "line": 44,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "*\nUtility type"
    },
    "typeAliasDef": {
      "tsType": {
        "repr": "",
        "kind": "typeLiteral",
        "typeLiteral": {
          "methods": [],
          "properties": [
            {
              "name": "id",
              "params": [],
              "computed": false,
              "optional": false,
              "tsType": {
                "repr": "Snowflake",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Snowflake"
                }
              },
              "typeParams": []
            },
            {
              "name": "name",
              "params": [],
              "computed": false,
              "optional": false,
              "tsType": {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              },
              "typeParams": []
            },
            {
              "name": "animated",
              "params": [],
              "computed": false,
              "optional": true,
              "tsType": {
                "repr": "boolean",
                "kind": "keyword",
                "keyword": "boolean"
              },
              "typeParams": []
            }
          ],
          "callSignatures": [],
          "indexSignatures": []
        }
      },
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "PermissionsOverwrites",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/Util.ts",
      "line": 53,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "Utility type"
    },
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/Util.ts",
            "line": 54,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "Snowflake",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Snowflake"
            }
          },
          "typeParams": []
        },
        {
          "name": "type",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/Util.ts",
            "line": 55,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "0",
                "kind": "literal",
                "literal": {
                  "kind": "number",
                  "number": 0.0
                }
              },
              {
                "repr": "1",
                "kind": "literal",
                "literal": {
                  "kind": "number",
                  "number": 1.0
                }
              }
            ]
          },
          "typeParams": []
        },
        {
          "name": "allow",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/Util.ts",
            "line": 56,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "Permissions",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Permissions"
            }
          },
          "typeParams": []
        },
        {
          "name": "deny",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/Util.ts",
            "line": 57,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "Permissions",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Permissions"
            }
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "typeAlias",
    "name": "ImageFormat",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/Util.ts",
      "line": 63,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "tags": [
        {
          "kind": "unsupported",
          "value": "@link https://discord.com/developers/docs/reference#image-formatting"
        }
      ]
    },
    "typeAliasDef": {
      "tsType": {
        "repr": "",
        "kind": "union",
        "union": [
          {
            "repr": "jpg",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "jpg"
            }
          },
          {
            "repr": "jpeg",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "jpeg"
            }
          },
          {
            "repr": "png",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "png"
            }
          },
          {
            "repr": "webp",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "webp"
            }
          },
          {
            "repr": "gif",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "gif"
            }
          },
          {
            "repr": "json",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "json"
            }
          }
        ]
      },
      "typeParams": []
    }
  },
  {
    "kind": "typeAlias",
    "name": "ImageSize",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/Util.ts",
      "line": 68,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "tags": [
        {
          "kind": "unsupported",
          "value": "@link https://discord.com/developers/docs/reference#image-formatting"
        }
      ]
    },
    "typeAliasDef": {
      "tsType": {
        "repr": "",
        "kind": "union",
        "union": [
          {
            "repr": "16",
            "kind": "literal",
            "literal": {
              "kind": "number",
              "number": 16.0
            }
          },
          {
            "repr": "32",
            "kind": "literal",
            "literal": {
              "kind": "number",
              "number": 32.0
            }
          },
          {
            "repr": "64",
            "kind": "literal",
            "literal": {
              "kind": "number",
              "number": 64.0
            }
          },
          {
            "repr": "128",
            "kind": "literal",
            "literal": {
              "kind": "number",
              "number": 128.0
            }
          },
          {
            "repr": "256",
            "kind": "literal",
            "literal": {
              "kind": "number",
              "number": 256.0
            }
          },
          {
            "repr": "512",
            "kind": "literal",
            "literal": {
              "kind": "number",
              "number": 512.0
            }
          },
          {
            "repr": "1024",
            "kind": "literal",
            "literal": {
              "kind": "number",
              "number": 1024.0
            }
          },
          {
            "repr": "2048",
            "kind": "literal",
            "literal": {
              "kind": "number",
              "number": 2048.0
            }
          },
          {
            "repr": "4096",
            "kind": "literal",
            "literal": {
              "kind": "number",
              "number": 4096.0
            }
          }
        ]
      },
      "typeParams": []
    }
  },
  {
    "kind": "class",
    "name": "Util",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/Util.ts",
      "line": 73,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "Utility functions"
    },
    "classDef": {
      "isAbstract": false,
      "constructors": [],
      "properties": [],
      "indexSignatures": [],
      "methods": [
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": true,
          "name": "formatImageURL",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "url",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "assign",
                "left": {
                  "kind": "identifier",
                  "name": "size",
                  "optional": false,
                  "tsType": {
                    "repr": "ImageSize",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "ImageSize"
                    }
                  }
                },
                "right": "[UNSUPPORTED]",
                "tsType": null
              },
              {
                "kind": "identifier",
                "name": "format",
                "optional": true,
                "tsType": {
                  "repr": "ImageFormat",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "ImageFormat"
                  }
                }
              }
            ],
            "returnType": null,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/Util.ts",
            "line": 74,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": true,
          "name": "iconHashToBigInt",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "hash",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": null,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/Util.ts",
            "line": 78,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": true,
          "name": "iconBigintToHash",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "icon",
                "optional": false,
                "tsType": {
                  "repr": "bigint",
                  "kind": "keyword",
                  "keyword": "bigint"
                }
              }
            ],
            "returnType": null,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/Util.ts",
            "line": 82,
            "col": 4
          }
        }
      ],
      "extends": null,
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "class",
    "name": "default",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/Util.ts",
      "line": 73,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "Utility functions"
    },
    "classDef": {
      "isAbstract": false,
      "constructors": [],
      "properties": [],
      "indexSignatures": [],
      "methods": [
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": true,
          "name": "formatImageURL",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "url",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "assign",
                "left": {
                  "kind": "identifier",
                  "name": "size",
                  "optional": false,
                  "tsType": {
                    "repr": "ImageSize",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "ImageSize"
                    }
                  }
                },
                "right": "[UNSUPPORTED]",
                "tsType": null
              },
              {
                "kind": "identifier",
                "name": "format",
                "optional": true,
                "tsType": {
                  "repr": "ImageFormat",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "ImageFormat"
                  }
                }
              }
            ],
            "returnType": null,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/Util.ts",
            "line": 74,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": true,
          "name": "iconHashToBigInt",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "hash",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": null,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/Util.ts",
            "line": 78,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": true,
          "name": "iconBigintToHash",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "icon",
                "optional": false,
                "tsType": {
                  "repr": "bigint",
                  "kind": "keyword",
                  "keyword": "bigint"
                }
              }
            ],
            "returnType": null,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/Util.ts",
            "line": 82,
            "col": 4
          }
        }
      ],
      "extends": null,
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "import",
    "name": "ButtonBuilder",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/Util.ts",
      "line": 1,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/mod.ts",
      "imported": "ButtonBuilder"
    }
  },
  {
    "kind": "import",
    "name": "InputTextBuilder",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/Util.ts",
      "line": 1,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/mod.ts",
      "imported": "InputTextBuilder"
    }
  },
  {
    "kind": "import",
    "name": "SelectMenuBuilder",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/Util.ts",
      "line": 1,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/mod.ts",
      "imported": "SelectMenuBuilder"
    }
  },
  {
    "kind": "import",
    "name": "Permissions",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/Util.ts",
      "line": 2,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/structures/Permissions.ts",
      "imported": "Permissions"
    }
  },
  {
    "kind": "import",
    "name": "Snowflake",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/Util.ts",
      "line": 3,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/Snowflake.ts",
      "imported": "Snowflake"
    }
  },
  {
    "kind": "interface",
    "name": "Model",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Base.ts",
      "line": 7,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "Represents a Discord data model"
    },
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Base.ts",
            "line": 9,
            "col": 4
          },
          "jsDoc": {
            "doc": "id of the model"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "Snowflake",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Snowflake"
            }
          },
          "typeParams": []
        },
        {
          "name": "session",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Base.ts",
            "line": 11,
            "col": 4
          },
          "jsDoc": {
            "doc": "reference to the client that instantiated the model"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "Session",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Session"
            }
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "import",
    "name": "Snowflake",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Base.ts",
      "line": 1,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/Snowflake.ts",
      "imported": "Snowflake"
    }
  },
  {
    "kind": "import",
    "name": "Session",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Base.ts",
      "line": 2,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/Session.ts",
      "imported": "Session"
    }
  },
  {
    "kind": "class",
    "name": "BaseComponent",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/Component.ts",
      "line": 4,
      "col": 0
    },
    "declarationKind": "export",
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "type",
              "optional": false,
              "tsType": {
                "repr": "MessageComponentTypes",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "MessageComponentTypes"
                }
              }
            }
          ],
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/Component.ts",
            "line": 5,
            "col": 4
          }
        }
      ],
      "properties": [
        {
          "tsType": {
            "repr": "MessageComponentTypes",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "MessageComponentTypes"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "type",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/Component.ts",
            "line": 9,
            "col": 4
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "isActionRow",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "this is ActionRowComponent",
              "kind": "typePredicate",
              "typePredicate": {
                "asserts": false,
                "param": {
                  "type": "this"
                },
                "type": {
                  "repr": "ActionRowComponent",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "ActionRowComponent"
                  }
                }
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/Component.ts",
            "line": 11,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "isButton",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "this is ButtonComponent",
              "kind": "typePredicate",
              "typePredicate": {
                "asserts": false,
                "param": {
                  "type": "this"
                },
                "type": {
                  "repr": "ButtonComponent",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "ButtonComponent"
                  }
                }
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/Component.ts",
            "line": 15,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "isSelectMenu",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "this is SelectMenuComponent",
              "kind": "typePredicate",
              "typePredicate": {
                "asserts": false,
                "param": {
                  "type": "this"
                },
                "type": {
                  "repr": "SelectMenuComponent",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "SelectMenuComponent"
                  }
                }
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/Component.ts",
            "line": 19,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "isTextInput",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "this is TextInputComponent",
              "kind": "typePredicate",
              "typePredicate": {
                "asserts": false,
                "param": {
                  "type": "this"
                },
                "type": {
                  "repr": "TextInputComponent",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "TextInputComponent"
                  }
                }
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/Component.ts",
            "line": 23,
            "col": 4
          }
        }
      ],
      "extends": null,
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "ActionRowComponent",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/Component.ts",
      "line": 29,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "Action Row Component"
    },
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "type",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/Component.ts",
            "line": 30,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "MessageComponentTypes.ActionRow",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "MessageComponentTypes.ActionRow"
            }
          },
          "typeParams": []
        },
        {
          "name": "components",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/Component.ts",
            "line": 31,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "Array",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": [
                {
                  "repr": "Exclude",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": [
                      {
                        "repr": "Component",
                        "kind": "typeRef",
                        "typeRef": {
                          "typeParams": null,
                          "typeName": "Component"
                        }
                      },
                      {
                        "repr": "ActionRowComponent",
                        "kind": "typeRef",
                        "typeRef": {
                          "typeParams": null,
                          "typeName": "ActionRowComponent"
                        }
                      }
                    ],
                    "typeName": "Exclude"
                  }
                }
              ],
              "typeName": "Array"
            }
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "typeAlias",
    "name": "Component",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/Component.ts",
      "line": 35,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "All Components"
    },
    "typeAliasDef": {
      "tsType": {
        "repr": "",
        "kind": "union",
        "union": [
          {
            "repr": "ActionRowComponent",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "ActionRowComponent"
            }
          },
          {
            "repr": "ButtonComponent",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "ButtonComponent"
            }
          },
          {
            "repr": "LinkButtonComponent",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "LinkButtonComponent"
            }
          },
          {
            "repr": "SelectMenuComponent",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "SelectMenuComponent"
            }
          },
          {
            "repr": "TextInputComponent",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "TextInputComponent"
            }
          }
        ]
      },
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "ButtonComponent",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/Component.ts",
      "line": 43,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "Button Component"
    },
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "type",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/Component.ts",
            "line": 44,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "MessageComponentTypes.Button",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "MessageComponentTypes.Button"
            }
          },
          "typeParams": []
        },
        {
          "name": "style",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/Component.ts",
            "line": 45,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "ButtonStyles.Primary",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "ButtonStyles.Primary"
                }
              },
              {
                "repr": "ButtonStyles.Secondary",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "ButtonStyles.Secondary"
                }
              },
              {
                "repr": "ButtonStyles.Success",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "ButtonStyles.Success"
                }
              },
              {
                "repr": "ButtonStyles.Danger",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "ButtonStyles.Danger"
                }
              }
            ]
          },
          "typeParams": []
        },
        {
          "name": "label",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/Component.ts",
            "line": 46,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "emoji",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/Component.ts",
            "line": 47,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "Emoji",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Emoji"
            }
          },
          "typeParams": []
        },
        {
          "name": "customId",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/Component.ts",
            "line": 48,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "disabled",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/Component.ts",
            "line": 49,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "LinkButtonComponent",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/Component.ts",
      "line": 53,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "Link Button Component"
    },
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "type",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/Component.ts",
            "line": 54,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "MessageComponentTypes.Button",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "MessageComponentTypes.Button"
            }
          },
          "typeParams": []
        },
        {
          "name": "style",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/Component.ts",
            "line": 55,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "ButtonStyles.Link",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "ButtonStyles.Link"
            }
          },
          "typeParams": []
        },
        {
          "name": "label",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/Component.ts",
            "line": 56,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "url",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/Component.ts",
            "line": 57,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "disabled",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/Component.ts",
            "line": 58,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "SelectMenuComponent",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/Component.ts",
      "line": 62,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "Select Menu Component"
    },
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "type",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/Component.ts",
            "line": 63,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "MessageComponentTypes.SelectMenu",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "MessageComponentTypes.SelectMenu"
            }
          },
          "typeParams": []
        },
        {
          "name": "customId",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/Component.ts",
            "line": 64,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "options",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/Component.ts",
            "line": 65,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "SelectMenuOption",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "SelectMenuOption"
              }
            }
          },
          "typeParams": []
        },
        {
          "name": "placeholder",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/Component.ts",
            "line": 66,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "minValue",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/Component.ts",
            "line": 67,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "maxValue",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/Component.ts",
            "line": 68,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "disabled",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/Component.ts",
            "line": 69,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "TextInputComponent",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/Component.ts",
      "line": 73,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "Text Input Component"
    },
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "type",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/Component.ts",
            "line": 74,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "MessageComponentTypes.InputText",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "MessageComponentTypes.InputText"
            }
          },
          "typeParams": []
        },
        {
          "name": "customId",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/Component.ts",
            "line": 75,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "style",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/Component.ts",
            "line": 76,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "TextStyles",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "TextStyles"
            }
          },
          "typeParams": []
        },
        {
          "name": "label",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/Component.ts",
            "line": 77,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "minLength",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/Component.ts",
            "line": 78,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "maxLength",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/Component.ts",
            "line": 79,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "required",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/Component.ts",
            "line": 80,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        },
        {
          "name": "value",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/Component.ts",
            "line": 81,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "placeholder",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/Component.ts",
            "line": 82,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "SelectMenuOption",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/Component.ts",
      "line": 85,
      "col": 0
    },
    "declarationKind": "export",
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "label",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/Component.ts",
            "line": 86,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "value",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/Component.ts",
            "line": 87,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "description",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/Component.ts",
            "line": 88,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "emoji",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/Component.ts",
            "line": 89,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "Emoji",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Emoji"
            }
          },
          "typeParams": []
        },
        {
          "name": "default",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/Component.ts",
            "line": 90,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "class",
    "name": "default",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/Component.ts",
      "line": 4,
      "col": 0
    },
    "declarationKind": "export",
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "type",
              "optional": false,
              "tsType": {
                "repr": "MessageComponentTypes",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "MessageComponentTypes"
                }
              }
            }
          ],
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/Component.ts",
            "line": 5,
            "col": 4
          }
        }
      ],
      "properties": [
        {
          "tsType": {
            "repr": "MessageComponentTypes",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "MessageComponentTypes"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "type",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/Component.ts",
            "line": 9,
            "col": 4
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "isActionRow",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "this is ActionRowComponent",
              "kind": "typePredicate",
              "typePredicate": {
                "asserts": false,
                "param": {
                  "type": "this"
                },
                "type": {
                  "repr": "ActionRowComponent",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "ActionRowComponent"
                  }
                }
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/Component.ts",
            "line": 11,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "isButton",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "this is ButtonComponent",
              "kind": "typePredicate",
              "typePredicate": {
                "asserts": false,
                "param": {
                  "type": "this"
                },
                "type": {
                  "repr": "ButtonComponent",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "ButtonComponent"
                  }
                }
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/Component.ts",
            "line": 15,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "isSelectMenu",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "this is SelectMenuComponent",
              "kind": "typePredicate",
              "typePredicate": {
                "asserts": false,
                "param": {
                  "type": "this"
                },
                "type": {
                  "repr": "SelectMenuComponent",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "SelectMenuComponent"
                  }
                }
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/Component.ts",
            "line": 19,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "isTextInput",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "this is TextInputComponent",
              "kind": "typePredicate",
              "typePredicate": {
                "asserts": false,
                "param": {
                  "type": "this"
                },
                "type": {
                  "repr": "TextInputComponent",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "TextInputComponent"
                  }
                }
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/Component.ts",
            "line": 23,
            "col": 4
          }
        }
      ],
      "extends": null,
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "import",
    "name": "Emoji",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/Component.ts",
      "line": 1,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/structures/Emoji.ts",
      "imported": "default"
    }
  },
  {
    "kind": "import",
    "name": "ButtonStyles",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/Component.ts",
      "line": 2,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
      "imported": "ButtonStyles"
    }
  },
  {
    "kind": "import",
    "name": "MessageComponentTypes",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/Component.ts",
      "line": 2,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
      "imported": "MessageComponentTypes"
    }
  },
  {
    "kind": "import",
    "name": "TextStyles",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/Component.ts",
      "line": 2,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
      "imported": "TextStyles"
    }
  },
  {
    "kind": "class",
    "name": "WelcomeChannel",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/WelcomeChannel.ts",
      "line": 11,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "Not a channel",
      "tags": [
        {
          "kind": "unsupported",
          "value": "@link https://discord.com/developers/docs/resources/guild#welcome-screen-object-welcome-screen-channel-structure"
        }
      ]
    },
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "session",
              "optional": false,
              "tsType": {
                "repr": "Session",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Session"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "data",
              "optional": false,
              "tsType": {
                "repr": "DiscordWelcomeScreenChannel",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "DiscordWelcomeScreenChannel"
                }
              }
            }
          ],
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/WelcomeChannel.ts",
            "line": 12,
            "col": 4
          }
        }
      ],
      "properties": [
        {
          "tsType": {
            "repr": "Session",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Session"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "session",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/WelcomeChannel.ts",
            "line": 22,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "Snowflake",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Snowflake"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "channelId",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/WelcomeChannel.ts",
            "line": 23,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "description",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/WelcomeChannel.ts",
            "line": 24,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "Emoji",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Emoji"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "emoji",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/WelcomeChannel.ts",
            "line": 25,
            "col": 4
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "jsDoc": {
            "doc": "alias for WelcomeScreenChannel.channelId"
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "id",
          "kind": "getter",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "Snowflake",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "Snowflake"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/WelcomeChannel.ts",
            "line": 28,
            "col": 4
          }
        }
      ],
      "extends": null,
      "implements": [
        {
          "repr": "Model",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "Model"
          }
        }
      ],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "class",
    "name": "default",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/WelcomeChannel.ts",
      "line": 11,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "Not a channel",
      "tags": [
        {
          "kind": "unsupported",
          "value": "@link https://discord.com/developers/docs/resources/guild#welcome-screen-object-welcome-screen-channel-structure"
        }
      ]
    },
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "session",
              "optional": false,
              "tsType": {
                "repr": "Session",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Session"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "data",
              "optional": false,
              "tsType": {
                "repr": "DiscordWelcomeScreenChannel",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "DiscordWelcomeScreenChannel"
                }
              }
            }
          ],
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/WelcomeChannel.ts",
            "line": 12,
            "col": 4
          }
        }
      ],
      "properties": [
        {
          "tsType": {
            "repr": "Session",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Session"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "session",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/WelcomeChannel.ts",
            "line": 22,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "Snowflake",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Snowflake"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "channelId",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/WelcomeChannel.ts",
            "line": 23,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "description",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/WelcomeChannel.ts",
            "line": 24,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "Emoji",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Emoji"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "emoji",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/WelcomeChannel.ts",
            "line": 25,
            "col": 4
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "jsDoc": {
            "doc": "alias for WelcomeScreenChannel.channelId"
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "id",
          "kind": "getter",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "Snowflake",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "Snowflake"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/WelcomeChannel.ts",
            "line": 28,
            "col": 4
          }
        }
      ],
      "extends": null,
      "implements": [
        {
          "repr": "Model",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "Model"
          }
        }
      ],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "import",
    "name": "Model",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/WelcomeChannel.ts",
      "line": 1,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/structures/Base.ts",
      "imported": "Model"
    }
  },
  {
    "kind": "import",
    "name": "Snowflake",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/WelcomeChannel.ts",
      "line": 2,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/Snowflake.ts",
      "imported": "Snowflake"
    }
  },
  {
    "kind": "import",
    "name": "Session",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/WelcomeChannel.ts",
      "line": 3,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/Session.ts",
      "imported": "Session"
    }
  },
  {
    "kind": "import",
    "name": "DiscordWelcomeScreenChannel",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/WelcomeChannel.ts",
      "line": 4,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
      "imported": "DiscordWelcomeScreenChannel"
    }
  },
  {
    "kind": "import",
    "name": "Emoji",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/WelcomeChannel.ts",
      "line": 5,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/structures/Emoji.ts",
      "imported": "default"
    }
  },
  {
    "kind": "class",
    "name": "ApplicationCommandBuilder",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/slash/ApplicationCommand.ts",
      "line": 6,
      "col": 0
    },
    "declarationKind": "export",
    "classDef": {
      "isAbstract": true,
      "constructors": [
        {
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "assign",
              "left": {
                "kind": "identifier",
                "name": "type",
                "optional": false,
                "tsType": {
                  "repr": "ApplicationCommandTypes",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "ApplicationCommandTypes"
                  }
                }
              },
              "right": "[UNSUPPORTED]",
              "tsType": null
            },
            {
              "kind": "assign",
              "left": {
                "kind": "identifier",
                "name": "name",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              "right": "[UNSUPPORTED]",
              "tsType": null
            },
            {
              "kind": "assign",
              "left": {
                "kind": "identifier",
                "name": "description",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              "right": "[UNSUPPORTED]",
              "tsType": null
            },
            {
              "kind": "identifier",
              "name": "defaultMemberPermissions",
              "optional": true,
              "tsType": {
                "repr": "",
                "kind": "array",
                "array": {
                  "repr": "PermissionStrings",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "PermissionStrings"
                  }
                }
              }
            },
            {
              "kind": "identifier",
              "name": "nameLocalizations",
              "optional": true,
              "tsType": {
                "repr": "Localization",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Localization"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "descriptionLocalizations",
              "optional": true,
              "tsType": {
                "repr": "Localization",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Localization"
                }
              }
            },
            {
              "kind": "assign",
              "left": {
                "kind": "identifier",
                "name": "dmPermission",
                "optional": false,
                "tsType": {
                  "repr": "boolean",
                  "kind": "keyword",
                  "keyword": "boolean"
                }
              },
              "right": "[UNSUPPORTED]",
              "tsType": null
            }
          ],
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/slash/ApplicationCommand.ts",
            "line": 7,
            "col": 4
          }
        }
      ],
      "properties": [
        {
          "tsType": {
            "repr": "ApplicationCommandTypes",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "ApplicationCommandTypes"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "type",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/slash/ApplicationCommand.ts",
            "line": 24,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "name",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/slash/ApplicationCommand.ts",
            "line": 25,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "description",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/slash/ApplicationCommand.ts",
            "line": 26,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "PermissionStrings",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "PermissionStrings"
              }
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "defaultMemberPermissions",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/slash/ApplicationCommand.ts",
            "line": 27,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "Localization",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Localization"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "nameLocalizations",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/slash/ApplicationCommand.ts",
            "line": 28,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "Localization",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Localization"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "descriptionLocalizations",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/slash/ApplicationCommand.ts",
            "line": 29,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "dmPermission",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/slash/ApplicationCommand.ts",
            "line": 30,
            "col": 4
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setType",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "type",
                "optional": false,
                "tsType": {
                  "repr": "ApplicationCommandTypes",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "ApplicationCommandTypes"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "this",
              "kind": "this",
              "this": true
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/slash/ApplicationCommand.ts",
            "line": 32,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setName",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "name",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "this",
              "kind": "this",
              "this": true
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/slash/ApplicationCommand.ts",
            "line": 36,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setDescription",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "description",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "this",
              "kind": "this",
              "this": true
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/slash/ApplicationCommand.ts",
            "line": 40,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setDefaultMemberPermission",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "perm",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "array",
                  "array": {
                    "repr": "PermissionStrings",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "PermissionStrings"
                    }
                  }
                }
              }
            ],
            "returnType": {
              "repr": "this",
              "kind": "this",
              "this": true
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/slash/ApplicationCommand.ts",
            "line": 44,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setNameLocalizations",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "l",
                "optional": false,
                "tsType": {
                  "repr": "Localization",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Localization"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "this",
              "kind": "this",
              "this": true
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/slash/ApplicationCommand.ts",
            "line": 48,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setDescriptionLocalizations",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "l",
                "optional": false,
                "tsType": {
                  "repr": "Localization",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Localization"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "this",
              "kind": "this",
              "this": true
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/slash/ApplicationCommand.ts",
            "line": 52,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setDmPermission",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "perm",
                "optional": false,
                "tsType": {
                  "repr": "boolean",
                  "kind": "keyword",
                  "keyword": "boolean"
                }
              }
            ],
            "returnType": {
              "repr": "this",
              "kind": "this",
              "this": true
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/slash/ApplicationCommand.ts",
            "line": 56,
            "col": 4
          }
        }
      ],
      "extends": null,
      "implements": [
        {
          "repr": "CreateApplicationCommand",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "CreateApplicationCommand"
          }
        }
      ],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "class",
    "name": "MessageApplicationCommandBuilder",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/slash/ApplicationCommand.ts",
      "line": 61,
      "col": 0
    },
    "declarationKind": "export",
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "type",
              "optional": true,
              "tsType": {
                "repr": "ApplicationCommandTypes",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "ApplicationCommandTypes"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "name",
              "optional": true,
              "tsType": {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              }
            }
          ],
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/slash/ApplicationCommand.ts",
            "line": 64,
            "col": 4
          }
        }
      ],
      "properties": [
        {
          "tsType": {
            "repr": "ApplicationCommandTypes",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "ApplicationCommandTypes"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "type",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/slash/ApplicationCommand.ts",
            "line": 62,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "name",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/slash/ApplicationCommand.ts",
            "line": 63,
            "col": 4
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setName",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "name",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "this",
              "kind": "this",
              "this": true
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/slash/ApplicationCommand.ts",
            "line": 72,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "toJSON",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "",
              "kind": "typeLiteral",
              "typeLiteral": {
                "methods": [],
                "properties": [
                  {
                    "name": "name",
                    "params": [],
                    "computed": false,
                    "optional": false,
                    "tsType": {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    "typeParams": []
                  },
                  {
                    "name": "type",
                    "params": [],
                    "computed": false,
                    "optional": false,
                    "tsType": {
                      "repr": "ApplicationCommandTypes.Message",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "ApplicationCommandTypes.Message"
                      }
                    },
                    "typeParams": []
                  }
                ],
                "callSignatures": [],
                "indexSignatures": []
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/slash/ApplicationCommand.ts",
            "line": 76,
            "col": 4
          }
        }
      ],
      "extends": null,
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "class",
    "name": "ChatInputApplicationCommandBuilder",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/slash/ApplicationCommand.ts",
      "line": 86,
      "col": 0
    },
    "declarationKind": "export",
    "classDef": {
      "isAbstract": false,
      "constructors": [],
      "properties": [
        {
          "tsType": {
            "repr": "ApplicationCommandTypes.ChatInput",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "ApplicationCommandTypes.ChatInput"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "type",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/slash/ApplicationCommand.ts",
            "line": 87,
            "col": 4
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "toJSON",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "CreateApplicationCommand",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "CreateApplicationCommand"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/slash/ApplicationCommand.ts",
            "line": 89,
            "col": 4
          }
        }
      ],
      "extends": "ApplicationCommandBuilder",
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "ChatInputApplicationCommandBuilder",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/slash/ApplicationCommand.ts",
      "line": 111,
      "col": 0
    },
    "declarationKind": "export",
    "interfaceDef": {
      "extends": [
        {
          "repr": "ApplicationCommandBuilder",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "ApplicationCommandBuilder"
          }
        },
        {
          "repr": "OptionBased",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "OptionBased"
          }
        }
      ],
      "methods": [],
      "properties": [],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "import",
    "name": "Localization",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/slash/ApplicationCommand.ts",
      "line": 1,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
      "imported": "Localization"
    }
  },
  {
    "kind": "import",
    "name": "PermissionStrings",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/slash/ApplicationCommand.ts",
      "line": 1,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
      "imported": "PermissionStrings"
    }
  },
  {
    "kind": "import",
    "name": "ApplicationCommandTypes",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/slash/ApplicationCommand.ts",
      "line": 2,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
      "imported": "ApplicationCommandTypes"
    }
  },
  {
    "kind": "import",
    "name": "OptionBased",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/slash/ApplicationCommand.ts",
      "line": 3,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/slash/ApplicationCommandOption.ts",
      "imported": "OptionBased"
    }
  },
  {
    "kind": "import",
    "name": "CreateApplicationCommand",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/slash/ApplicationCommand.ts",
      "line": 4,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/Session.ts",
      "imported": "CreateApplicationCommand"
    }
  },
  {
    "kind": "class",
    "name": "ActionRow",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/ActionRowComponent.ts",
      "line": 11,
      "col": 0
    },
    "declarationKind": "export",
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "session",
              "optional": false,
              "tsType": {
                "repr": "Session",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Session"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "data",
              "optional": false,
              "tsType": {
                "repr": "DiscordComponent",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "DiscordComponent"
                }
              }
            }
          ],
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/ActionRowComponent.ts",
            "line": 12,
            "col": 4
          }
        }
      ],
      "properties": [
        {
          "tsType": {
            "repr": "Session",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Session"
            }
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "session",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/ActionRowComponent.ts",
            "line": 34,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "MessageComponentTypes.ActionRow",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "MessageComponentTypes.ActionRow"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "type",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/ActionRowComponent.ts",
            "line": 35,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "Array",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": [
                {
                  "repr": "Exclude",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": [
                      {
                        "repr": "Component",
                        "kind": "typeRef",
                        "typeRef": {
                          "typeParams": null,
                          "typeName": "Component"
                        }
                      },
                      {
                        "repr": "ActionRowComponent",
                        "kind": "typeRef",
                        "typeRef": {
                          "typeParams": null,
                          "typeName": "ActionRowComponent"
                        }
                      }
                    ],
                    "typeName": "Exclude"
                  }
                }
              ],
              "typeName": "Array"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "components",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/ActionRowComponent.ts",
            "line": 36,
            "col": 4
          }
        }
      ],
      "indexSignatures": [],
      "methods": [],
      "extends": "BaseComponent",
      "implements": [
        {
          "repr": "ActionRowComponent",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "ActionRowComponent"
          }
        }
      ],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "class",
    "name": "default",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/ActionRowComponent.ts",
      "line": 11,
      "col": 0
    },
    "declarationKind": "export",
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "session",
              "optional": false,
              "tsType": {
                "repr": "Session",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Session"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "data",
              "optional": false,
              "tsType": {
                "repr": "DiscordComponent",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "DiscordComponent"
                }
              }
            }
          ],
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/ActionRowComponent.ts",
            "line": 12,
            "col": 4
          }
        }
      ],
      "properties": [
        {
          "tsType": {
            "repr": "Session",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Session"
            }
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "session",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/ActionRowComponent.ts",
            "line": 34,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "MessageComponentTypes.ActionRow",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "MessageComponentTypes.ActionRow"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "type",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/ActionRowComponent.ts",
            "line": 35,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "Array",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": [
                {
                  "repr": "Exclude",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": [
                      {
                        "repr": "Component",
                        "kind": "typeRef",
                        "typeRef": {
                          "typeParams": null,
                          "typeName": "Component"
                        }
                      },
                      {
                        "repr": "ActionRowComponent",
                        "kind": "typeRef",
                        "typeRef": {
                          "typeParams": null,
                          "typeName": "ActionRowComponent"
                        }
                      }
                    ],
                    "typeName": "Exclude"
                  }
                }
              ],
              "typeName": "Array"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "components",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/ActionRowComponent.ts",
            "line": 36,
            "col": 4
          }
        }
      ],
      "indexSignatures": [],
      "methods": [],
      "extends": "BaseComponent",
      "implements": [
        {
          "repr": "ActionRowComponent",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "ActionRowComponent"
          }
        }
      ],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "import",
    "name": "Session",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/ActionRowComponent.ts",
      "line": 1,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/Session.ts",
      "imported": "Session"
    }
  },
  {
    "kind": "import",
    "name": "DiscordComponent",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/ActionRowComponent.ts",
      "line": 2,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
      "imported": "DiscordComponent"
    }
  },
  {
    "kind": "import",
    "name": "DiscordInputTextComponent",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/ActionRowComponent.ts",
      "line": 2,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
      "imported": "DiscordInputTextComponent"
    }
  },
  {
    "kind": "import",
    "name": "ActionRowComponent",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/ActionRowComponent.ts",
      "line": 3,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/Component.ts",
      "imported": "ActionRowComponent"
    }
  },
  {
    "kind": "import",
    "name": "Component",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/ActionRowComponent.ts",
      "line": 3,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/Component.ts",
      "imported": "Component"
    }
  },
  {
    "kind": "import",
    "name": "ButtonStyles",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/ActionRowComponent.ts",
      "line": 4,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
      "imported": "ButtonStyles"
    }
  },
  {
    "kind": "import",
    "name": "MessageComponentTypes",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/ActionRowComponent.ts",
      "line": 4,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
      "imported": "MessageComponentTypes"
    }
  },
  {
    "kind": "import",
    "name": "BaseComponent",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/ActionRowComponent.ts",
      "line": 5,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/Component.ts",
      "imported": "default"
    }
  },
  {
    "kind": "import",
    "name": "Button",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/ActionRowComponent.ts",
      "line": 6,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/ButtonComponent.ts",
      "imported": "default"
    }
  },
  {
    "kind": "import",
    "name": "LinkButton",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/ActionRowComponent.ts",
      "line": 7,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/LinkButtonComponent.ts",
      "imported": "default"
    }
  },
  {
    "kind": "import",
    "name": "SelectMenu",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/ActionRowComponent.ts",
      "line": 8,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/SelectMenuComponent.ts",
      "imported": "default"
    }
  },
  {
    "kind": "import",
    "name": "InputText",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/ActionRowComponent.ts",
      "line": 9,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/TextInputComponent.ts",
      "imported": "default"
    }
  },
  {
    "kind": "interface",
    "name": "MessageReactionAdd",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/MessageReaction.ts",
      "line": 7,
      "col": 0
    },
    "declarationKind": "export",
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "userId",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/MessageReaction.ts",
            "line": 8,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "channelId",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/MessageReaction.ts",
            "line": 9,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "messageId",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/MessageReaction.ts",
            "line": 10,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "guildId",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/MessageReaction.ts",
            "line": 11,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "member",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/MessageReaction.ts",
            "line": 12,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "Member",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Member"
            }
          },
          "typeParams": []
        },
        {
          "name": "emoji",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/MessageReaction.ts",
            "line": 13,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "Partial",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": [
                {
                  "repr": "Emoji",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Emoji"
                  }
                }
              ],
              "typeName": "Partial"
            }
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "MessageReactionRemove",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/MessageReaction.ts",
      "line": 16,
      "col": 0
    },
    "declarationKind": "export",
    "interfaceDef": {
      "extends": [
        {
          "repr": "Omit",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": [
              {
                "repr": "MessageReactionAdd",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "MessageReactionAdd"
                }
              },
              {
                "repr": "member",
                "kind": "literal",
                "literal": {
                  "kind": "string",
                  "string": "member"
                }
              }
            ],
            "typeName": "Omit"
          }
        }
      ],
      "methods": [],
      "properties": [],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "MessageReactionRemoveAll",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/MessageReaction.ts",
      "line": 18,
      "col": 0
    },
    "declarationKind": "export",
    "interfaceDef": {
      "extends": [
        {
          "repr": "Pick",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": [
              {
                "repr": "MessageReactionAdd",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "MessageReactionAdd"
                }
              },
              {
                "repr": "",
                "kind": "union",
                "union": [
                  {
                    "repr": "channelId",
                    "kind": "literal",
                    "literal": {
                      "kind": "string",
                      "string": "channelId"
                    }
                  },
                  {
                    "repr": "messageId",
                    "kind": "literal",
                    "literal": {
                      "kind": "string",
                      "string": "messageId"
                    }
                  },
                  {
                    "repr": "guildId",
                    "kind": "literal",
                    "literal": {
                      "kind": "string",
                      "string": "guildId"
                    }
                  }
                ]
              }
            ],
            "typeName": "Pick"
          }
        }
      ],
      "methods": [],
      "properties": [],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "typeAlias",
    "name": "MessageReactionRemoveEmoji",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/MessageReaction.ts",
      "line": 20,
      "col": 0
    },
    "declarationKind": "export",
    "typeAliasDef": {
      "tsType": {
        "repr": "Pick",
        "kind": "typeRef",
        "typeRef": {
          "typeParams": [
            {
              "repr": "MessageReactionAdd",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "MessageReactionAdd"
              }
            },
            {
              "repr": "",
              "kind": "union",
              "union": [
                {
                  "repr": "channelId",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "channelId"
                  }
                },
                {
                  "repr": "guildId",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "guildId"
                  }
                },
                {
                  "repr": "messageId",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "messageId"
                  }
                },
                {
                  "repr": "emoji",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "emoji"
                  }
                }
              ]
            }
          ],
          "typeName": "Pick"
        }
      },
      "typeParams": []
    }
  },
  {
    "kind": "function",
    "name": "NewMessageReactionAdd",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/MessageReaction.ts",
      "line": 25,
      "col": 0
    },
    "declarationKind": "export",
    "functionDef": {
      "params": [
        {
          "kind": "identifier",
          "name": "session",
          "optional": false,
          "tsType": {
            "repr": "Session",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Session"
            }
          }
        },
        {
          "kind": "identifier",
          "name": "data",
          "optional": false,
          "tsType": {
            "repr": "DiscordMessageReactionAdd",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "DiscordMessageReactionAdd"
            }
          }
        }
      ],
      "returnType": {
        "repr": "MessageReactionAdd",
        "kind": "typeRef",
        "typeRef": {
          "typeParams": null,
          "typeName": "MessageReactionAdd"
        }
      },
      "isAsync": false,
      "isGenerator": false,
      "typeParams": []
    }
  },
  {
    "kind": "class",
    "name": "MessageReaction",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/MessageReaction.ts",
      "line": 42,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "Represents a reaction",
      "tags": [
        {
          "kind": "unsupported",
          "value": "@link https://discord.com/developers/docs/resources/channel#reaction-object"
        }
      ]
    },
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "session",
              "optional": false,
              "tsType": {
                "repr": "Session",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Session"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "data",
              "optional": false,
              "tsType": {
                "repr": "DiscordReaction",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "DiscordReaction"
                }
              }
            }
          ],
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/MessageReaction.ts",
            "line": 43,
            "col": 4
          }
        }
      ],
      "properties": [
        {
          "tsType": {
            "repr": "Session",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Session"
            }
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "session",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/MessageReaction.ts",
            "line": 50,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "me",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/MessageReaction.ts",
            "line": 51,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "count",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/MessageReaction.ts",
            "line": 52,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "Emoji",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Emoji"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "emoji",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/MessageReaction.ts",
            "line": 53,
            "col": 4
          }
        }
      ],
      "indexSignatures": [],
      "methods": [],
      "extends": null,
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "class",
    "name": "default",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/MessageReaction.ts",
      "line": 42,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "Represents a reaction",
      "tags": [
        {
          "kind": "unsupported",
          "value": "@link https://discord.com/developers/docs/resources/channel#reaction-object"
        }
      ]
    },
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "session",
              "optional": false,
              "tsType": {
                "repr": "Session",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Session"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "data",
              "optional": false,
              "tsType": {
                "repr": "DiscordReaction",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "DiscordReaction"
                }
              }
            }
          ],
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/MessageReaction.ts",
            "line": 43,
            "col": 4
          }
        }
      ],
      "properties": [
        {
          "tsType": {
            "repr": "Session",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Session"
            }
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "session",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/MessageReaction.ts",
            "line": 50,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "me",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/MessageReaction.ts",
            "line": 51,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "count",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/MessageReaction.ts",
            "line": 52,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "Emoji",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Emoji"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "emoji",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/MessageReaction.ts",
            "line": 53,
            "col": 4
          }
        }
      ],
      "indexSignatures": [],
      "methods": [],
      "extends": null,
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "import",
    "name": "Session",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/MessageReaction.ts",
      "line": 2,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/Session.ts",
      "imported": "Session"
    }
  },
  {
    "kind": "import",
    "name": "DiscordMemberWithUser",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/MessageReaction.ts",
      "line": 3,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
      "imported": "DiscordMemberWithUser"
    }
  },
  {
    "kind": "import",
    "name": "DiscordMessageReactionAdd",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/MessageReaction.ts",
      "line": 3,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
      "imported": "DiscordMessageReactionAdd"
    }
  },
  {
    "kind": "import",
    "name": "DiscordReaction",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/MessageReaction.ts",
      "line": 3,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
      "imported": "DiscordReaction"
    }
  },
  {
    "kind": "import",
    "name": "Emoji",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/MessageReaction.ts",
      "line": 4,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/structures/Emoji.ts",
      "imported": "default"
    }
  },
  {
    "kind": "import",
    "name": "Member",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/MessageReaction.ts",
      "line": 5,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/structures/Member.ts",
      "imported": "default"
    }
  },
  {
    "kind": "class",
    "name": "Attachment",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Attachment.ts",
      "line": 10,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "Represents an attachment",
      "tags": [
        {
          "kind": "unsupported",
          "value": "@link https://discord.com/developers/docs/resources/channel#attachment-object"
        }
      ]
    },
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "session",
              "optional": false,
              "tsType": {
                "repr": "Session",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Session"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "data",
              "optional": false,
              "tsType": {
                "repr": "DiscordAttachment",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "DiscordAttachment"
                }
              }
            }
          ],
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Attachment.ts",
            "line": 11,
            "col": 4
          }
        }
      ],
      "properties": [
        {
          "tsType": {
            "repr": "Session",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Session"
            }
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "session",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Attachment.ts",
            "line": 25,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "Snowflake",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Snowflake"
            }
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Attachment.ts",
            "line": 26,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "contentType",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Attachment.ts",
            "line": 28,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "attachment",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Attachment.ts",
            "line": 29,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "proxyUrl",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Attachment.ts",
            "line": 30,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "name",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Attachment.ts",
            "line": 31,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "size",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Attachment.ts",
            "line": 32,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "height",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Attachment.ts",
            "line": 33,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "width",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Attachment.ts",
            "line": 34,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "ephemeral",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Attachment.ts",
            "line": 35,
            "col": 4
          }
        }
      ],
      "indexSignatures": [],
      "methods": [],
      "extends": null,
      "implements": [
        {
          "repr": "Model",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "Model"
          }
        }
      ],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "class",
    "name": "default",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Attachment.ts",
      "line": 10,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "Represents an attachment",
      "tags": [
        {
          "kind": "unsupported",
          "value": "@link https://discord.com/developers/docs/resources/channel#attachment-object"
        }
      ]
    },
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "session",
              "optional": false,
              "tsType": {
                "repr": "Session",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Session"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "data",
              "optional": false,
              "tsType": {
                "repr": "DiscordAttachment",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "DiscordAttachment"
                }
              }
            }
          ],
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Attachment.ts",
            "line": 11,
            "col": 4
          }
        }
      ],
      "properties": [
        {
          "tsType": {
            "repr": "Session",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Session"
            }
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "session",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Attachment.ts",
            "line": 25,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "Snowflake",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Snowflake"
            }
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Attachment.ts",
            "line": 26,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "contentType",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Attachment.ts",
            "line": 28,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "attachment",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Attachment.ts",
            "line": 29,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "proxyUrl",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Attachment.ts",
            "line": 30,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "name",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Attachment.ts",
            "line": 31,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "size",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Attachment.ts",
            "line": 32,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "height",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Attachment.ts",
            "line": 33,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "width",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Attachment.ts",
            "line": 34,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "ephemeral",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Attachment.ts",
            "line": 35,
            "col": 4
          }
        }
      ],
      "indexSignatures": [],
      "methods": [],
      "extends": null,
      "implements": [
        {
          "repr": "Model",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "Model"
          }
        }
      ],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "import",
    "name": "Model",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Attachment.ts",
      "line": 1,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/structures/Base.ts",
      "imported": "Model"
    }
  },
  {
    "kind": "import",
    "name": "Snowflake",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Attachment.ts",
      "line": 2,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/Snowflake.ts",
      "imported": "Snowflake"
    }
  },
  {
    "kind": "import",
    "name": "Session",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Attachment.ts",
      "line": 3,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/Session.ts",
      "imported": "Session"
    }
  },
  {
    "kind": "import",
    "name": "DiscordAttachment",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Attachment.ts",
      "line": 4,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
      "imported": "DiscordAttachment"
    }
  },
  {
    "kind": "class",
    "name": "LinkButton",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/LinkButtonComponent.ts",
      "line": 8,
      "col": 0
    },
    "declarationKind": "export",
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "session",
              "optional": false,
              "tsType": {
                "repr": "Session",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Session"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "data",
              "optional": false,
              "tsType": {
                "repr": "DiscordComponent",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "DiscordComponent"
                }
              }
            }
          ],
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/LinkButtonComponent.ts",
            "line": 9,
            "col": 4
          }
        }
      ],
      "properties": [
        {
          "tsType": {
            "repr": "Session",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Session"
            }
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "session",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/LinkButtonComponent.ts",
            "line": 24,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "MessageComponentTypes.Button",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "MessageComponentTypes.Button"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "type",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/LinkButtonComponent.ts",
            "line": 25,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "url",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/LinkButtonComponent.ts",
            "line": 26,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "label",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/LinkButtonComponent.ts",
            "line": 27,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "ButtonStyles.Link",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "ButtonStyles.Link"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "style",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/LinkButtonComponent.ts",
            "line": 28,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "disabled",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/LinkButtonComponent.ts",
            "line": 29,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "Emoji",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Emoji"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "emoji",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/LinkButtonComponent.ts",
            "line": 30,
            "col": 4
          }
        }
      ],
      "indexSignatures": [],
      "methods": [],
      "extends": "BaseComponent",
      "implements": [
        {
          "repr": "LinkButtonComponent",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "LinkButtonComponent"
          }
        }
      ],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "class",
    "name": "default",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/LinkButtonComponent.ts",
      "line": 8,
      "col": 0
    },
    "declarationKind": "export",
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "session",
              "optional": false,
              "tsType": {
                "repr": "Session",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Session"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "data",
              "optional": false,
              "tsType": {
                "repr": "DiscordComponent",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "DiscordComponent"
                }
              }
            }
          ],
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/LinkButtonComponent.ts",
            "line": 9,
            "col": 4
          }
        }
      ],
      "properties": [
        {
          "tsType": {
            "repr": "Session",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Session"
            }
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "session",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/LinkButtonComponent.ts",
            "line": 24,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "MessageComponentTypes.Button",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "MessageComponentTypes.Button"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "type",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/LinkButtonComponent.ts",
            "line": 25,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "url",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/LinkButtonComponent.ts",
            "line": 26,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "label",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/LinkButtonComponent.ts",
            "line": 27,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "ButtonStyles.Link",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "ButtonStyles.Link"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "style",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/LinkButtonComponent.ts",
            "line": 28,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "disabled",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/LinkButtonComponent.ts",
            "line": 29,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "Emoji",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Emoji"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "emoji",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/LinkButtonComponent.ts",
            "line": 30,
            "col": 4
          }
        }
      ],
      "indexSignatures": [],
      "methods": [],
      "extends": "BaseComponent",
      "implements": [
        {
          "repr": "LinkButtonComponent",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "LinkButtonComponent"
          }
        }
      ],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "import",
    "name": "Session",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/LinkButtonComponent.ts",
      "line": 1,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/Session.ts",
      "imported": "Session"
    }
  },
  {
    "kind": "import",
    "name": "ButtonStyles",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/LinkButtonComponent.ts",
      "line": 2,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
      "imported": "ButtonStyles"
    }
  },
  {
    "kind": "import",
    "name": "DiscordComponent",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/LinkButtonComponent.ts",
      "line": 2,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
      "imported": "DiscordComponent"
    }
  },
  {
    "kind": "import",
    "name": "LinkButtonComponent",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/LinkButtonComponent.ts",
      "line": 3,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/Component.ts",
      "imported": "LinkButtonComponent"
    }
  },
  {
    "kind": "import",
    "name": "MessageComponentTypes",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/LinkButtonComponent.ts",
      "line": 4,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
      "imported": "MessageComponentTypes"
    }
  },
  {
    "kind": "import",
    "name": "BaseComponent",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/LinkButtonComponent.ts",
      "line": 5,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/Component.ts",
      "imported": "default"
    }
  },
  {
    "kind": "import",
    "name": "Emoji",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/LinkButtonComponent.ts",
      "line": 6,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/structures/Emoji.ts",
      "imported": "default"
    }
  },
  {
    "kind": "class",
    "name": "AutoModerationExecution",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/AutoModerationExecution.ts",
      "line": 6,
      "col": 0
    },
    "declarationKind": "export",
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "session",
              "optional": false,
              "tsType": {
                "repr": "Session",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Session"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "data",
              "optional": false,
              "tsType": {
                "repr": "DiscordAutoModerationActionExecution",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "DiscordAutoModerationActionExecution"
                }
              }
            }
          ],
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/AutoModerationExecution.ts",
            "line": 7,
            "col": 4
          }
        }
      ],
      "properties": [
        {
          "tsType": {
            "repr": "Session",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Session"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "session",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/AutoModerationExecution.ts",
            "line": 39,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "Snowflake",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Snowflake"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "guildId",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/AutoModerationExecution.ts",
            "line": 40,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "AutoModerationAction",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "AutoModerationAction"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "action",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/AutoModerationExecution.ts",
            "line": 41,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "Snowflake",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Snowflake"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "ruleId",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/AutoModerationExecution.ts",
            "line": 42,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "AutoModerationTriggerTypes",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "AutoModerationTriggerTypes"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "ruleTriggerType",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/AutoModerationExecution.ts",
            "line": 43,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "Snowflake",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Snowflake"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "userId",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/AutoModerationExecution.ts",
            "line": 44,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "Snowflake",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Snowflake"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "channelId",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/AutoModerationExecution.ts",
            "line": 45,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "Snowflake",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Snowflake"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "messageId",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/AutoModerationExecution.ts",
            "line": 46,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "Snowflake",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Snowflake"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "alertSystemMessageId",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/AutoModerationExecution.ts",
            "line": 47,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "content",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/AutoModerationExecution.ts",
            "line": 48,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "matchedKeyword",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/AutoModerationExecution.ts",
            "line": 49,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "matched_content",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/AutoModerationExecution.ts",
            "line": 50,
            "col": 4
          }
        }
      ],
      "indexSignatures": [],
      "methods": [],
      "extends": null,
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "import",
    "name": "AutoModerationTriggerTypes",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/AutoModerationExecution.ts",
      "line": 1,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
      "imported": "AutoModerationTriggerTypes"
    }
  },
  {
    "kind": "import",
    "name": "DiscordAutoModerationActionExecution",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/AutoModerationExecution.ts",
      "line": 1,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
      "imported": "DiscordAutoModerationActionExecution"
    }
  },
  {
    "kind": "import",
    "name": "Session",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/AutoModerationExecution.ts",
      "line": 2,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/Session.ts",
      "imported": "Session"
    }
  },
  {
    "kind": "import",
    "name": "Snowflake",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/AutoModerationExecution.ts",
      "line": 3,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/Snowflake.ts",
      "imported": "Snowflake"
    }
  },
  {
    "kind": "import",
    "name": "AutoModerationAction",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/AutoModerationExecution.ts",
      "line": 4,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/structures/AutoModerationRule.ts",
      "imported": "AutoModerationAction"
    }
  },
  {
    "kind": "class",
    "name": "Emoji",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Emoji.ts",
      "line": 5,
      "col": 0
    },
    "declarationKind": "export",
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "session",
              "optional": false,
              "tsType": {
                "repr": "Session",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Session"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "data",
              "optional": false,
              "tsType": {
                "repr": "DiscordEmoji",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "DiscordEmoji"
                }
              }
            }
          ],
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Emoji.ts",
            "line": 6,
            "col": 4
          }
        }
      ],
      "properties": [
        {
          "tsType": {
            "repr": "Snowflake",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Snowflake"
            }
          },
          "readonly": true,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Emoji.ts",
            "line": 14,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "Session",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Session"
            }
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "session",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Emoji.ts",
            "line": 15,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "name",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Emoji.ts",
            "line": 17,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "animated",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Emoji.ts",
            "line": 18,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "available",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Emoji.ts",
            "line": 19,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "requireColons",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Emoji.ts",
            "line": 20,
            "col": 4
          }
        }
      ],
      "indexSignatures": [],
      "methods": [],
      "extends": null,
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "class",
    "name": "default",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Emoji.ts",
      "line": 5,
      "col": 0
    },
    "declarationKind": "export",
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "session",
              "optional": false,
              "tsType": {
                "repr": "Session",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Session"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "data",
              "optional": false,
              "tsType": {
                "repr": "DiscordEmoji",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "DiscordEmoji"
                }
              }
            }
          ],
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Emoji.ts",
            "line": 6,
            "col": 4
          }
        }
      ],
      "properties": [
        {
          "tsType": {
            "repr": "Snowflake",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Snowflake"
            }
          },
          "readonly": true,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Emoji.ts",
            "line": 14,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "Session",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Session"
            }
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "session",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Emoji.ts",
            "line": 15,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "name",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Emoji.ts",
            "line": 17,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "animated",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Emoji.ts",
            "line": 18,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "available",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Emoji.ts",
            "line": 19,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "requireColons",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Emoji.ts",
            "line": 20,
            "col": 4
          }
        }
      ],
      "indexSignatures": [],
      "methods": [],
      "extends": null,
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "import",
    "name": "Session",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Emoji.ts",
      "line": 1,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/Session.ts",
      "imported": "Session"
    }
  },
  {
    "kind": "import",
    "name": "Snowflake",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Emoji.ts",
      "line": 2,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/Snowflake.ts",
      "imported": "Snowflake"
    }
  },
  {
    "kind": "import",
    "name": "DiscordEmoji",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Emoji.ts",
      "line": 3,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
      "imported": "DiscordEmoji"
    }
  },
  {
    "kind": "interface",
    "name": "AllowedMentions",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Message.ts",
      "line": 34,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "tags": [
        {
          "kind": "unsupported",
          "value": "@link https://discord.com/developers/docs/resources/channel#allowed-mentions-object"
        }
      ]
    },
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "parse",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Message.ts",
            "line": 35,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "AllowedMentionsTypes",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "AllowedMentionsTypes"
              }
            }
          },
          "typeParams": []
        },
        {
          "name": "repliedUser",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Message.ts",
            "line": 36,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        },
        {
          "name": "roles",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Message.ts",
            "line": 37,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "Snowflake",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "Snowflake"
              }
            }
          },
          "typeParams": []
        },
        {
          "name": "users",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Message.ts",
            "line": 38,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "Snowflake",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "Snowflake"
              }
            }
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "CreateMessageReference",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Message.ts",
      "line": 45,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "tags": [
        {
          "kind": "unsupported",
          "value": "@link https://github.com/denoland/deno_doc/blob/main/lib/types.d.ts\nchannelId is optional when creating a reply, but will always be present when receiving an event/response that includes this data model."
        }
      ]
    },
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "messageId",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Message.ts",
            "line": 46,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "Snowflake",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Snowflake"
            }
          },
          "typeParams": []
        },
        {
          "name": "channelId",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Message.ts",
            "line": 47,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "Snowflake",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Snowflake"
            }
          },
          "typeParams": []
        },
        {
          "name": "guildId",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Message.ts",
            "line": 48,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "Snowflake",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Snowflake"
            }
          },
          "typeParams": []
        },
        {
          "name": "failIfNotExists",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Message.ts",
            "line": 49,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "CreateMessage",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Message.ts",
      "line": 56,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "tags": [
        {
          "kind": "unsupported",
          "value": "@link https://discord.com/developers/docs/resources/channel#create-message-json-params\nPosts a message to a guild text or DM channel. Returns a message object. Fires a Message Create Gateway event."
        }
      ]
    },
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "embeds",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Message.ts",
            "line": 57,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "DiscordEmbed",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "DiscordEmbed"
              }
            }
          },
          "typeParams": []
        },
        {
          "name": "content",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Message.ts",
            "line": 58,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "allowedMentions",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Message.ts",
            "line": 59,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "AllowedMentions",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "AllowedMentions"
            }
          },
          "typeParams": []
        },
        {
          "name": "files",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Message.ts",
            "line": 60,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "FileContent",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "FileContent"
              }
            }
          },
          "typeParams": []
        },
        {
          "name": "messageReference",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Message.ts",
            "line": 61,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "CreateMessageReference",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "CreateMessageReference"
            }
          },
          "typeParams": []
        },
        {
          "name": "tts",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Message.ts",
            "line": 62,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        },
        {
          "name": "components",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Message.ts",
            "line": 63,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "DiscordMessageComponents",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "DiscordMessageComponents"
            }
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "EditMessage",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Message.ts",
      "line": 71,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "tags": [
        {
          "kind": "unsupported",
          "value": "@link https://discord.com/developers/docs/resources/channel#edit-message-json-params\nEdit a previously sent message.\nReturns a {@link Message} object. Fires a Message Update Gateway event."
        }
      ]
    },
    "interfaceDef": {
      "extends": [
        {
          "repr": "Partial",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": [
              {
                "repr": "CreateMessage",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "CreateMessage"
                }
              }
            ],
            "typeName": "Partial"
          }
        }
      ],
      "methods": [],
      "properties": [
        {
          "name": "flags",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Message.ts",
            "line": 72,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "MessageFlags",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "MessageFlags"
            }
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "typeAlias",
    "name": "EmojiResolvable",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Message.ts",
      "line": 78,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "Represents a guild or unicode {@link Emoji}"
    },
    "typeAliasDef": {
      "tsType": {
        "repr": "",
        "kind": "union",
        "union": [
          {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          {
            "repr": "",
            "kind": "typeLiteral",
            "typeLiteral": {
              "methods": [],
              "properties": [
                {
                  "name": "name",
                  "params": [],
                  "computed": false,
                  "optional": false,
                  "tsType": {
                    "repr": "string",
                    "kind": "keyword",
                    "keyword": "string"
                  },
                  "typeParams": []
                },
                {
                  "name": "id",
                  "params": [],
                  "computed": false,
                  "optional": false,
                  "tsType": {
                    "repr": "Snowflake",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Snowflake"
                    }
                  },
                  "typeParams": []
                }
              ],
              "callSignatures": [],
              "indexSignatures": []
            }
          }
        ]
      },
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "WebhookAuthor",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Message.ts",
      "line": 86,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "A partial {@link User} to represent the author of a message sent by a webhook"
    },
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Message.ts",
            "line": 87,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "username",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Message.ts",
            "line": 88,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "discriminator",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Message.ts",
            "line": 89,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "avatar",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Message.ts",
            "line": 90,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "bigint",
            "kind": "keyword",
            "keyword": "bigint"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "class",
    "name": "Message",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Message.ts",
      "line": 97,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "tags": [
        {
          "kind": "unsupported",
          "value": "@link https://discord.com/developers/docs/resources/channel#message-object\nRepresents a message"
        }
      ]
    },
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "session",
              "optional": false,
              "tsType": {
                "repr": "Session",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Session"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "data",
              "optional": false,
              "tsType": {
                "repr": "DiscordMessage",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "DiscordMessage"
                }
              }
            }
          ],
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Message.ts",
            "line": 98,
            "col": 4
          }
        }
      ],
      "properties": [
        {
          "jsDoc": {
            "doc": "Reference to the client that instantiated this Message"
          },
          "tsType": {
            "repr": "Session",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Session"
            }
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "session",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Message.ts",
            "line": 203,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "id of the message"
          },
          "tsType": {
            "repr": "Snowflake",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Snowflake"
            }
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Message.ts",
            "line": 206,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "type of message"
          },
          "tsType": {
            "repr": "MessageTypes",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "MessageTypes"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "type",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Message.ts",
            "line": 209,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "id of the channel the message was sent in"
          },
          "tsType": {
            "repr": "Snowflake",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Snowflake"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "channelId",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Message.ts",
            "line": 212,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "id of the guild the message was sent in, this should exist on MESSAGE_CREATE and MESSAGE_UPDATE events"
          },
          "tsType": {
            "repr": "Snowflake",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Snowflake"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "guildId",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Message.ts",
            "line": 215,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "if the message is an Interaction or application-owned webhook, this is the id of the application"
          },
          "tsType": {
            "repr": "Snowflake",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Snowflake"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "applicationId",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Message.ts",
            "line": 218,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "mentions if any"
          },
          "tsType": {
            "repr": "",
            "kind": "typeLiteral",
            "typeLiteral": {
              "methods": [],
              "properties": [
                {
                  "name": "users",
                  "params": [],
                  "computed": false,
                  "optional": false,
                  "tsType": {
                    "repr": "",
                    "kind": "array",
                    "array": {
                      "repr": "User",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "User"
                      }
                    }
                  },
                  "typeParams": []
                },
                {
                  "name": "roleIds",
                  "params": [],
                  "computed": false,
                  "optional": false,
                  "tsType": {
                    "repr": "",
                    "kind": "array",
                    "array": {
                      "repr": "Snowflake",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "Snowflake"
                      }
                    }
                  },
                  "typeParams": []
                },
                {
                  "name": "channels",
                  "params": [],
                  "computed": false,
                  "optional": false,
                  "tsType": {
                    "repr": "",
                    "kind": "array",
                    "array": {
                      "repr": "Channel",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "Channel"
                      }
                    }
                  },
                  "typeParams": []
                }
              ],
              "callSignatures": [],
              "indexSignatures": []
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "mentions",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Message.ts",
            "line": 221,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "sent if the message is a response to an Interaction"
          },
          "tsType": {
            "repr": "MessageInteraction",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "MessageInteraction"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "interaction",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Message.ts",
            "line": 233,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "the author of this message, this field is **not** sent on webhook messages"
          },
          "tsType": {
            "repr": "User",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "User"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "author",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Message.ts",
            "line": 236,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "message flags combined as a bitfield"
          },
          "tsType": {
            "repr": "MessageFlags",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "MessageFlags"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "flags",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Message.ts",
            "line": 239,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "whether this message is pinned"
          },
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "pinned",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Message.ts",
            "line": 242,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "whether this was a TTS message"
          },
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "tts",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Message.ts",
            "line": 245,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "contents of the message"
          },
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "content",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Message.ts",
            "line": 248,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "used for validating a message was sent"
          },
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              },
              {
                "repr": "number",
                "kind": "keyword",
                "keyword": "number"
              }
            ]
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "nonce",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Message.ts",
            "line": 251,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "whether this message mentions everyone"
          },
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "mentionEveryone",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Message.ts",
            "line": 254,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "when this message was sent"
          },
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "timestamp",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Message.ts",
            "line": 257,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "when this message was edited"
          },
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "editedTimestamp",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Message.ts",
            "line": 260,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "sent if the message contains stickers\n**this contains sticker items not stickers**"
          },
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "StickerItem",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "StickerItem"
              }
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "stickers",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Message.ts",
            "line": 266,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "reactions to the message"
          },
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "MessageReaction",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "MessageReaction"
              }
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "reactions",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Message.ts",
            "line": 269,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "any attached files"
          },
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "Attachment",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "Attachment"
              }
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "attachments",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Message.ts",
            "line": 272,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "any embedded content"
          },
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "DiscordEmbed",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "DiscordEmbed"
              }
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "embeds",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Message.ts",
            "line": 275,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "member properties for this message's author"
          },
          "tsType": {
            "repr": "Member",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Member"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "member",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Message.ts",
            "line": 278,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "the thread that was started from this message, includes {@link ThreadMember}"
          },
          "tsType": {
            "repr": "ThreadChannel",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "ThreadChannel"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "thread",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Message.ts",
            "line": 281,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "sent if the message contains components like buttons, action rows, or other interactive components"
          },
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "Component",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "Component"
              }
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "components",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Message.ts",
            "line": 284,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "if the message is generated by a webhook, this is the webhook's author data"
          },
          "tsType": {
            "repr": "WebhookAuthor",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "WebhookAuthor"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "webhook",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Message.ts",
            "line": 287,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "sent with Rich Presence-related chat embeds"
          },
          "tsType": {
            "repr": "Partial",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": [
                {
                  "repr": "Application",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Application"
                  }
                }
              ],
              "typeName": "Partial"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "application",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Message.ts",
            "line": 290,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "sent with Rich Presence-related chat embeds"
          },
          "tsType": {
            "repr": "",
            "kind": "typeLiteral",
            "typeLiteral": {
              "methods": [],
              "properties": [
                {
                  "name": "partyId",
                  "params": [],
                  "computed": false,
                  "optional": true,
                  "tsType": {
                    "repr": "Snowflake",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Snowflake"
                    }
                  },
                  "typeParams": []
                },
                {
                  "name": "type",
                  "params": [],
                  "computed": false,
                  "optional": false,
                  "tsType": {
                    "repr": "MessageActivityTypes",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "MessageActivityTypes"
                    }
                  },
                  "typeParams": []
                }
              ],
              "callSignatures": [],
              "indexSignatures": []
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "activity",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Message.ts",
            "line": 293,
            "col": 4
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "jsDoc": {
            "doc": "gets the timestamp of this message, this does not requires the timestamp field"
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "createdTimestamp",
          "kind": "getter",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "number",
              "kind": "keyword",
              "keyword": "number"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Message.ts",
            "line": 299,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "gets the timestamp of this message as a Date"
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "createdAt",
          "kind": "getter",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "Date",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "Date"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Message.ts",
            "line": 304,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "gets the timestamp of this message (sent by the API)"
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "sentAt",
          "kind": "getter",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "Date",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "Date"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Message.ts",
            "line": 309,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "gets the edited timestamp as a Date"
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "editedAt",
          "kind": "getter",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "",
              "kind": "union",
              "union": [
                {
                  "repr": "Date",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Date"
                  }
                },
                {
                  "repr": "undefined",
                  "kind": "keyword",
                  "keyword": "undefined"
                }
              ]
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Message.ts",
            "line": 314,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "whether this message was edited"
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "edited",
          "kind": "getter",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "",
              "kind": "union",
              "union": [
                {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                },
                {
                  "repr": "undefined",
                  "kind": "keyword",
                  "keyword": "undefined"
                }
              ]
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Message.ts",
            "line": 319,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "gets the url of the message that points to the message"
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "url",
          "kind": "getter",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Message.ts",
            "line": 324,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "Compatibility with Discordeno\nsame as Message.author.bot"
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "isBot",
          "kind": "getter",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "boolean",
              "kind": "keyword",
              "keyword": "boolean"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Message.ts",
            "line": 332,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "Pins this message"
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "pin",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "void",
                    "kind": "keyword",
                    "keyword": "void"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Message.ts",
            "line": 339,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "Unpins this message"
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "unpin",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "void",
                    "kind": "keyword",
                    "keyword": "void"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Message.ts",
            "line": 350,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "Edits the current message"
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "edit",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "options",
                "optional": false,
                "tsType": {
                  "repr": "EditMessage",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "EditMessage"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "Message",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Message"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Message.ts",
            "line": 359,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "edits the current message flags to supress its embeds"
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "suppressEmbeds",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "suppress",
                "optional": false,
                "tsType": {
                  "repr": "true",
                  "kind": "literal",
                  "literal": {
                    "kind": "boolean",
                    "boolean": true
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "Message",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Message"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Message.ts",
            "line": 381,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "suppressEmbeds",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "suppress",
                "optional": false,
                "tsType": {
                  "repr": "false",
                  "kind": "literal",
                  "literal": {
                    "kind": "boolean",
                    "boolean": false
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "",
                    "kind": "union",
                    "union": [
                      {
                        "repr": "Message",
                        "kind": "typeRef",
                        "typeRef": {
                          "typeParams": null,
                          "typeName": "Message"
                        }
                      },
                      {
                        "repr": "undefined",
                        "kind": "keyword",
                        "keyword": "undefined"
                      }
                    ]
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Message.ts",
            "line": 382,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "suppressEmbeds",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "assign",
                "left": {
                  "kind": "identifier",
                  "name": "suppress",
                  "optional": false,
                  "tsType": null
                },
                "right": "[UNSUPPORTED]",
                "tsType": null
              }
            ],
            "returnType": null,
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Message.ts",
            "line": 383,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "deletes this message"
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "delete",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "object",
                "props": [
                  {
                    "kind": "assign",
                    "key": "reason",
                    "value": null
                  }
                ],
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "typeLiteral",
                  "typeLiteral": {
                    "methods": [],
                    "properties": [
                      {
                        "name": "reason",
                        "params": [],
                        "computed": false,
                        "optional": false,
                        "tsType": {
                          "repr": "string",
                          "kind": "keyword",
                          "keyword": "string"
                        },
                        "typeParams": []
                      }
                    ],
                    "callSignatures": [],
                    "indexSignatures": []
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "Message",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Message"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Message.ts",
            "line": 394,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "Replies directly in the channel where the message was sent"
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "reply",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "options",
                "optional": false,
                "tsType": {
                  "repr": "CreateMessage",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "CreateMessage"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "Message",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Message"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Message.ts",
            "line": 406,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "alias for Message.addReaction"
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "react",
          "kind": "getter",
          "functionDef": {
            "params": [],
            "returnType": null,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Message.ts",
            "line": 438,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "adds a Reaction"
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "addReaction",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "reaction",
                "optional": false,
                "tsType": {
                  "repr": "EmojiResolvable",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "EmojiResolvable"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "void",
                    "kind": "keyword",
                    "keyword": "void"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Message.ts",
            "line": 443,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "removes a reaction from someone"
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "removeReaction",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "reaction",
                "optional": false,
                "tsType": {
                  "repr": "EmojiResolvable",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "EmojiResolvable"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "options",
                "optional": true,
                "tsType": {
                  "repr": "",
                  "kind": "typeLiteral",
                  "typeLiteral": {
                    "methods": [],
                    "properties": [
                      {
                        "name": "userId",
                        "params": [],
                        "computed": false,
                        "optional": false,
                        "tsType": {
                          "repr": "Snowflake",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "Snowflake"
                          }
                        },
                        "typeParams": []
                      }
                    ],
                    "callSignatures": [],
                    "indexSignatures": []
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "void",
                    "kind": "keyword",
                    "keyword": "void"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Message.ts",
            "line": 455,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "Get users who reacted with this emoji\nnot recommended since the cache handles reactions already"
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "fetchReactions",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "reaction",
                "optional": false,
                "tsType": {
                  "repr": "EmojiResolvable",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "EmojiResolvable"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "options",
                "optional": true,
                "tsType": {
                  "repr": "GetReactions",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "GetReactions"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "",
                    "kind": "array",
                    "array": {
                      "repr": "User",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "User"
                      }
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Message.ts",
            "line": 476,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "same as Message.removeReaction but removes using a unicode emoji"
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "removeReactionEmoji",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "reaction",
                "optional": false,
                "tsType": {
                  "repr": "EmojiResolvable",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "EmojiResolvable"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "void",
                    "kind": "keyword",
                    "keyword": "void"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Message.ts",
            "line": 491,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "nukes every reaction on the message"
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "nukeReactions",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "void",
                    "kind": "keyword",
                    "keyword": "void"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Message.ts",
            "line": 502,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "publishes/crossposts a message to all followers"
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "crosspost",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "Message",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Message"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Message.ts",
            "line": 511,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "fetches this message, meant to be used with Function.call since its redundant"
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "fetch",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "",
                    "kind": "parenthesized",
                    "parenthesized": {
                      "repr": "",
                      "kind": "union",
                      "union": [
                        {
                          "repr": "Message",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "Message"
                          }
                        },
                        {
                          "repr": "undefined",
                          "kind": "keyword",
                          "keyword": "undefined"
                        }
                      ]
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Message.ts",
            "line": 522,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "alias of Message.crosspost"
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "publish",
          "kind": "getter",
          "functionDef": {
            "params": [],
            "returnType": null,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Message.ts",
            "line": 535,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "wheter the message comes from a guild *"
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "inGuild",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "this is Message & { guildId: Snowflake; }",
              "kind": "typePredicate",
              "typePredicate": {
                "asserts": false,
                "param": {
                  "type": "this"
                },
                "type": {
                  "repr": "",
                  "kind": "intersection",
                  "intersection": [
                    {
                      "repr": "Message",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "Message"
                      }
                    },
                    {
                      "repr": "",
                      "kind": "typeLiteral",
                      "typeLiteral": {
                        "methods": [],
                        "properties": [
                          {
                            "name": "guildId",
                            "params": [],
                            "computed": false,
                            "optional": false,
                            "tsType": {
                              "repr": "Snowflake",
                              "kind": "typeRef",
                              "typeRef": {
                                "typeParams": null,
                                "typeName": "Snowflake"
                              }
                            },
                            "typeParams": []
                          }
                        ],
                        "callSignatures": [],
                        "indexSignatures": []
                      }
                    }
                  ]
                }
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Message.ts",
            "line": 540,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "wheter the messages comes from a Webhook"
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "isWebhookMessage",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "this is Message & { author: Partial<User>; webhook: WebhookAuthor; member: undefined; }",
              "kind": "typePredicate",
              "typePredicate": {
                "asserts": false,
                "param": {
                  "type": "this"
                },
                "type": {
                  "repr": "",
                  "kind": "intersection",
                  "intersection": [
                    {
                      "repr": "Message",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "Message"
                      }
                    },
                    {
                      "repr": "",
                      "kind": "typeLiteral",
                      "typeLiteral": {
                        "methods": [],
                        "properties": [
                          {
                            "name": "author",
                            "params": [],
                            "computed": false,
                            "optional": false,
                            "tsType": {
                              "repr": "Partial",
                              "kind": "typeRef",
                              "typeRef": {
                                "typeParams": [
                                  {
                                    "repr": "User",
                                    "kind": "typeRef",
                                    "typeRef": {
                                      "typeParams": null,
                                      "typeName": "User"
                                    }
                                  }
                                ],
                                "typeName": "Partial"
                              }
                            },
                            "typeParams": []
                          },
                          {
                            "name": "webhook",
                            "params": [],
                            "computed": false,
                            "optional": false,
                            "tsType": {
                              "repr": "WebhookAuthor",
                              "kind": "typeRef",
                              "typeRef": {
                                "typeParams": null,
                                "typeName": "WebhookAuthor"
                              }
                            },
                            "typeParams": []
                          },
                          {
                            "name": "member",
                            "params": [],
                            "computed": false,
                            "optional": false,
                            "tsType": {
                              "repr": "undefined",
                              "kind": "keyword",
                              "keyword": "undefined"
                            },
                            "typeParams": []
                          }
                        ],
                        "callSignatures": [],
                        "indexSignatures": []
                      }
                    }
                  ]
                }
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Message.ts",
            "line": 545,
            "col": 4
          }
        }
      ],
      "extends": null,
      "implements": [
        {
          "repr": "Model",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "Model"
          }
        }
      ],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "class",
    "name": "default",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Message.ts",
      "line": 97,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "tags": [
        {
          "kind": "unsupported",
          "value": "@link https://discord.com/developers/docs/resources/channel#message-object\nRepresents a message"
        }
      ]
    },
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "session",
              "optional": false,
              "tsType": {
                "repr": "Session",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Session"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "data",
              "optional": false,
              "tsType": {
                "repr": "DiscordMessage",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "DiscordMessage"
                }
              }
            }
          ],
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Message.ts",
            "line": 98,
            "col": 4
          }
        }
      ],
      "properties": [
        {
          "jsDoc": {
            "doc": "Reference to the client that instantiated this Message"
          },
          "tsType": {
            "repr": "Session",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Session"
            }
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "session",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Message.ts",
            "line": 203,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "id of the message"
          },
          "tsType": {
            "repr": "Snowflake",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Snowflake"
            }
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "id",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Message.ts",
            "line": 206,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "type of message"
          },
          "tsType": {
            "repr": "MessageTypes",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "MessageTypes"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "type",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Message.ts",
            "line": 209,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "id of the channel the message was sent in"
          },
          "tsType": {
            "repr": "Snowflake",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Snowflake"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "channelId",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Message.ts",
            "line": 212,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "id of the guild the message was sent in, this should exist on MESSAGE_CREATE and MESSAGE_UPDATE events"
          },
          "tsType": {
            "repr": "Snowflake",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Snowflake"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "guildId",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Message.ts",
            "line": 215,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "if the message is an Interaction or application-owned webhook, this is the id of the application"
          },
          "tsType": {
            "repr": "Snowflake",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Snowflake"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "applicationId",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Message.ts",
            "line": 218,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "mentions if any"
          },
          "tsType": {
            "repr": "",
            "kind": "typeLiteral",
            "typeLiteral": {
              "methods": [],
              "properties": [
                {
                  "name": "users",
                  "params": [],
                  "computed": false,
                  "optional": false,
                  "tsType": {
                    "repr": "",
                    "kind": "array",
                    "array": {
                      "repr": "User",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "User"
                      }
                    }
                  },
                  "typeParams": []
                },
                {
                  "name": "roleIds",
                  "params": [],
                  "computed": false,
                  "optional": false,
                  "tsType": {
                    "repr": "",
                    "kind": "array",
                    "array": {
                      "repr": "Snowflake",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "Snowflake"
                      }
                    }
                  },
                  "typeParams": []
                },
                {
                  "name": "channels",
                  "params": [],
                  "computed": false,
                  "optional": false,
                  "tsType": {
                    "repr": "",
                    "kind": "array",
                    "array": {
                      "repr": "Channel",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "Channel"
                      }
                    }
                  },
                  "typeParams": []
                }
              ],
              "callSignatures": [],
              "indexSignatures": []
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "mentions",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Message.ts",
            "line": 221,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "sent if the message is a response to an Interaction"
          },
          "tsType": {
            "repr": "MessageInteraction",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "MessageInteraction"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "interaction",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Message.ts",
            "line": 233,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "the author of this message, this field is **not** sent on webhook messages"
          },
          "tsType": {
            "repr": "User",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "User"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "author",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Message.ts",
            "line": 236,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "message flags combined as a bitfield"
          },
          "tsType": {
            "repr": "MessageFlags",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "MessageFlags"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "flags",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Message.ts",
            "line": 239,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "whether this message is pinned"
          },
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "pinned",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Message.ts",
            "line": 242,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "whether this was a TTS message"
          },
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "tts",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Message.ts",
            "line": 245,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "contents of the message"
          },
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "content",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Message.ts",
            "line": 248,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "used for validating a message was sent"
          },
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              },
              {
                "repr": "number",
                "kind": "keyword",
                "keyword": "number"
              }
            ]
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "nonce",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Message.ts",
            "line": 251,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "whether this message mentions everyone"
          },
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "mentionEveryone",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Message.ts",
            "line": 254,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "when this message was sent"
          },
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "timestamp",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Message.ts",
            "line": 257,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "when this message was edited"
          },
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "editedTimestamp",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Message.ts",
            "line": 260,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "sent if the message contains stickers\n**this contains sticker items not stickers**"
          },
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "StickerItem",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "StickerItem"
              }
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "stickers",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Message.ts",
            "line": 266,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "reactions to the message"
          },
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "MessageReaction",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "MessageReaction"
              }
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "reactions",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Message.ts",
            "line": 269,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "any attached files"
          },
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "Attachment",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "Attachment"
              }
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "attachments",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Message.ts",
            "line": 272,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "any embedded content"
          },
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "DiscordEmbed",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "DiscordEmbed"
              }
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "embeds",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Message.ts",
            "line": 275,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "member properties for this message's author"
          },
          "tsType": {
            "repr": "Member",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Member"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "member",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Message.ts",
            "line": 278,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "the thread that was started from this message, includes {@link ThreadMember}"
          },
          "tsType": {
            "repr": "ThreadChannel",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "ThreadChannel"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "thread",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Message.ts",
            "line": 281,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "sent if the message contains components like buttons, action rows, or other interactive components"
          },
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "Component",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "Component"
              }
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "components",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Message.ts",
            "line": 284,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "if the message is generated by a webhook, this is the webhook's author data"
          },
          "tsType": {
            "repr": "WebhookAuthor",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "WebhookAuthor"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "webhook",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Message.ts",
            "line": 287,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "sent with Rich Presence-related chat embeds"
          },
          "tsType": {
            "repr": "Partial",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": [
                {
                  "repr": "Application",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Application"
                  }
                }
              ],
              "typeName": "Partial"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "application",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Message.ts",
            "line": 290,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "sent with Rich Presence-related chat embeds"
          },
          "tsType": {
            "repr": "",
            "kind": "typeLiteral",
            "typeLiteral": {
              "methods": [],
              "properties": [
                {
                  "name": "partyId",
                  "params": [],
                  "computed": false,
                  "optional": true,
                  "tsType": {
                    "repr": "Snowflake",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Snowflake"
                    }
                  },
                  "typeParams": []
                },
                {
                  "name": "type",
                  "params": [],
                  "computed": false,
                  "optional": false,
                  "tsType": {
                    "repr": "MessageActivityTypes",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "MessageActivityTypes"
                    }
                  },
                  "typeParams": []
                }
              ],
              "callSignatures": [],
              "indexSignatures": []
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "activity",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Message.ts",
            "line": 293,
            "col": 4
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "jsDoc": {
            "doc": "gets the timestamp of this message, this does not requires the timestamp field"
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "createdTimestamp",
          "kind": "getter",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "number",
              "kind": "keyword",
              "keyword": "number"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Message.ts",
            "line": 299,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "gets the timestamp of this message as a Date"
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "createdAt",
          "kind": "getter",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "Date",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "Date"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Message.ts",
            "line": 304,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "gets the timestamp of this message (sent by the API)"
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "sentAt",
          "kind": "getter",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "Date",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "Date"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Message.ts",
            "line": 309,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "gets the edited timestamp as a Date"
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "editedAt",
          "kind": "getter",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "",
              "kind": "union",
              "union": [
                {
                  "repr": "Date",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Date"
                  }
                },
                {
                  "repr": "undefined",
                  "kind": "keyword",
                  "keyword": "undefined"
                }
              ]
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Message.ts",
            "line": 314,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "whether this message was edited"
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "edited",
          "kind": "getter",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "",
              "kind": "union",
              "union": [
                {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                },
                {
                  "repr": "undefined",
                  "kind": "keyword",
                  "keyword": "undefined"
                }
              ]
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Message.ts",
            "line": 319,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "gets the url of the message that points to the message"
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "url",
          "kind": "getter",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Message.ts",
            "line": 324,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "Compatibility with Discordeno\nsame as Message.author.bot"
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "isBot",
          "kind": "getter",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "boolean",
              "kind": "keyword",
              "keyword": "boolean"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Message.ts",
            "line": 332,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "Pins this message"
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "pin",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "void",
                    "kind": "keyword",
                    "keyword": "void"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Message.ts",
            "line": 339,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "Unpins this message"
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "unpin",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "void",
                    "kind": "keyword",
                    "keyword": "void"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Message.ts",
            "line": 350,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "Edits the current message"
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "edit",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "options",
                "optional": false,
                "tsType": {
                  "repr": "EditMessage",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "EditMessage"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "Message",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Message"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Message.ts",
            "line": 359,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "edits the current message flags to supress its embeds"
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "suppressEmbeds",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "suppress",
                "optional": false,
                "tsType": {
                  "repr": "true",
                  "kind": "literal",
                  "literal": {
                    "kind": "boolean",
                    "boolean": true
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "Message",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Message"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Message.ts",
            "line": 381,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "suppressEmbeds",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "suppress",
                "optional": false,
                "tsType": {
                  "repr": "false",
                  "kind": "literal",
                  "literal": {
                    "kind": "boolean",
                    "boolean": false
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "",
                    "kind": "union",
                    "union": [
                      {
                        "repr": "Message",
                        "kind": "typeRef",
                        "typeRef": {
                          "typeParams": null,
                          "typeName": "Message"
                        }
                      },
                      {
                        "repr": "undefined",
                        "kind": "keyword",
                        "keyword": "undefined"
                      }
                    ]
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Message.ts",
            "line": 382,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "suppressEmbeds",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "assign",
                "left": {
                  "kind": "identifier",
                  "name": "suppress",
                  "optional": false,
                  "tsType": null
                },
                "right": "[UNSUPPORTED]",
                "tsType": null
              }
            ],
            "returnType": null,
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Message.ts",
            "line": 383,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "deletes this message"
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "delete",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "object",
                "props": [
                  {
                    "kind": "assign",
                    "key": "reason",
                    "value": null
                  }
                ],
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "typeLiteral",
                  "typeLiteral": {
                    "methods": [],
                    "properties": [
                      {
                        "name": "reason",
                        "params": [],
                        "computed": false,
                        "optional": false,
                        "tsType": {
                          "repr": "string",
                          "kind": "keyword",
                          "keyword": "string"
                        },
                        "typeParams": []
                      }
                    ],
                    "callSignatures": [],
                    "indexSignatures": []
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "Message",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Message"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Message.ts",
            "line": 394,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "Replies directly in the channel where the message was sent"
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "reply",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "options",
                "optional": false,
                "tsType": {
                  "repr": "CreateMessage",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "CreateMessage"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "Message",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Message"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Message.ts",
            "line": 406,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "alias for Message.addReaction"
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "react",
          "kind": "getter",
          "functionDef": {
            "params": [],
            "returnType": null,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Message.ts",
            "line": 438,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "adds a Reaction"
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "addReaction",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "reaction",
                "optional": false,
                "tsType": {
                  "repr": "EmojiResolvable",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "EmojiResolvable"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "void",
                    "kind": "keyword",
                    "keyword": "void"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Message.ts",
            "line": 443,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "removes a reaction from someone"
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "removeReaction",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "reaction",
                "optional": false,
                "tsType": {
                  "repr": "EmojiResolvable",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "EmojiResolvable"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "options",
                "optional": true,
                "tsType": {
                  "repr": "",
                  "kind": "typeLiteral",
                  "typeLiteral": {
                    "methods": [],
                    "properties": [
                      {
                        "name": "userId",
                        "params": [],
                        "computed": false,
                        "optional": false,
                        "tsType": {
                          "repr": "Snowflake",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "Snowflake"
                          }
                        },
                        "typeParams": []
                      }
                    ],
                    "callSignatures": [],
                    "indexSignatures": []
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "void",
                    "kind": "keyword",
                    "keyword": "void"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Message.ts",
            "line": 455,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "Get users who reacted with this emoji\nnot recommended since the cache handles reactions already"
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "fetchReactions",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "reaction",
                "optional": false,
                "tsType": {
                  "repr": "EmojiResolvable",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "EmojiResolvable"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "options",
                "optional": true,
                "tsType": {
                  "repr": "GetReactions",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "GetReactions"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "",
                    "kind": "array",
                    "array": {
                      "repr": "User",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "User"
                      }
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Message.ts",
            "line": 476,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "same as Message.removeReaction but removes using a unicode emoji"
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "removeReactionEmoji",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "reaction",
                "optional": false,
                "tsType": {
                  "repr": "EmojiResolvable",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "EmojiResolvable"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "void",
                    "kind": "keyword",
                    "keyword": "void"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Message.ts",
            "line": 491,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "nukes every reaction on the message"
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "nukeReactions",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "void",
                    "kind": "keyword",
                    "keyword": "void"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Message.ts",
            "line": 502,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "publishes/crossposts a message to all followers"
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "crosspost",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "Message",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Message"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Message.ts",
            "line": 511,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "fetches this message, meant to be used with Function.call since its redundant"
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "fetch",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "",
                    "kind": "parenthesized",
                    "parenthesized": {
                      "repr": "",
                      "kind": "union",
                      "union": [
                        {
                          "repr": "Message",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "Message"
                          }
                        },
                        {
                          "repr": "undefined",
                          "kind": "keyword",
                          "keyword": "undefined"
                        }
                      ]
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Message.ts",
            "line": 522,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "alias of Message.crosspost"
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "publish",
          "kind": "getter",
          "functionDef": {
            "params": [],
            "returnType": null,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Message.ts",
            "line": 535,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "wheter the message comes from a guild *"
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "inGuild",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "this is Message & { guildId: Snowflake; }",
              "kind": "typePredicate",
              "typePredicate": {
                "asserts": false,
                "param": {
                  "type": "this"
                },
                "type": {
                  "repr": "",
                  "kind": "intersection",
                  "intersection": [
                    {
                      "repr": "Message",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "Message"
                      }
                    },
                    {
                      "repr": "",
                      "kind": "typeLiteral",
                      "typeLiteral": {
                        "methods": [],
                        "properties": [
                          {
                            "name": "guildId",
                            "params": [],
                            "computed": false,
                            "optional": false,
                            "tsType": {
                              "repr": "Snowflake",
                              "kind": "typeRef",
                              "typeRef": {
                                "typeParams": null,
                                "typeName": "Snowflake"
                              }
                            },
                            "typeParams": []
                          }
                        ],
                        "callSignatures": [],
                        "indexSignatures": []
                      }
                    }
                  ]
                }
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Message.ts",
            "line": 540,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "wheter the messages comes from a Webhook"
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "isWebhookMessage",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "this is Message & { author: Partial<User>; webhook: WebhookAuthor; member: undefined; }",
              "kind": "typePredicate",
              "typePredicate": {
                "asserts": false,
                "param": {
                  "type": "this"
                },
                "type": {
                  "repr": "",
                  "kind": "intersection",
                  "intersection": [
                    {
                      "repr": "Message",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "Message"
                      }
                    },
                    {
                      "repr": "",
                      "kind": "typeLiteral",
                      "typeLiteral": {
                        "methods": [],
                        "properties": [
                          {
                            "name": "author",
                            "params": [],
                            "computed": false,
                            "optional": false,
                            "tsType": {
                              "repr": "Partial",
                              "kind": "typeRef",
                              "typeRef": {
                                "typeParams": [
                                  {
                                    "repr": "User",
                                    "kind": "typeRef",
                                    "typeRef": {
                                      "typeParams": null,
                                      "typeName": "User"
                                    }
                                  }
                                ],
                                "typeName": "Partial"
                              }
                            },
                            "typeParams": []
                          },
                          {
                            "name": "webhook",
                            "params": [],
                            "computed": false,
                            "optional": false,
                            "tsType": {
                              "repr": "WebhookAuthor",
                              "kind": "typeRef",
                              "typeRef": {
                                "typeParams": null,
                                "typeName": "WebhookAuthor"
                              }
                            },
                            "typeParams": []
                          },
                          {
                            "name": "member",
                            "params": [],
                            "computed": false,
                            "optional": false,
                            "tsType": {
                              "repr": "undefined",
                              "kind": "keyword",
                              "keyword": "undefined"
                            },
                            "typeParams": []
                          }
                        ],
                        "callSignatures": [],
                        "indexSignatures": []
                      }
                    }
                  ]
                }
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Message.ts",
            "line": 545,
            "col": 4
          }
        }
      ],
      "extends": null,
      "implements": [
        {
          "repr": "Model",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "Model"
          }
        }
      ],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "import",
    "name": "Model",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Message.ts",
      "line": 1,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/structures/Base.ts",
      "imported": "Model"
    }
  },
  {
    "kind": "import",
    "name": "Session",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Message.ts",
      "line": 2,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/Session.ts",
      "imported": "Session"
    }
  },
  {
    "kind": "import",
    "name": "AllowedMentionsTypes",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Message.ts",
      "line": 3,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
      "imported": "AllowedMentionsTypes"
    }
  },
  {
    "kind": "import",
    "name": "DiscordEmbed",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Message.ts",
      "line": 3,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
      "imported": "DiscordEmbed"
    }
  },
  {
    "kind": "import",
    "name": "DiscordMessage",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Message.ts",
      "line": 3,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
      "imported": "DiscordMessage"
    }
  },
  {
    "kind": "import",
    "name": "DiscordMessageComponents",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Message.ts",
      "line": 3,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
      "imported": "DiscordMessageComponents"
    }
  },
  {
    "kind": "import",
    "name": "DiscordUser",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Message.ts",
      "line": 3,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
      "imported": "DiscordUser"
    }
  },
  {
    "kind": "import",
    "name": "FileContent",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Message.ts",
      "line": 3,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
      "imported": "FileContent"
    }
  },
  {
    "kind": "import",
    "name": "MessageActivityTypes",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Message.ts",
      "line": 3,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
      "imported": "MessageActivityTypes"
    }
  },
  {
    "kind": "import",
    "name": "MessageTypes",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Message.ts",
      "line": 3,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
      "imported": "MessageTypes"
    }
  },
  {
    "kind": "import",
    "name": "Channel",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Message.ts",
      "line": 13,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
      "imported": "Channel"
    }
  },
  {
    "kind": "import",
    "name": "Component",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Message.ts",
      "line": 14,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/Component.ts",
      "imported": "Component"
    }
  },
  {
    "kind": "import",
    "name": "GetReactions",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Message.ts",
      "line": 15,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/Routes.ts",
      "imported": "GetReactions"
    }
  },
  {
    "kind": "import",
    "name": "MessageInteraction",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Message.ts",
      "line": 16,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/InteractionFactory.ts",
      "imported": "MessageInteraction"
    }
  },
  {
    "kind": "import",
    "name": "MessageFlags",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Message.ts",
      "line": 17,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/Util.ts",
      "imported": "MessageFlags"
    }
  },
  {
    "kind": "import",
    "name": "Snowflake",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Message.ts",
      "line": 18,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/Snowflake.ts",
      "imported": "Snowflake"
    }
  },
  {
    "kind": "import",
    "name": "ChannelFactory",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Message.ts",
      "line": 19,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
      "imported": "ChannelFactory"
    }
  },
  {
    "kind": "import",
    "name": "ThreadChannel",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Message.ts",
      "line": 19,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/structures/channels.ts",
      "imported": "ThreadChannel"
    }
  },
  {
    "kind": "import",
    "name": "Util",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Message.ts",
      "line": 20,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/Util.ts",
      "imported": "default"
    }
  },
  {
    "kind": "import",
    "name": "User",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Message.ts",
      "line": 21,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/structures/User.ts",
      "imported": "default"
    }
  },
  {
    "kind": "import",
    "name": "Member",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Message.ts",
      "line": 22,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/structures/Member.ts",
      "imported": "default"
    }
  },
  {
    "kind": "import",
    "name": "Attachment",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Message.ts",
      "line": 23,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/structures/Attachment.ts",
      "imported": "default"
    }
  },
  {
    "kind": "import",
    "name": "ComponentFactory",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Message.ts",
      "line": 24,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/structures/components/ComponentFactory.ts",
      "imported": "default"
    }
  },
  {
    "kind": "import",
    "name": "MessageReaction",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Message.ts",
      "line": 25,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/structures/MessageReaction.ts",
      "imported": "default"
    }
  },
  {
    "kind": "import",
    "name": "Application",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Message.ts",
      "line": 26,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/structures/Application.ts",
      "imported": "default"
    }
  },
  {
    "kind": "import",
    "name": "NewTeam",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Message.ts",
      "line": 26,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/structures/Application.ts",
      "imported": "NewTeam"
    }
  },
  {
    "kind": "import",
    "name": "InteractionFactory",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Message.ts",
      "line": 27,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/structures/interactions/InteractionFactory.ts",
      "imported": "default"
    }
  },
  {
    "kind": "import",
    "name": "Routes",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Message.ts",
      "line": 28,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/Routes.ts",
      "imported": null
    }
  },
  {
    "kind": "import",
    "name": "StickerItem",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/Message.ts",
      "line": 29,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/structures/Sticker.ts",
      "imported": "StickerItem"
    }
  },
  {
    "kind": "namespace",
    "name": "Cdn",
    "location": {
      "filename": "./Cdn.ts",
      "line": 1,
      "col": 0
    },
    "declarationKind": "export",
    "namespaceDef": {
      "elements": [
        {
          "kind": "function",
          "name": "USER_AVATAR",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/Cdn.ts",
            "line": 4,
            "col": 0
          },
          "declarationKind": "export",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "userId",
                "optional": false,
                "tsType": {
                  "repr": "Snowflake",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Snowflake"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "icon",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          }
        },
        {
          "kind": "function",
          "name": "EMOJI_URL",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/Cdn.ts",
            "line": 8,
            "col": 0
          },
          "declarationKind": "export",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "id",
                "optional": false,
                "tsType": {
                  "repr": "Snowflake",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Snowflake"
                  }
                }
              },
              {
                "kind": "assign",
                "left": {
                  "kind": "identifier",
                  "name": "animated",
                  "optional": false,
                  "tsType": null
                },
                "right": "[UNSUPPORTED]",
                "tsType": null
              }
            ],
            "returnType": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          }
        },
        {
          "kind": "function",
          "name": "USER_DEFAULT_AVATAR",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/Cdn.ts",
            "line": 12,
            "col": 0
          },
          "declarationKind": "export",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "altIcon",
                "optional": false,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                }
              }
            ],
            "returnType": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          }
        },
        {
          "kind": "function",
          "name": "GUILD_BANNER",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/Cdn.ts",
            "line": 19,
            "col": 0
          },
          "declarationKind": "export",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "guildId",
                "optional": false,
                "tsType": {
                  "repr": "Snowflake",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Snowflake"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "icon",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          }
        },
        {
          "kind": "function",
          "name": "GUILD_SPLASH",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/Cdn.ts",
            "line": 23,
            "col": 0
          },
          "declarationKind": "export",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "guildId",
                "optional": false,
                "tsType": {
                  "repr": "Snowflake",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Snowflake"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "icon",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          }
        },
        {
          "kind": "function",
          "name": "GUILD_ICON",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/Cdn.ts",
            "line": 27,
            "col": 0
          },
          "declarationKind": "export",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "guildId",
                "optional": false,
                "tsType": {
                  "repr": "Snowflake",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Snowflake"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "icon",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          }
        },
        {
          "kind": "import",
          "name": "Snowflake",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/Cdn.ts",
            "line": 1,
            "col": 0
          },
          "declarationKind": "private",
          "importDef": {
            "src": "file:///C:/code/js/biscuit/packages/biscuit/Snowflake.ts",
            "imported": "Snowflake"
          }
        },
        {
          "kind": "import",
          "name": "Endpoints",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/Cdn.ts",
            "line": 2,
            "col": 0
          },
          "declarationKind": "private",
          "importDef": {
            "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
            "imported": "baseEndpoints"
          }
        }
      ]
    }
  },
  {
    "kind": "interface",
    "name": "EmbedFooter",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/EmbedBuilder.ts",
      "line": 3,
      "col": 0
    },
    "declarationKind": "export",
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "text",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/EmbedBuilder.ts",
            "line": 4,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "iconUrl",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/EmbedBuilder.ts",
            "line": 5,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "proxyIconUrl",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/EmbedBuilder.ts",
            "line": 6,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "EmbedAuthor",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/EmbedBuilder.ts",
      "line": 9,
      "col": 0
    },
    "declarationKind": "export",
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "name",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/EmbedBuilder.ts",
            "line": 10,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "text",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/EmbedBuilder.ts",
            "line": 11,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "url",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/EmbedBuilder.ts",
            "line": 12,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "iconUrl",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/EmbedBuilder.ts",
            "line": 13,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "proxyIconUrl",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/EmbedBuilder.ts",
            "line": 14,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "EmbedVideo",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/EmbedBuilder.ts",
      "line": 17,
      "col": 0
    },
    "declarationKind": "export",
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "height",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/EmbedBuilder.ts",
            "line": 18,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "proxyUrl",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/EmbedBuilder.ts",
            "line": 19,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "url",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/EmbedBuilder.ts",
            "line": 20,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "width",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/EmbedBuilder.ts",
            "line": 21,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "class",
    "name": "EmbedBuilder",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/EmbedBuilder.ts",
      "line": 24,
      "col": 0
    },
    "declarationKind": "export",
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "assign",
              "left": {
                "kind": "identifier",
                "name": "data",
                "optional": false,
                "tsType": {
                  "repr": "DiscordEmbed",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "DiscordEmbed"
                  }
                }
              },
              "right": "[UNSUPPORTED]",
              "tsType": null
            }
          ],
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/EmbedBuilder.ts",
            "line": 26,
            "col": 4
          }
        }
      ],
      "properties": [],
      "indexSignatures": [],
      "methods": [
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setAuthor",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "author",
                "optional": false,
                "tsType": {
                  "repr": "EmbedAuthor",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "EmbedAuthor"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "EmbedBuilder",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "EmbedBuilder"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/EmbedBuilder.ts",
            "line": 31,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setColor",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "color",
                "optional": false,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                }
              }
            ],
            "returnType": {
              "repr": "EmbedBuilder",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "EmbedBuilder"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/EmbedBuilder.ts",
            "line": 41,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setDescription",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "description",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "EmbedBuilder",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "EmbedBuilder"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/EmbedBuilder.ts",
            "line": 46,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "addField",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "field",
                "optional": false,
                "tsType": {
                  "repr": "DiscordEmbedField",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "DiscordEmbedField"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "EmbedBuilder",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "EmbedBuilder"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/EmbedBuilder.ts",
            "line": 51,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setFooter",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "footer",
                "optional": false,
                "tsType": {
                  "repr": "EmbedFooter",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "EmbedFooter"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "EmbedBuilder",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "EmbedBuilder"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/EmbedBuilder.ts",
            "line": 56,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setImage",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "image",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "EmbedBuilder",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "EmbedBuilder"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/EmbedBuilder.ts",
            "line": 65,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setProvider",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "provider",
                "optional": false,
                "tsType": {
                  "repr": "DiscordEmbedProvider",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "DiscordEmbedProvider"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "EmbedBuilder",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "EmbedBuilder"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/EmbedBuilder.ts",
            "line": 70,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setThumbnail",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "thumbnail",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "EmbedBuilder",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "EmbedBuilder"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/EmbedBuilder.ts",
            "line": 75,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setTimestamp",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "timestamp",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    {
                      "repr": "Date",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "Date"
                      }
                    }
                  ]
                }
              }
            ],
            "returnType": {
              "repr": "EmbedBuilder",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "EmbedBuilder"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/EmbedBuilder.ts",
            "line": 80,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setTitle",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "title",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "url",
                "optional": true,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "EmbedBuilder",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "EmbedBuilder"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/EmbedBuilder.ts",
            "line": 85,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setUrl",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "url",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "EmbedBuilder",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "EmbedBuilder"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/EmbedBuilder.ts",
            "line": 91,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setVideo",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "video",
                "optional": false,
                "tsType": {
                  "repr": "EmbedVideo",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "EmbedVideo"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "EmbedBuilder",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "EmbedBuilder"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/EmbedBuilder.ts",
            "line": 96,
            "col": 4
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "toJSON",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "DiscordEmbed",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "DiscordEmbed"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/EmbedBuilder.ts",
            "line": 106,
            "col": 4
          }
        }
      ],
      "extends": null,
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "import",
    "name": "DiscordEmbed",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/EmbedBuilder.ts",
      "line": 1,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
      "imported": "DiscordEmbed"
    }
  },
  {
    "kind": "import",
    "name": "DiscordEmbedField",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/EmbedBuilder.ts",
      "line": 1,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
      "imported": "DiscordEmbedField"
    }
  },
  {
    "kind": "import",
    "name": "DiscordEmbedProvider",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/structures/builders/EmbedBuilder.ts",
      "line": 1,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/discordeno/mod.ts",
      "imported": "DiscordEmbedProvider"
    }
  },
  {
    "kind": "import",
    "name": "Session",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/biscuit/mod.ts",
      "line": 2,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/Session.ts",
      "imported": "Session"
    }
  },
  {
    "kind": "variable",
    "name": "cache_sym",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/cache/mod.ts",
      "line": 12,
      "col": 0
    },
    "declarationKind": "export",
    "variableDef": {
      "tsType": {
        "repr": "Symbol",
        "kind": "keyword",
        "keyword": "symbol"
      },
      "kind": "const"
    }
  },
  {
    "kind": "interface",
    "name": "SessionCache",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/cache/mod.ts",
      "line": 14,
      "col": 0
    },
    "declarationKind": "export",
    "interfaceDef": {
      "extends": [
        {
          "repr": "SymCache",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "SymCache"
          }
        }
      ],
      "methods": [],
      "properties": [
        {
          "name": "guilds",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/cache/mod.ts",
            "line": 15,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "Collection",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": [
                {
                  "repr": "CachedGuild",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "CachedGuild"
                  }
                }
              ],
              "typeName": "Collection"
            }
          },
          "typeParams": []
        },
        {
          "name": "users",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/cache/mod.ts",
            "line": 16,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "Collection",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": [
                {
                  "repr": "CachedUser",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "CachedUser"
                  }
                }
              ],
              "typeName": "Collection"
            }
          },
          "typeParams": []
        },
        {
          "name": "dms",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/cache/mod.ts",
            "line": 17,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "Collection",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": [
                {
                  "repr": "CachedDMChannel",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "CachedDMChannel"
                  }
                }
              ],
              "typeName": "Collection"
            }
          },
          "typeParams": []
        },
        {
          "name": "emojis",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/cache/mod.ts",
            "line": 18,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "Collection",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": [
                {
                  "repr": "Emoji",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Emoji"
                  }
                }
              ],
              "typeName": "Collection"
            }
          },
          "typeParams": []
        },
        {
          "name": "session",
          "location": {
            "filename": "file:///C:/code/js/biscuit/packages/cache/mod.ts",
            "line": 19,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "Session",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Session"
            }
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "function",
    "name": "enableCache",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/cache/mod.ts",
      "line": 22,
      "col": 0
    },
    "declarationKind": "export",
    "functionDef": {
      "params": [
        {
          "kind": "identifier",
          "name": "session",
          "optional": false,
          "tsType": {
            "repr": "Session",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Session"
            }
          }
        }
      ],
      "returnType": {
        "repr": "SessionCache",
        "kind": "typeRef",
        "typeRef": {
          "typeParams": null,
          "typeName": "SessionCache"
        }
      },
      "isAsync": false,
      "isGenerator": false,
      "typeParams": []
    }
  },
  {
    "kind": "function",
    "name": "default",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/cache/mod.ts",
      "line": 22,
      "col": 0
    },
    "declarationKind": "export",
    "functionDef": {
      "params": [
        {
          "kind": "identifier",
          "name": "session",
          "optional": false,
          "tsType": {
            "repr": "Session",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Session"
            }
          }
        }
      ],
      "returnType": {
        "repr": "SessionCache",
        "kind": "typeRef",
        "typeRef": {
          "typeParams": null,
          "typeName": "SessionCache"
        }
      },
      "isAsync": false,
      "isGenerator": false,
      "typeParams": []
    }
  },
  {
    "kind": "import",
    "name": "Emoji",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/cache/mod.ts",
      "line": 1,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/cache/deps.ts",
      "imported": "Emoji"
    }
  },
  {
    "kind": "import",
    "name": "Session",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/cache/mod.ts",
      "line": 1,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/cache/deps.ts",
      "imported": "Session"
    }
  },
  {
    "kind": "import",
    "name": "SymCache",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/cache/mod.ts",
      "line": 1,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/cache/deps.ts",
      "imported": "SymCache"
    }
  },
  {
    "kind": "import",
    "name": "CachedGuild",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/cache/mod.ts",
      "line": 2,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/cache/guilds.ts",
      "imported": "CachedGuild"
    }
  },
  {
    "kind": "import",
    "name": "CachedUser",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/cache/mod.ts",
      "line": 3,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/cache/users.ts",
      "imported": "CachedUser"
    }
  },
  {
    "kind": "import",
    "name": "CachedDMChannel",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/cache/mod.ts",
      "line": 4,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/cache/channels.ts",
      "imported": "CachedDMChannel"
    }
  },
  {
    "kind": "import",
    "name": "Collection",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/cache/mod.ts",
      "line": 5,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/cache/Collection.ts",
      "imported": "Collection"
    }
  },
  {
    "kind": "import",
    "name": "memberBootstrapper",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/cache/mod.ts",
      "line": 6,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/cache/members.ts",
      "imported": "memberBootstrapper"
    }
  },
  {
    "kind": "import",
    "name": "userBootstrapper",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/cache/mod.ts",
      "line": 7,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/cache/users.ts",
      "imported": "userBootstrapper"
    }
  },
  {
    "kind": "import",
    "name": "channelBootstrapper",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/cache/mod.ts",
      "line": 8,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/cache/channels.ts",
      "imported": "channelBootstrapper"
    }
  },
  {
    "kind": "import",
    "name": "guildBootstrapper",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/cache/mod.ts",
      "line": 9,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/cache/guilds.ts",
      "imported": "guildBootstrapper"
    }
  },
  {
    "kind": "import",
    "name": "messageBootstrapper",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/cache/mod.ts",
      "line": 10,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/cache/messages.ts",
      "imported": "messageBootstrapper"
    }
  },
  {
    "kind": "import",
    "name": "reactionBootstrapper",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/cache/mod.ts",
      "line": 10,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/cache/messages.ts",
      "imported": "reactionBootstrapper"
    }
  },
  {
    "kind": "import",
    "name": "reactionBootstrapperDeletions",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/cache/mod.ts",
      "line": 10,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/cache/messages.ts",
      "imported": "reactionBootstrapperDeletions"
    }
  },
  {
    "kind": "function",
    "name": "enableCache",
    "location": {
      "filename": "file:///C:/code/js/biscuit/packages/cache/mod.ts",
      "line": 22,
      "col": 0
    },
    "declarationKind": "export",
    "functionDef": {
      "params": [
        {
          "kind": "identifier",
          "name": "session",
          "optional": false,
          "tsType": {
            "repr": "Session",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Session"
            }
          }
        }
      ],
      "returnType": {
        "repr": "SessionCache",
        "kind": "typeRef",
        "typeRef": {
          "typeParams": null,
          "typeName": "SessionCache"
        }
      },
      "isAsync": false,
      "isGenerator": false,
      "typeParams": []
    }
  },
  {
    "kind": "import",
    "name": "Session",
    "location": {
      "filename": "file:///C:/code/js/biscuit/mod.ts",
      "line": 1,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/code/js/biscuit/packages/biscuit/mod.ts",
      "imported": "default"
    }
  }
]
